

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Aug 04 12:42:23 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F887 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  008F                     	;# 
   123  0090                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0097                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009A                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  009F                     	;# 
   141  0105                     	;# 
   142  0107                     	;# 
   143  0108                     	;# 
   144  0109                     	;# 
   145  010C                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010F                     	;# 
   150  0185                     	;# 
   151  0187                     	;# 
   152  0188                     	;# 
   153  0189                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  0000                     	;# 
   157  0001                     	;# 
   158  0002                     	;# 
   159  0003                     	;# 
   160  0004                     	;# 
   161  0005                     	;# 
   162  0006                     	;# 
   163  0007                     	;# 
   164  0008                     	;# 
   165  0009                     	;# 
   166  000A                     	;# 
   167  000B                     	;# 
   168  000C                     	;# 
   169  000D                     	;# 
   170  000E                     	;# 
   171  000E                     	;# 
   172  000F                     	;# 
   173  0010                     	;# 
   174  0011                     	;# 
   175  0012                     	;# 
   176  0013                     	;# 
   177  0014                     	;# 
   178  0015                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001B                     	;# 
   186  001B                     	;# 
   187  001C                     	;# 
   188  001D                     	;# 
   189  001E                     	;# 
   190  001F                     	;# 
   191  0081                     	;# 
   192  0085                     	;# 
   193  0086                     	;# 
   194  0087                     	;# 
   195  0088                     	;# 
   196  0089                     	;# 
   197  008C                     	;# 
   198  008D                     	;# 
   199  008E                     	;# 
   200  008F                     	;# 
   201  0090                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0094                     	;# 
   208  0095                     	;# 
   209  0096                     	;# 
   210  0097                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009A                     	;# 
   214  009B                     	;# 
   215  009C                     	;# 
   216  009D                     	;# 
   217  009E                     	;# 
   218  009F                     	;# 
   219  0105                     	;# 
   220  0107                     	;# 
   221  0108                     	;# 
   222  0109                     	;# 
   223  010C                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  0185                     	;# 
   229  0187                     	;# 
   230  0188                     	;# 
   231  0189                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  000E                     	;# 
   249  000E                     	;# 
   250  000F                     	;# 
   251  0010                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001D                     	;# 
   267  001E                     	;# 
   268  001F                     	;# 
   269  0081                     	;# 
   270  0085                     	;# 
   271  0086                     	;# 
   272  0087                     	;# 
   273  0088                     	;# 
   274  0089                     	;# 
   275  008C                     	;# 
   276  008D                     	;# 
   277  008E                     	;# 
   278  008F                     	;# 
   279  0090                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0093                     	;# 
   285  0094                     	;# 
   286  0095                     	;# 
   287  0096                     	;# 
   288  0097                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009A                     	;# 
   292  009B                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  009F                     	;# 
   297  0105                     	;# 
   298  0107                     	;# 
   299  0108                     	;# 
   300  0109                     	;# 
   301  010C                     	;# 
   302  010C                     	;# 
   303  010D                     	;# 
   304  010E                     	;# 
   305  010F                     	;# 
   306  0185                     	;# 
   307  0187                     	;# 
   308  0188                     	;# 
   309  0189                     	;# 
   310  018C                     	;# 
   311  018D                     	;# 
   312  0000                     	;# 
   313  0001                     	;# 
   314  0002                     	;# 
   315  0003                     	;# 
   316  0004                     	;# 
   317  0005                     	;# 
   318  0006                     	;# 
   319  0007                     	;# 
   320  0008                     	;# 
   321  0009                     	;# 
   322  000A                     	;# 
   323  000B                     	;# 
   324  000C                     	;# 
   325  000D                     	;# 
   326  000E                     	;# 
   327  000E                     	;# 
   328  000F                     	;# 
   329  0010                     	;# 
   330  0011                     	;# 
   331  0012                     	;# 
   332  0013                     	;# 
   333  0014                     	;# 
   334  0015                     	;# 
   335  0015                     	;# 
   336  0016                     	;# 
   337  0017                     	;# 
   338  0018                     	;# 
   339  0019                     	;# 
   340  001A                     	;# 
   341  001B                     	;# 
   342  001B                     	;# 
   343  001C                     	;# 
   344  001D                     	;# 
   345  001E                     	;# 
   346  001F                     	;# 
   347  0081                     	;# 
   348  0085                     	;# 
   349  0086                     	;# 
   350  0087                     	;# 
   351  0088                     	;# 
   352  0089                     	;# 
   353  008C                     	;# 
   354  008D                     	;# 
   355  008E                     	;# 
   356  008F                     	;# 
   357  0090                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0093                     	;# 
   362  0093                     	;# 
   363  0094                     	;# 
   364  0095                     	;# 
   365  0096                     	;# 
   366  0097                     	;# 
   367  0098                     	;# 
   368  0099                     	;# 
   369  009A                     	;# 
   370  009B                     	;# 
   371  009C                     	;# 
   372  009D                     	;# 
   373  009E                     	;# 
   374  009F                     	;# 
   375  0105                     	;# 
   376  0107                     	;# 
   377  0108                     	;# 
   378  0109                     	;# 
   379  010C                     	;# 
   380  010C                     	;# 
   381  010D                     	;# 
   382  010E                     	;# 
   383  010F                     	;# 
   384  0185                     	;# 
   385  0187                     	;# 
   386  0188                     	;# 
   387  0189                     	;# 
   388  018C                     	;# 
   389  018D                     	;# 
   390                           
   391                           	psect	strings
   392  1800                     __pstrings:
   393  1800                     stringtab:
   394  1800                     __stringtab:
   395  1800                     stringcode:	
   396                           ;	String table - string pointers are 1 byte each
   397                           
   398  1800                     stringdir:
   399  1800  3018               	movlw	high stringdir
   400  1801  008A               	movwf	10
   401  1802  0804               	movf	4,w
   402  1803  0A84               	incf	4,f
   403  1804  0782               	addwf	2,f
   404  1805                     __stringbase:
   405  1805  3400               	retlw	0
   406  1806                     __end_of__stringtab:
   407  1806                     __powers_:
   408  1806  3400               	retlw	0
   409  1807  3400               	retlw	0
   410  1808  3480               	retlw	128
   411  1809  343F               	retlw	63
   412  180A  3400               	retlw	0
   413  180B  3400               	retlw	0
   414  180C  3420               	retlw	32
   415  180D  3441               	retlw	65
   416  180E  3400               	retlw	0
   417  180F  3400               	retlw	0
   418  1810  34C8               	retlw	200
   419  1811  3442               	retlw	66
   420  1812  3400               	retlw	0
   421  1813  3400               	retlw	0
   422  1814  347A               	retlw	122
   423  1815  3444               	retlw	68
   424  1816  3400               	retlw	0
   425  1817  3440               	retlw	64
   426  1818  341C               	retlw	28
   427  1819  3446               	retlw	70
   428  181A  3400               	retlw	0
   429  181B  3450               	retlw	80
   430  181C  34C3               	retlw	195
   431  181D  3447               	retlw	71
   432  181E  3400               	retlw	0
   433  181F  3424               	retlw	36
   434  1820  3474               	retlw	116
   435  1821  3449               	retlw	73
   436  1822  3480               	retlw	128
   437  1823  3496               	retlw	150
   438  1824  3418               	retlw	24
   439  1825  344B               	retlw	75
   440  1826  3420               	retlw	32
   441  1827  34BC               	retlw	188
   442  1828  34BE               	retlw	190
   443  1829  344C               	retlw	76
   444  182A  3428               	retlw	40
   445  182B  346B               	retlw	107
   446  182C  346E               	retlw	110
   447  182D  344E               	retlw	78
   448  182E  34F9               	retlw	249
   449  182F  3402               	retlw	2
   450  1830  3415               	retlw	21
   451  1831  3450               	retlw	80
   452  1832  34EC               	retlw	236
   453  1833  3478               	retlw	120
   454  1834  34AD               	retlw	173
   455  1835  3460               	retlw	96
   456  1836  34CA               	retlw	202
   457  1837  34F2               	retlw	242
   458  1838  3449               	retlw	73
   459  1839  3471               	retlw	113
   460  183A                     __end_of__powers_:
   461  183A                     __npowers_:
   462  183A  3400               	retlw	0
   463  183B  3400               	retlw	0
   464  183C  3480               	retlw	128
   465  183D  343F               	retlw	63
   466  183E  34CD               	retlw	205
   467  183F  34CC               	retlw	204
   468  1840  34CC               	retlw	204
   469  1841  343D               	retlw	61
   470  1842  340A               	retlw	10
   471  1843  34D7               	retlw	215
   472  1844  3423               	retlw	35
   473  1845  343C               	retlw	60
   474  1846  346F               	retlw	111
   475  1847  3412               	retlw	18
   476  1848  3483               	retlw	131
   477  1849  343A               	retlw	58
   478  184A  3417               	retlw	23
   479  184B  34B7               	retlw	183
   480  184C  34D1               	retlw	209
   481  184D  3438               	retlw	56
   482  184E  34AC               	retlw	172
   483  184F  34C5               	retlw	197
   484  1850  3427               	retlw	39
   485  1851  3437               	retlw	55
   486  1852  34BD               	retlw	189
   487  1853  3437               	retlw	55
   488  1854  3486               	retlw	134
   489  1855  3435               	retlw	53
   490  1856  3495               	retlw	149
   491  1857  34BF               	retlw	191
   492  1858  34D6               	retlw	214
   493  1859  3433               	retlw	51
   494  185A  3477               	retlw	119
   495  185B  34CC               	retlw	204
   496  185C  342B               	retlw	43
   497  185D  3432               	retlw	50
   498  185E  345F               	retlw	95
   499  185F  3470               	retlw	112
   500  1860  3489               	retlw	137
   501  1861  3430               	retlw	48
   502  1862  34FF               	retlw	255
   503  1863  34E6               	retlw	230
   504  1864  34DB               	retlw	219
   505  1865  342E               	retlw	46
   506  1866  3408               	retlw	8
   507  1867  34E5               	retlw	229
   508  1868  343C               	retlw	60
   509  1869  341E               	retlw	30
   510  186A  3460               	retlw	96
   511  186B  3442               	retlw	66
   512  186C  34A2               	retlw	162
   513  186D  340D               	retlw	13
   514  186E                     __end_of__npowers_:
   515  186E                     _dpowers:
   516  186E  3401               	retlw	1
   517  186F  3400               	retlw	0
   518  1870  3400               	retlw	0
   519  1871  3400               	retlw	0
   520  1872  340A               	retlw	10
   521  1873  3400               	retlw	0
   522  1874  3400               	retlw	0
   523  1875  3400               	retlw	0
   524  1876  3464               	retlw	100
   525  1877  3400               	retlw	0
   526  1878  3400               	retlw	0
   527  1879  3400               	retlw	0
   528  187A  34E8               	retlw	232
   529  187B  3403               	retlw	3
   530  187C  3400               	retlw	0
   531  187D  3400               	retlw	0
   532  187E  3410               	retlw	16
   533  187F  3427               	retlw	39
   534  1880  3400               	retlw	0
   535  1881  3400               	retlw	0
   536  1882  34A0               	retlw	160
   537  1883  3486               	retlw	134
   538  1884  3401               	retlw	1
   539  1885  3400               	retlw	0
   540  1886  3440               	retlw	64
   541  1887  3442               	retlw	66
   542  1888  340F               	retlw	15
   543  1889  3400               	retlw	0
   544  188A  3480               	retlw	128
   545  188B  3496               	retlw	150
   546  188C  3498               	retlw	152
   547  188D  3400               	retlw	0
   548  188E  3400               	retlw	0
   549  188F  34E1               	retlw	225
   550  1890  34F5               	retlw	245
   551  1891  3405               	retlw	5
   552  1892  3400               	retlw	0
   553  1893  34CA               	retlw	202
   554  1894  349A               	retlw	154
   555  1895  343B               	retlw	59
   556  1896                     __end_of_dpowers:
   557  0019                     _TXREG	set	25
   558  001A                     _RCREG	set	26
   559  000C                     _PIR1bits	set	12
   560  000B                     _INTCONbits	set	11
   561  0009                     _PORTEbits	set	9
   562  0008                     _PORTD	set	8
   563  0006                     _PORTB	set	6
   564  0018                     _RCSTAbits	set	24
   565  0013                     _SSPBUF	set	19
   566  0014                     _SSPCON	set	20
   567  0064                     _TXIF	set	100
   568  0065                     _RCIF	set	101
   569  008C                     _PIE1bits	set	140
   570  0088                     _TRISD	set	136
   571  0086                     _TRISB	set	134
   572  009A                     _SPBRGH	set	154
   573  0099                     _SPBRG	set	153
   574  0098                     _TXSTAbits	set	152
   575  008F                     _OSCCONbits	set	143
   576  0094                     _SSPSTATbits	set	148
   577  0094                     _SSPSTAT	set	148
   578  0448                     _TRISE0	set	1096
   579  043B                     _TRISC3	set	1083
   580  043D                     _TRISC5	set	1085
   581  0189                     _ANSELH	set	393
   582  0188                     _ANSEL	set	392
   583  0187                     _BAUDCTLbits	set	391
   584  1896                     STR_1:
   585  1896  3425               	retlw	37	;'%'
   586  1897  3433               	retlw	51	;'3'
   587  1898  342E               	retlw	46	;'.'
   588  1899  3432               	retlw	50	;'2'
   589  189A  3466               	retlw	102	;'f'
   590  189B  3400               	retlw	0
   591  1896                     
   592                           	psect	cinit
   593  07F3                     start_initialization:	
   594                           ; #config settings
   595                           
   596  07F3                     __initialization:
   597                           
   598                           ; Clear objects allocated to BANK1
   599  07F3  1383               	bcf	3,7	;select IRP bank0
   600  07F4  30C9               	movlw	low __pbssBANK1
   601  07F5  0084               	movwf	4
   602  07F6  30DB               	movlw	low (__pbssBANK1+18)
   603  07F7  160A  158A  243E  120A  118A  	fcall	clear_ram0
   604  07FC                     end_of_initialization:	
   605                           ;End of C runtime variable initialization code
   606                           
   607  07FC                     __end_of__initialization:
   608  07FC  0183               	clrf	3
   609  07FD  160A  118A  2969   	ljmp	_main	;jump to C main() function
   610                           
   611                           	psect	bssBANK1
   612  00C9                     __pbssBANK1:
   613  00C9                     _conv2:
   614  00C9                     	ds	4
   615  00CD                     _conv1:
   616  00CD                     	ds	4
   617  00D1                     _i:
   618  00D1                     	ds	1
   619  00D2                     _canal:
   620  00D2                     	ds	1
   621  00D3                     _voltaje2:
   622  00D3                     	ds	4
   623  00D7                     _voltaje1:
   624  00D7                     	ds	4
   625                           
   626                           	psect	clrtext
   627  1C3E                     clear_ram0:	
   628                           ;	Called with FSR containing the base address, and
   629                           ;	W with the last address+1
   630                           
   631  1C3E  0064               	clrwdt	;clear the watchdog before getting into this loop
   632  1C3F                     clrloop0:
   633  1C3F  0180               	clrf	0	;clear RAM location pointed to by FSR
   634  1C40  0A84               	incf	4,f	;increment pointer
   635  1C41  0604               	xorwf	4,w	;XOR with final address
   636  1C42  1903               	btfsc	3,2	;have we reached the end yet?
   637  1C43  3400               	retlw	0	;all done for this memory range, return
   638  1C44  0604               	xorwf	4,w	;XOR again to restore value
   639  1C45  2C3F               	goto	clrloop0	;do the next byte
   640                           
   641                           	psect	cstackBANK1
   642  00A0                     __pcstackBANK1:
   643  00A0                     ?_sprintf:
   644  00A0                     sprintf@f:	
   645                           ; 2 bytes @ 0x0
   646                           
   647                           
   648                           ; 1 bytes @ 0x0
   649  00A0                     	ds	5
   650  00A5                     ??_sprintf:
   651                           
   652                           ; 1 bytes @ 0x5
   653  00A5                     	ds	5
   654  00AA                     _sprintf$1164:
   655                           
   656                           ; 4 bytes @ 0xA
   657  00AA                     	ds	4
   658  00AE                     sprintf@ap:
   659                           
   660                           ; 1 bytes @ 0xE
   661  00AE                     	ds	1
   662  00AF                     sprintf@val:
   663                           
   664                           ; 4 bytes @ 0xF
   665  00AF                     	ds	4
   666  00B3                     sprintf@flag:
   667                           
   668                           ; 2 bytes @ 0x13
   669  00B3                     	ds	2
   670  00B5                     sprintf@width:
   671                           
   672                           ; 2 bytes @ 0x15
   673  00B5                     	ds	2
   674  00B7                     sprintf@tmpval:
   675                           
   676                           ; 4 bytes @ 0x17
   677  00B7                     	ds	4
   678  00BB                     sprintf@eexp:
   679                           
   680                           ; 2 bytes @ 0x1B
   681  00BB                     	ds	2
   682  00BD                     sprintf@fval:
   683                           
   684                           ; 4 bytes @ 0x1D
   685  00BD                     	ds	4
   686  00C1                     sprintf@sp:
   687                           
   688                           ; 1 bytes @ 0x21
   689  00C1                     	ds	1
   690  00C2                     sprintf@prec:
   691                           
   692                           ; 2 bytes @ 0x22
   693  00C2                     	ds	2
   694  00C4                     sprintf@c:
   695                           
   696                           ; 1 bytes @ 0x24
   697  00C4                     	ds	1
   698  00C5                     ??_main:
   699                           
   700                           ; 1 bytes @ 0x25
   701  00C5                     	ds	4
   702                           
   703                           	psect	cstackCOMMON
   704  0070                     __pcstackCOMMON:
   705  0070                     ?_isdigit:
   706  0070                     ?___fleq:	
   707                           ; 1 bit 
   708                           
   709  0070                     ?___flge:	
   710                           ; 1 bit 
   711                           
   712  0070                     ??_isdigit:	
   713                           ; 1 bit 
   714                           
   715  0070                     ?_spiInit:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ?_spiReceiveWait:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ??_spiReceiveWait:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?_spiWrite:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ??_spiWrite:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ?_spiRead:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ??_spiRead:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ?_conf_OSCCON:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ??_conf_OSCCON:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ?_conf_USART:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ??_conf_USART:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ?_main:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ?_strlen:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ?__Umul8_16:	
   755                           ; 2 bytes @ 0x0
   756                           
   757  0070                     ?___wmul:	
   758                           ; 2 bytes @ 0x0
   759                           
   760  0070                     ?___awmod:	
   761                           ; 2 bytes @ 0x0
   762                           
   763  0070                     ?___lwmod:	
   764                           ; 2 bytes @ 0x0
   765                           
   766  0070                     ?__tdiv_to_l_:	
   767                           ; 2 bytes @ 0x0
   768                           
   769  0070                     ?__div_to_l_:	
   770                           ; 4 bytes @ 0x0
   771                           
   772  0070                     ?___lldiv:	
   773                           ; 4 bytes @ 0x0
   774                           
   775  0070                     ?___flneg:	
   776                           ; 4 bytes @ 0x0
   777                           
   778  0070                     ?___llmod:	
   779                           ; 4 bytes @ 0x0
   780                           
   781  0070                     ?___xxtofl:	
   782                           ; 4 bytes @ 0x0
   783                           
   784  0070                     spiInit@sDataSample:	
   785                           ; 4 bytes @ 0x0
   786                           
   787  0070                     spiWrite@dat:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0070                     __Umul8_16@multiplicand:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0070                     _isdigit$977:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0070                     ___wmul@multiplier:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0070                     ___awmod@divisor:	
   800                           ; 2 bytes @ 0x0
   801                           
   802  0070                     ___lwmod@divisor:	
   803                           ; 2 bytes @ 0x0
   804                           
   805  0070                     ___lldiv@divisor:	
   806                           ; 2 bytes @ 0x0
   807                           
   808  0070                     __div_to_l_@f1:	
   809                           ; 4 bytes @ 0x0
   810                           
   811  0070                     ___fleq@ff1:	
   812                           ; 4 bytes @ 0x0
   813                           
   814  0070                     ___flge@ff1:	
   815                           ; 4 bytes @ 0x0
   816                           
   817  0070                     ___flneg@f1:	
   818                           ; 4 bytes @ 0x0
   819                           
   820  0070                     __tdiv_to_l_@f1:	
   821                           ; 4 bytes @ 0x0
   822                           
   823  0070                     ___llmod@divisor:	
   824                           ; 4 bytes @ 0x0
   825                           
   826  0070                     ___xxtofl@val:	
   827                           ; 4 bytes @ 0x0
   828                           
   829                           
   830                           ; 4 bytes @ 0x0
   831  0070                     	ds	1
   832  0071                     spiInit@sClockIdle:
   833  0071                     isdigit@c:	
   834                           ; 1 bytes @ 0x1
   835                           
   836                           
   837                           ; 1 bytes @ 0x1
   838  0071                     	ds	1
   839  0072                     ??_strlen:
   840  0072                     ??__Umul8_16:	
   841                           ; 1 bytes @ 0x2
   842                           
   843  0072                     spiInit@sTransmitEdge:	
   844                           ; 1 bytes @ 0x2
   845                           
   846  0072                     conf_OSCCON@frecuencia:	
   847                           ; 1 bytes @ 0x2
   848                           
   849  0072                     ___wmul@multiplicand:	
   850                           ; 1 bytes @ 0x2
   851                           
   852  0072                     ___awmod@dividend:	
   853                           ; 2 bytes @ 0x2
   854                           
   855  0072                     ___lwmod@dividend:	
   856                           ; 2 bytes @ 0x2
   857                           
   858                           
   859                           ; 2 bytes @ 0x2
   860  0072                     	ds	1
   861  0073                     ??_spiInit:
   862  0073                     spiInit@sType:	
   863                           ; 1 bytes @ 0x3
   864                           
   865  0073                     strlen@cp:	
   866                           ; 1 bytes @ 0x3
   867                           
   868                           
   869                           ; 1 bytes @ 0x3
   870  0073                     	ds	1
   871  0074                     ??___wmul:
   872  0074                     ??___awmod:	
   873                           ; 1 bytes @ 0x4
   874                           
   875  0074                     ??___flneg:	
   876                           ; 1 bytes @ 0x4
   877                           
   878  0074                     ??___lwmod:	
   879                           ; 1 bytes @ 0x4
   880                           
   881  0074                     ??___xxtofl:	
   882                           ; 1 bytes @ 0x4
   883                           
   884  0074                     strlen@s:	
   885                           ; 1 bytes @ 0x4
   886                           
   887  0074                     ___wmul@product:	
   888                           ; 1 bytes @ 0x4
   889                           
   890  0074                     __Umul8_16@product:	
   891                           ; 2 bytes @ 0x4
   892                           
   893  0074                     ___lldiv@dividend:	
   894                           ; 2 bytes @ 0x4
   895                           
   896  0074                     __div_to_l_@f2:	
   897                           ; 4 bytes @ 0x4
   898                           
   899  0074                     ___fleq@ff2:	
   900                           ; 4 bytes @ 0x4
   901                           
   902  0074                     ___flge@ff2:	
   903                           ; 4 bytes @ 0x4
   904                           
   905  0074                     __tdiv_to_l_@f2:	
   906                           ; 4 bytes @ 0x4
   907                           
   908  0074                     ___llmod@dividend:	
   909                           ; 4 bytes @ 0x4
   910                           
   911                           
   912                           ; 4 bytes @ 0x4
   913  0074                     	ds	1
   914  0075                     ___awmod@counter:
   915  0075                     ___lwmod@counter:	
   916                           ; 1 bytes @ 0x5
   917                           
   918                           
   919                           ; 1 bytes @ 0x5
   920  0075                     	ds	1
   921  0076                     ?___lwdiv:
   922  0076                     ___awmod@sign:	
   923                           ; 2 bytes @ 0x6
   924                           
   925  0076                     ___lwdiv@divisor:	
   926                           ; 1 bytes @ 0x6
   927                           
   928  0076                     __Umul8_16@word_mpld:	
   929                           ; 2 bytes @ 0x6
   930                           
   931                           
   932                           ; 2 bytes @ 0x6
   933  0076                     	ds	1
   934  0077                     ?___awdiv:
   935  0077                     ___awdiv@divisor:	
   936                           ; 2 bytes @ 0x7
   937                           
   938                           
   939                           ; 2 bytes @ 0x7
   940  0077                     	ds	1
   941  0078                     ??__tdiv_to_l_:
   942  0078                     ??__div_to_l_:	
   943                           ; 1 bytes @ 0x8
   944                           
   945  0078                     ??___lldiv:	
   946                           ; 1 bytes @ 0x8
   947                           
   948  0078                     ??___fleq:	
   949                           ; 1 bytes @ 0x8
   950                           
   951  0078                     ??___flge:	
   952                           ; 1 bytes @ 0x8
   953                           
   954  0078                     ??___llmod:	
   955                           ; 1 bytes @ 0x8
   956                           
   957  0078                     __Umul8_16@multiplier:	
   958                           ; 1 bytes @ 0x8
   959                           
   960  0078                     ___xxtofl@sign:	
   961                           ; 1 bytes @ 0x8
   962                           
   963  0078                     ___lwdiv@dividend:	
   964                           ; 1 bytes @ 0x8
   965                           
   966                           
   967                           ; 2 bytes @ 0x8
   968  0078                     	ds	1
   969  0079                     ___llmod@counter:
   970  0079                     ___xxtofl@exp:	
   971                           ; 1 bytes @ 0x9
   972                           
   973  0079                     ___awdiv@dividend:	
   974                           ; 1 bytes @ 0x9
   975                           
   976  0079                     ___lldiv@quotient:	
   977                           ; 2 bytes @ 0x9
   978                           
   979                           
   980                           ; 4 bytes @ 0x9
   981  0079                     	ds	1
   982  007A                     ??___lwdiv:
   983  007A                     ___xxtofl@arg:	
   984                           ; 1 bytes @ 0xA
   985                           
   986                           
   987                           ; 4 bytes @ 0xA
   988  007A                     	ds	1
   989  007B                     ??___awdiv:
   990  007B                     ___lwdiv@quotient:	
   991                           ; 1 bytes @ 0xB
   992                           
   993                           
   994                           ; 2 bytes @ 0xB
   995  007B                     	ds	2
   996  007D                     ___lldiv@counter:
   997  007D                     ___lwdiv@counter:	
   998                           ; 1 bytes @ 0xD
   999                           
  1000                           
  1001                           ; 1 bytes @ 0xD
  1002  007D                     	ds	1
  1003  007E                     ??___flsub:
  1004                           
  1005                           	psect	cstackBANK0
  1006  0020                     __pcstackBANK0:	
  1007                           ; 1 bytes @ 0xE
  1008                           
  1009  0020                     ___awdiv@counter:
  1010  0020                     __div_to_l_@quot:	
  1011                           ; 1 bytes @ 0x0
  1012                           
  1013  0020                     __tdiv_to_l_@quot:	
  1014                           ; 4 bytes @ 0x0
  1015                           
  1016                           
  1017                           ; 4 bytes @ 0x0
  1018  0020                     	ds	1
  1019  0021                     ___awdiv@sign:
  1020                           
  1021                           ; 1 bytes @ 0x1
  1022  0021                     	ds	1
  1023  0022                     ___awdiv@quotient:
  1024                           
  1025                           ; 2 bytes @ 0x2
  1026  0022                     	ds	2
  1027  0024                     ?___flmul:
  1028  0024                     __div_to_l_@cntr:	
  1029                           ; 4 bytes @ 0x4
  1030                           
  1031  0024                     __tdiv_to_l_@cntr:	
  1032                           ; 1 bytes @ 0x4
  1033                           
  1034  0024                     ___flmul@b:	
  1035                           ; 1 bytes @ 0x4
  1036                           
  1037                           
  1038                           ; 4 bytes @ 0x4
  1039  0024                     	ds	1
  1040  0025                     __div_to_l_@exp1:
  1041  0025                     __tdiv_to_l_@exp1:	
  1042                           ; 1 bytes @ 0x5
  1043                           
  1044                           
  1045                           ; 1 bytes @ 0x5
  1046  0025                     	ds	3
  1047  0028                     ___flmul@a:
  1048                           
  1049                           ; 4 bytes @ 0x8
  1050  0028                     	ds	4
  1051  002C                     ??___flmul:
  1052                           
  1053                           ; 1 bytes @ 0xC
  1054  002C                     	ds	5
  1055  0031                     ___flmul@sign:
  1056                           
  1057                           ; 1 bytes @ 0x11
  1058  0031                     	ds	1
  1059  0032                     ___flmul@grs:
  1060                           
  1061                           ; 4 bytes @ 0x12
  1062  0032                     	ds	4
  1063  0036                     ___flmul@aexp:
  1064                           
  1065                           ; 1 bytes @ 0x16
  1066  0036                     	ds	1
  1067  0037                     ___flmul@bexp:
  1068                           
  1069                           ; 1 bytes @ 0x17
  1070  0037                     	ds	1
  1071  0038                     ___flmul@prod:
  1072                           
  1073                           ; 4 bytes @ 0x18
  1074  0038                     	ds	4
  1075  003C                     ___flmul@temp:
  1076                           
  1077                           ; 2 bytes @ 0x1C
  1078  003C                     	ds	2
  1079  003E                     ?_fround:
  1080  003E                     ?_scale:	
  1081                           ; 4 bytes @ 0x1E
  1082                           
  1083                           
  1084                           ; 4 bytes @ 0x1E
  1085  003E                     	ds	4
  1086  0042                     ??_fround:
  1087  0042                     ??_scale:	
  1088                           ; 1 bytes @ 0x22
  1089                           
  1090                           
  1091                           ; 1 bytes @ 0x22
  1092  0042                     	ds	7
  1093  0049                     _fround$1162:
  1094                           
  1095                           ; 4 bytes @ 0x29
  1096  0049                     	ds	3
  1097  004C                     _scale$1163:
  1098                           
  1099                           ; 4 bytes @ 0x2C
  1100  004C                     	ds	1
  1101  004D                     _fround$1161:
  1102                           
  1103                           ; 4 bytes @ 0x2D
  1104  004D                     	ds	3
  1105  0050                     scale@scl:
  1106                           
  1107                           ; 1 bytes @ 0x30
  1108  0050                     	ds	1
  1109  0051                     ?___fltol:
  1110  0051                     fround@prec:	
  1111                           ; 4 bytes @ 0x31
  1112                           
  1113  0051                     ___fltol@f1:	
  1114                           ; 1 bytes @ 0x31
  1115                           
  1116                           
  1117                           ; 4 bytes @ 0x31
  1118  0051                     	ds	1
  1119  0052                     ?___fladd:
  1120  0052                     ___fladd@b:	
  1121                           ; 4 bytes @ 0x32
  1122                           
  1123                           
  1124                           ; 4 bytes @ 0x32
  1125  0052                     	ds	3
  1126  0055                     ??___fltol:
  1127                           
  1128                           ; 1 bytes @ 0x35
  1129  0055                     	ds	1
  1130  0056                     ___fladd@a:
  1131                           
  1132                           ; 4 bytes @ 0x36
  1133  0056                     	ds	4
  1134  005A                     ??___fladd:
  1135  005A                     ___fltol@sign1:	
  1136                           ; 1 bytes @ 0x3A
  1137                           
  1138                           
  1139                           ; 1 bytes @ 0x3A
  1140  005A                     	ds	1
  1141  005B                     ___fltol@exp1:
  1142                           
  1143                           ; 1 bytes @ 0x3B
  1144  005B                     	ds	7
  1145  0062                     ___fladd@signs:
  1146                           
  1147                           ; 1 bytes @ 0x42
  1148  0062                     	ds	1
  1149  0063                     ___fladd@aexp:
  1150                           
  1151                           ; 1 bytes @ 0x43
  1152  0063                     	ds	1
  1153  0064                     ___fladd@bexp:
  1154                           
  1155                           ; 1 bytes @ 0x44
  1156  0064                     	ds	1
  1157  0065                     ___fladd@grs:
  1158                           
  1159                           ; 1 bytes @ 0x45
  1160  0065                     	ds	1
  1161  0066                     ?___flsub:
  1162  0066                     ___flsub@a:	
  1163                           ; 4 bytes @ 0x46
  1164                           
  1165                           
  1166                           ; 4 bytes @ 0x46
  1167  0066                     	ds	4
  1168  006A                     ___flsub@b:
  1169                           
  1170                           ; 4 bytes @ 0x4A
  1171  006A                     	ds	4
  1172                           
  1173                           	psect	maintext
  1174  1169                     __pmaintext:	
  1175 ;;
  1176 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1177 ;;
  1178 ;; *************** function _main *****************
  1179 ;; Defined at:
  1180 ;;		line 48 in file "lab03_maestro.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : B00/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1194 ;;      Params:         0       0       0       0       0
  1195 ;;      Locals:         0       0       0       0       0
  1196 ;;      Temps:          0       0       4       0       0
  1197 ;;      Totals:         0       0       4       0       0
  1198 ;;Total ram usage:        4 bytes
  1199 ;; Hardware stack levels required when called:    4
  1200 ;; This function calls:
  1201 ;;		___flmul
  1202 ;;		___xxtofl
  1203 ;;		_conf_OSCCON
  1204 ;;		_conf_USART
  1205 ;;		_spiInit
  1206 ;;		_spiRead
  1207 ;;		_spiWrite
  1208 ;;		_sprintf
  1209 ;;		_strlen
  1210 ;; This function is called by:
  1211 ;;		Startup code after reset
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           
  1216                           ;psect for function _main
  1217  1169                     _main:
  1218  1169                     l3420:	
  1219                           ;incstack = 0
  1220                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1221                           
  1222                           
  1223                           ;lab03_maestro.c: 52: ANSEL = 0;
  1224  1169  1683               	bsf	3,5	;RP0=1, select bank3
  1225  116A  1703               	bsf	3,6	;RP1=1, select bank3
  1226  116B  0188               	clrf	8	;volatile
  1227                           
  1228                           ;lab03_maestro.c: 53: ANSELH = 0;
  1229  116C  0189               	clrf	9	;volatile
  1230  116D                     l3422:
  1231                           
  1232                           ;lab03_maestro.c: 54: TRISE0 = 0;
  1233  116D  1683               	bsf	3,5	;RP0=1, select bank1
  1234  116E  1303               	bcf	3,6	;RP1=0, select bank1
  1235  116F  1009               	bcf	9,0	;volatile
  1236                           
  1237                           ;lab03_maestro.c: 55: TRISB = 0;
  1238  1170  0186               	clrf	6	;volatile
  1239                           
  1240                           ;lab03_maestro.c: 56: TRISD = 0;
  1241  1171  0188               	clrf	8	;volatile
  1242                           
  1243                           ;lab03_maestro.c: 57: PORTB = 0;
  1244  1172  1283               	bcf	3,5	;RP0=0, select bank0
  1245  1173  1303               	bcf	3,6	;RP1=0, select bank0
  1246  1174  0186               	clrf	6	;volatile
  1247                           
  1248                           ;lab03_maestro.c: 58: PORTD = 0;
  1249  1175  0188               	clrf	8	;volatile
  1250  1176                     l3424:
  1251                           
  1252                           ;lab03_maestro.c: 60: PORTEbits.RE0 = 1;
  1253  1176  1409               	bsf	9,0	;volatile
  1254  1177                     l3426:
  1255                           
  1256                           ;lab03_maestro.c: 67: conf_OSCCON(8);
  1257  1177  3008               	movlw	8
  1258  1178  160A  158A  2684  160A  118A  	fcall	_conf_OSCCON
  1259  117D                     l3428:
  1260                           
  1261                           ;lab03_maestro.c: 71: spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDL
      +                          E_LOW, SPI_IDLE_2_ACTIVE);
  1262  117D  01F0               	clrf	spiInit@sDataSample
  1263  117E  01F1               	clrf	spiInit@sClockIdle
  1264  117F  01F2               	clrf	spiInit@sTransmitEdge
  1265  1180  3020               	movlw	32
  1266  1181  160A  158A  246C  160A  118A  	fcall	_spiInit
  1267  1186                     l3430:
  1268                           
  1269                           ;lab03_maestro.c: 75: conf_USART();
  1270  1186  160A  158A  2458  160A  118A  	fcall	_conf_USART
  1271  118B                     l3432:
  1272                           
  1273                           ;lab03_maestro.c: 79: INTCONbits.GIE = 1;
  1274  118B  178B               	bsf	11,7	;volatile
  1275  118C                     l3434:
  1276                           
  1277                           ;lab03_maestro.c: 80: INTCONbits.PEIE = 1;
  1278  118C  170B               	bsf	11,6	;volatile
  1279  118D                     l3436:
  1280                           
  1281                           ;lab03_maestro.c: 81: PIE1bits.RCIE = 1;
  1282  118D  1683               	bsf	3,5	;RP0=1, select bank1
  1283  118E  1303               	bcf	3,6	;RP1=0, select bank1
  1284  118F  168C               	bsf	12,5	;volatile
  1285  1190                     l3438:
  1286                           
  1287                           ;lab03_maestro.c: 82: PIR1bits.RCIF = 0;
  1288  1190  1283               	bcf	3,5	;RP0=0, select bank0
  1289  1191  1303               	bcf	3,6	;RP1=0, select bank0
  1290  1192  128C               	bcf	12,5	;volatile
  1291  1193                     l126:
  1292  1193  1283               	bcf	3,5	;RP0=0, select bank0
  1293  1194  1E8C               	btfss	12,5	;volatile
  1294  1195  2997               	goto	u5531
  1295  1196  2998               	goto	u5530
  1296  1197                     u5531:
  1297  1197  2993               	goto	l126
  1298  1198                     u5530:
  1299  1198                     l3440:
  1300                           
  1301                           ;lab03_maestro.c: 91:     PORTB = RCREG;
  1302  1198  081A               	movf	26,w	;volatile
  1303  1199  0086               	movwf	6	;volatile
  1304                           
  1305                           ;lab03_maestro.c: 93:     switch (canal) {
  1306  119A  2B4C               	goto	l3500
  1307  119B                     l130:	
  1308                           ;lab03_maestro.c: 94:         case(0):
  1309                           
  1310                           
  1311                           ;lab03_maestro.c: 96:             PORTEbits.RE0 = 0;
  1312  119B  1283               	bcf	3,5	;RP0=0, select bank0
  1313  119C  1303               	bcf	3,6	;RP1=0, select bank0
  1314  119D  1009               	bcf	9,0	;volatile
  1315  119E                     l3442:
  1316                           
  1317                           ;lab03_maestro.c: 97:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1318  119E  3003               	movlw	3
  1319  119F  1683               	bsf	3,5	;RP0=1, select bank1
  1320  11A0  1303               	bcf	3,6	;RP1=0, select bank1
  1321  11A1  00C6               	movwf	(??_main^(0+128)+1)
  1322  11A2  3097               	movlw	151
  1323  11A3  00C5               	movwf	??_main^(0+128)
  1324  11A4                     u5597:
  1325  11A4  0BC5               	decfsz	??_main^(0+128),f
  1326  11A5  29A4               	goto	u5597
  1327  11A6  0BC6               	decfsz	(??_main^(0+128)+1),f
  1328  11A7  29A4               	goto	u5597
  1329  11A8                     l3444:
  1330                           
  1331                           ;lab03_maestro.c: 98:             spiWrite(canal);
  1332  11A8  1683               	bsf	3,5	;RP0=1, select bank1
  1333  11A9  1303               	bcf	3,6	;RP1=0, select bank1
  1334  11AA  0852               	movf	_canal^(0+128),w
  1335  11AB  120A  158A  2000  160A  118A  	fcall	_spiWrite
  1336  11B0                     l3446:
  1337                           
  1338                           ;lab03_maestro.c: 99:             conv1 = (0.01961)*(spiRead()) ;
  1339  11B0  303C               	movlw	60
  1340  11B1  1283               	bcf	3,5	;RP0=0, select bank0
  1341  11B2  1303               	bcf	3,6	;RP1=0, select bank0
  1342  11B3  00A7               	movwf	___flmul@b+3
  1343  11B4  30A0               	movlw	160
  1344  11B5  00A6               	movwf	___flmul@b+2
  1345  11B6  30A5               	movlw	165
  1346  11B7  00A5               	movwf	___flmul@b+1
  1347  11B8  3027               	movlw	39
  1348  11B9  00A4               	movwf	___flmul@b
  1349  11BA  160A  118A  2001  160A  118A  	fcall	_spiRead
  1350  11BF  1683               	bsf	3,5	;RP0=1, select bank1
  1351  11C0  1303               	bcf	3,6	;RP1=0, select bank1
  1352  11C1  00C5               	movwf	??_main^(0+128)
  1353  11C2  01C6               	clrf	(??_main^(0+128)+1)
  1354  11C3  01C7               	clrf	(??_main^(0+128)+2)
  1355  11C4  01C8               	clrf	(??_main^(0+128)+3)
  1356  11C5  0848               	movf	(??_main+3)^(0+128),w
  1357  11C6  00F3               	movwf	___xxtofl@val+3
  1358  11C7  0847               	movf	(??_main+2)^(0+128),w
  1359  11C8  00F2               	movwf	___xxtofl@val+2
  1360  11C9  0846               	movf	(??_main+1)^(0+128),w
  1361  11CA  00F1               	movwf	___xxtofl@val+1
  1362  11CB  0845               	movf	??_main^(0+128),w
  1363  11CC  00F0               	movwf	___xxtofl@val
  1364  11CD  3001               	movlw	1
  1365  11CE  160A  158A  2746  160A  118A  	fcall	___xxtofl
  1366  11D3  0873               	movf	?___xxtofl+3,w
  1367  11D4  1283               	bcf	3,5	;RP0=0, select bank0
  1368  11D5  1303               	bcf	3,6	;RP1=0, select bank0
  1369  11D6  00AB               	movwf	___flmul@a+3
  1370  11D7  0872               	movf	?___xxtofl+2,w
  1371  11D8  00AA               	movwf	___flmul@a+2
  1372  11D9  0871               	movf	?___xxtofl+1,w
  1373  11DA  00A9               	movwf	___flmul@a+1
  1374  11DB  0870               	movf	?___xxtofl,w
  1375  11DC  00A8               	movwf	___flmul@a
  1376  11DD  120A  158A  249F  160A  118A  	fcall	___flmul
  1377  11E2  1283               	bcf	3,5	;RP0=0, select bank0
  1378  11E3  1303               	bcf	3,6	;RP1=0, select bank0
  1379  11E4  0827               	movf	?___flmul+3,w
  1380  11E5  1683               	bsf	3,5	;RP0=1, select bank1
  1381  11E6  1303               	bcf	3,6	;RP1=0, select bank1
  1382  11E7  00D0               	movwf	(_conv1+3)^(0+128)
  1383  11E8  1283               	bcf	3,5	;RP0=0, select bank0
  1384  11E9  1303               	bcf	3,6	;RP1=0, select bank0
  1385  11EA  0826               	movf	?___flmul+2,w
  1386  11EB  1683               	bsf	3,5	;RP0=1, select bank1
  1387  11EC  1303               	bcf	3,6	;RP1=0, select bank1
  1388  11ED  00CF               	movwf	(_conv1+2)^(0+128)
  1389  11EE  1283               	bcf	3,5	;RP0=0, select bank0
  1390  11EF  1303               	bcf	3,6	;RP1=0, select bank0
  1391  11F0  0825               	movf	?___flmul+1,w
  1392  11F1  1683               	bsf	3,5	;RP0=1, select bank1
  1393  11F2  1303               	bcf	3,6	;RP1=0, select bank1
  1394  11F3  00CE               	movwf	(_conv1+1)^(0+128)
  1395  11F4  1283               	bcf	3,5	;RP0=0, select bank0
  1396  11F5  1303               	bcf	3,6	;RP1=0, select bank0
  1397  11F6  0824               	movf	?___flmul,w
  1398  11F7  1683               	bsf	3,5	;RP0=1, select bank1
  1399  11F8  1303               	bcf	3,6	;RP1=0, select bank1
  1400  11F9  00CD               	movwf	_conv1^(0+128)
  1401  11FA                     l3448:
  1402                           
  1403                           ;lab03_maestro.c: 100:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1404  11FA  3003               	movlw	3
  1405  11FB  1683               	bsf	3,5	;RP0=1, select bank1
  1406  11FC  1303               	bcf	3,6	;RP1=0, select bank1
  1407  11FD  00C6               	movwf	(??_main^(0+128)+1)
  1408  11FE  3097               	movlw	151
  1409  11FF  00C5               	movwf	??_main^(0+128)
  1410  1200                     u5607:
  1411  1200  0BC5               	decfsz	??_main^(0+128),f
  1412  1201  2A00               	goto	u5607
  1413  1202  0BC6               	decfsz	(??_main^(0+128)+1),f
  1414  1203  2A00               	goto	u5607
  1415  1204                     l3450:
  1416                           
  1417                           ;lab03_maestro.c: 101:             PORTEbits.RE0 = 1;
  1418  1204  1283               	bcf	3,5	;RP0=0, select bank0
  1419  1205  1303               	bcf	3,6	;RP1=0, select bank0
  1420  1206  1409               	bsf	9,0	;volatile
  1421  1207                     l3452:
  1422                           
  1423                           ;lab03_maestro.c: 102:             _delay((unsigned long)((250)*(8000000/4000.0)));
  1424  1207  3003               	movlw	3
  1425  1208  1683               	bsf	3,5	;RP0=1, select bank1
  1426  1209  1303               	bcf	3,6	;RP1=0, select bank1
  1427  120A  00C7               	movwf	(??_main^(0+128)+2)
  1428  120B  308A               	movlw	138
  1429  120C  00C6               	movwf	(??_main^(0+128)+1)
  1430  120D  3055               	movlw	85
  1431  120E  00C5               	movwf	??_main^(0+128)
  1432  120F                     u5617:
  1433  120F  0BC5               	decfsz	??_main^(0+128),f
  1434  1210  2A0F               	goto	u5617
  1435  1211  0BC6               	decfsz	(??_main^(0+128)+1),f
  1436  1212  2A0F               	goto	u5617
  1437  1213  0BC7               	decfsz	(??_main^(0+128)+2),f
  1438  1214  2A0F               	goto	u5617
  1439  1215                     l3454:
  1440                           
  1441                           ;lab03_maestro.c: 104:             sprintf(voltaje1, "%3.2f", conv1);
  1442  1215  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1443  1216  1683               	bsf	3,5	;RP0=1, select bank1
  1444  1217  1303               	bcf	3,6	;RP1=0, select bank1
  1445  1218  00C5               	movwf	??_main^(0+128)
  1446  1219  0845               	movf	??_main^(0+128),w
  1447  121A  00A0               	movwf	sprintf@f^(0+128)
  1448  121B  0850               	movf	(_conv1+3)^(0+128),w
  1449  121C  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1450  121D  084F               	movf	(_conv1+2)^(0+128),w
  1451  121E  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1452  121F  084E               	movf	(_conv1+1)^(0+128),w
  1453  1220  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1454  1221  084D               	movf	_conv1^(0+128),w
  1455  1222  00A1               	movwf	(?_sprintf^(0+128)+1)
  1456  1223  30D7               	movlw	(low (_voltaje1| 0))& (0+255)
  1457  1224  120A  118A  2078  160A  118A  	fcall	_sprintf
  1458  1229                     l3456:
  1459                           
  1460                           ;lab03_maestro.c: 106:             for (i = 0; i <= strlen(voltaje1); i++) {
  1461  1229  1683               	bsf	3,5	;RP0=1, select bank1
  1462  122A  1303               	bcf	3,6	;RP1=0, select bank1
  1463  122B  01D1               	clrf	_i^(0+128)
  1464  122C  2A52               	goto	l3466
  1465  122D                     l3458:
  1466                           
  1467                           ;lab03_maestro.c: 107:                 _delay((unsigned long)((100)*(8000000/4000.0)));
  1468  122D  3002               	movlw	2
  1469  122E  1683               	bsf	3,5	;RP0=1, select bank1
  1470  122F  1303               	bcf	3,6	;RP1=0, select bank1
  1471  1230  00C7               	movwf	(??_main^(0+128)+2)
  1472  1231  3004               	movlw	4
  1473  1232  00C6               	movwf	(??_main^(0+128)+1)
  1474  1233  30B9               	movlw	185
  1475  1234  00C5               	movwf	??_main^(0+128)
  1476  1235                     u5627:
  1477  1235  0BC5               	decfsz	??_main^(0+128),f
  1478  1236  2A35               	goto	u5627
  1479  1237  0BC6               	decfsz	(??_main^(0+128)+1),f
  1480  1238  2A35               	goto	u5627
  1481  1239  0BC7               	decfsz	(??_main^(0+128)+2),f
  1482  123A  2A35               	goto	u5627
  1483  123B  2A3C               	nop2
  1484  123C                     l3460:
  1485                           
  1486                           ;lab03_maestro.c: 108:                 if (TXIF == 1) {
  1487  123C  1283               	bcf	3,5	;RP0=0, select bank0
  1488  123D  1303               	bcf	3,6	;RP1=0, select bank0
  1489  123E  1E0C               	btfss	12,4	;volatile
  1490  123F  2A41               	goto	u5541
  1491  1240  2A42               	goto	u5540
  1492  1241                     u5541:
  1493  1241  2A4C               	goto	l3464
  1494  1242                     u5540:
  1495  1242                     l3462:
  1496                           
  1497                           ;lab03_maestro.c: 109:                     TXREG = voltaje1[i];
  1498  1242  1683               	bsf	3,5	;RP0=1, select bank1
  1499  1243  1303               	bcf	3,6	;RP1=0, select bank1
  1500  1244  0851               	movf	_i^(0+128),w
  1501  1245  3ED7               	addlw	(low (_voltaje1| 0))& (0+255)
  1502  1246  0084               	movwf	4
  1503  1247  1383               	bcf	3,7	;select IRP bank1
  1504  1248  0800               	movf	0,w
  1505  1249  1283               	bcf	3,5	;RP0=0, select bank0
  1506  124A  1303               	bcf	3,6	;RP1=0, select bank0
  1507  124B  0099               	movwf	25	;volatile
  1508  124C                     l3464:
  1509                           
  1510                           ;lab03_maestro.c: 111:             }
  1511  124C  3001               	movlw	1
  1512  124D  1683               	bsf	3,5	;RP0=1, select bank1
  1513  124E  1303               	bcf	3,6	;RP1=0, select bank1
  1514  124F  00C5               	movwf	??_main^(0+128)
  1515  1250  0845               	movf	??_main^(0+128),w
  1516  1251  07D1               	addwf	_i^(0+128),f
  1517  1252                     l3466:
  1518  1252  0851               	movf	_i^(0+128),w
  1519  1253  00C5               	movwf	??_main^(0+128)
  1520  1254  01C6               	clrf	(??_main^(0+128)+1)
  1521  1255  30D7               	movlw	(low (_voltaje1| 0))& (0+255)
  1522  1256  160A  158A  2482  160A  118A  	fcall	_strlen
  1523  125B  1683               	bsf	3,5	;RP0=1, select bank1
  1524  125C  1303               	bcf	3,6	;RP1=0, select bank1
  1525  125D  0846               	movf	(??_main+1)^(0+128),w
  1526  125E  0271               	subwf	?_strlen+1,w
  1527  125F  1D03               	skipz
  1528  1260  2A63               	goto	u5555
  1529  1261  0845               	movf	??_main^(0+128),w
  1530  1262  0270               	subwf	?_strlen,w
  1531  1263                     u5555:
  1532  1263  1803               	skipnc
  1533  1264  2A66               	goto	u5551
  1534  1265  2A67               	goto	u5550
  1535  1266                     u5551:
  1536  1266  2A2D               	goto	l3458
  1537  1267                     u5550:
  1538  1267                     l3468:
  1539                           
  1540                           ;lab03_maestro.c: 113:             TXREG = 13;
  1541  1267  300D               	movlw	13
  1542  1268  1283               	bcf	3,5	;RP0=0, select bank0
  1543  1269  1303               	bcf	3,6	;RP1=0, select bank0
  1544  126A  0099               	movwf	25	;volatile
  1545                           
  1546                           ;lab03_maestro.c: 114:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1547  126B  3002               	movlw	2
  1548  126C  1683               	bsf	3,5	;RP0=1, select bank1
  1549  126D  1303               	bcf	3,6	;RP1=0, select bank1
  1550  126E  00C7               	movwf	(??_main^(0+128)+2)
  1551  126F  3004               	movlw	4
  1552  1270  00C6               	movwf	(??_main^(0+128)+1)
  1553  1271  30B9               	movlw	185
  1554  1272  00C5               	movwf	??_main^(0+128)
  1555  1273                     u5637:
  1556  1273  0BC5               	decfsz	??_main^(0+128),f
  1557  1274  2A73               	goto	u5637
  1558  1275  0BC6               	decfsz	(??_main^(0+128)+1),f
  1559  1276  2A73               	goto	u5637
  1560  1277  0BC7               	decfsz	(??_main^(0+128)+2),f
  1561  1278  2A73               	goto	u5637
  1562  1279  2A7A               	nop2
  1563                           
  1564                           ;lab03_maestro.c: 115:             TXREG = '\r';
  1565  127A  300D               	movlw	13
  1566  127B  1283               	bcf	3,5	;RP0=0, select bank0
  1567  127C  1303               	bcf	3,6	;RP1=0, select bank0
  1568  127D  0099               	movwf	25	;volatile
  1569                           
  1570                           ;lab03_maestro.c: 117:         break;
  1571  127E  2B5E               	goto	l3502
  1572  127F                     l136:	
  1573                           ;lab03_maestro.c: 118:         case(1):
  1574                           
  1575                           
  1576                           ;lab03_maestro.c: 119:             PORTEbits.RE0 = 0;
  1577  127F  1283               	bcf	3,5	;RP0=0, select bank0
  1578  1280  1303               	bcf	3,6	;RP1=0, select bank0
  1579  1281  1009               	bcf	9,0	;volatile
  1580  1282                     l3470:
  1581                           
  1582                           ;lab03_maestro.c: 120:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1583  1282  3003               	movlw	3
  1584  1283  1683               	bsf	3,5	;RP0=1, select bank1
  1585  1284  1303               	bcf	3,6	;RP1=0, select bank1
  1586  1285  00C6               	movwf	(??_main^(0+128)+1)
  1587  1286  3097               	movlw	151
  1588  1287  00C5               	movwf	??_main^(0+128)
  1589  1288                     u5647:
  1590  1288  0BC5               	decfsz	??_main^(0+128),f
  1591  1289  2A88               	goto	u5647
  1592  128A  0BC6               	decfsz	(??_main^(0+128)+1),f
  1593  128B  2A88               	goto	u5647
  1594  128C                     l3472:
  1595                           
  1596                           ;lab03_maestro.c: 121:             spiWrite(canal);
  1597  128C  1683               	bsf	3,5	;RP0=1, select bank1
  1598  128D  1303               	bcf	3,6	;RP1=0, select bank1
  1599  128E  0852               	movf	_canal^(0+128),w
  1600  128F  120A  158A  2000  160A  118A  	fcall	_spiWrite
  1601  1294                     l3474:
  1602                           
  1603                           ;lab03_maestro.c: 122:             conv2 = (0.01961)*(spiRead()) ;
  1604  1294  303C               	movlw	60
  1605  1295  1283               	bcf	3,5	;RP0=0, select bank0
  1606  1296  1303               	bcf	3,6	;RP1=0, select bank0
  1607  1297  00A7               	movwf	___flmul@b+3
  1608  1298  30A0               	movlw	160
  1609  1299  00A6               	movwf	___flmul@b+2
  1610  129A  30A5               	movlw	165
  1611  129B  00A5               	movwf	___flmul@b+1
  1612  129C  3027               	movlw	39
  1613  129D  00A4               	movwf	___flmul@b
  1614  129E  160A  118A  2001  160A  118A  	fcall	_spiRead
  1615  12A3  1683               	bsf	3,5	;RP0=1, select bank1
  1616  12A4  1303               	bcf	3,6	;RP1=0, select bank1
  1617  12A5  00C5               	movwf	??_main^(0+128)
  1618  12A6  01C6               	clrf	(??_main^(0+128)+1)
  1619  12A7  01C7               	clrf	(??_main^(0+128)+2)
  1620  12A8  01C8               	clrf	(??_main^(0+128)+3)
  1621  12A9  0848               	movf	(??_main+3)^(0+128),w
  1622  12AA  00F3               	movwf	___xxtofl@val+3
  1623  12AB  0847               	movf	(??_main+2)^(0+128),w
  1624  12AC  00F2               	movwf	___xxtofl@val+2
  1625  12AD  0846               	movf	(??_main+1)^(0+128),w
  1626  12AE  00F1               	movwf	___xxtofl@val+1
  1627  12AF  0845               	movf	??_main^(0+128),w
  1628  12B0  00F0               	movwf	___xxtofl@val
  1629  12B1  3001               	movlw	1
  1630  12B2  160A  158A  2746  160A  118A  	fcall	___xxtofl
  1631  12B7  0873               	movf	?___xxtofl+3,w
  1632  12B8  1283               	bcf	3,5	;RP0=0, select bank0
  1633  12B9  1303               	bcf	3,6	;RP1=0, select bank0
  1634  12BA  00AB               	movwf	___flmul@a+3
  1635  12BB  0872               	movf	?___xxtofl+2,w
  1636  12BC  00AA               	movwf	___flmul@a+2
  1637  12BD  0871               	movf	?___xxtofl+1,w
  1638  12BE  00A9               	movwf	___flmul@a+1
  1639  12BF  0870               	movf	?___xxtofl,w
  1640  12C0  00A8               	movwf	___flmul@a
  1641  12C1  120A  158A  249F  160A  118A  	fcall	___flmul
  1642  12C6  1283               	bcf	3,5	;RP0=0, select bank0
  1643  12C7  1303               	bcf	3,6	;RP1=0, select bank0
  1644  12C8  0827               	movf	?___flmul+3,w
  1645  12C9  1683               	bsf	3,5	;RP0=1, select bank1
  1646  12CA  1303               	bcf	3,6	;RP1=0, select bank1
  1647  12CB  00CC               	movwf	(_conv2+3)^(0+128)
  1648  12CC  1283               	bcf	3,5	;RP0=0, select bank0
  1649  12CD  1303               	bcf	3,6	;RP1=0, select bank0
  1650  12CE  0826               	movf	?___flmul+2,w
  1651  12CF  1683               	bsf	3,5	;RP0=1, select bank1
  1652  12D0  1303               	bcf	3,6	;RP1=0, select bank1
  1653  12D1  00CB               	movwf	(_conv2+2)^(0+128)
  1654  12D2  1283               	bcf	3,5	;RP0=0, select bank0
  1655  12D3  1303               	bcf	3,6	;RP1=0, select bank0
  1656  12D4  0825               	movf	?___flmul+1,w
  1657  12D5  1683               	bsf	3,5	;RP0=1, select bank1
  1658  12D6  1303               	bcf	3,6	;RP1=0, select bank1
  1659  12D7  00CA               	movwf	(_conv2+1)^(0+128)
  1660  12D8  1283               	bcf	3,5	;RP0=0, select bank0
  1661  12D9  1303               	bcf	3,6	;RP1=0, select bank0
  1662  12DA  0824               	movf	?___flmul,w
  1663  12DB  1683               	bsf	3,5	;RP0=1, select bank1
  1664  12DC  1303               	bcf	3,6	;RP1=0, select bank1
  1665  12DD  00C9               	movwf	_conv2^(0+128)
  1666  12DE                     l3476:
  1667                           
  1668                           ;lab03_maestro.c: 123:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1669  12DE  3003               	movlw	3
  1670  12DF  1683               	bsf	3,5	;RP0=1, select bank1
  1671  12E0  1303               	bcf	3,6	;RP1=0, select bank1
  1672  12E1  00C6               	movwf	(??_main^(0+128)+1)
  1673  12E2  3097               	movlw	151
  1674  12E3  00C5               	movwf	??_main^(0+128)
  1675  12E4                     u5657:
  1676  12E4  0BC5               	decfsz	??_main^(0+128),f
  1677  12E5  2AE4               	goto	u5657
  1678  12E6  0BC6               	decfsz	(??_main^(0+128)+1),f
  1679  12E7  2AE4               	goto	u5657
  1680  12E8                     l3478:
  1681                           
  1682                           ;lab03_maestro.c: 124:             PORTEbits.RE0 = 1;
  1683  12E8  1283               	bcf	3,5	;RP0=0, select bank0
  1684  12E9  1303               	bcf	3,6	;RP1=0, select bank0
  1685  12EA  1409               	bsf	9,0	;volatile
  1686  12EB                     l3480:
  1687                           
  1688                           ;lab03_maestro.c: 125:             _delay((unsigned long)((250)*(8000000/4000.0)));
  1689  12EB  3003               	movlw	3
  1690  12EC  1683               	bsf	3,5	;RP0=1, select bank1
  1691  12ED  1303               	bcf	3,6	;RP1=0, select bank1
  1692  12EE  00C7               	movwf	(??_main^(0+128)+2)
  1693  12EF  308A               	movlw	138
  1694  12F0  00C6               	movwf	(??_main^(0+128)+1)
  1695  12F1  3055               	movlw	85
  1696  12F2  00C5               	movwf	??_main^(0+128)
  1697  12F3                     u5667:
  1698  12F3  0BC5               	decfsz	??_main^(0+128),f
  1699  12F4  2AF3               	goto	u5667
  1700  12F5  0BC6               	decfsz	(??_main^(0+128)+1),f
  1701  12F6  2AF3               	goto	u5667
  1702  12F7  0BC7               	decfsz	(??_main^(0+128)+2),f
  1703  12F8  2AF3               	goto	u5667
  1704  12F9                     l3482:
  1705                           
  1706                           ;lab03_maestro.c: 127:             sprintf(voltaje2, "%3.2f", conv2);
  1707  12F9  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1708  12FA  1683               	bsf	3,5	;RP0=1, select bank1
  1709  12FB  1303               	bcf	3,6	;RP1=0, select bank1
  1710  12FC  00C5               	movwf	??_main^(0+128)
  1711  12FD  0845               	movf	??_main^(0+128),w
  1712  12FE  00A0               	movwf	sprintf@f^(0+128)
  1713  12FF  084C               	movf	(_conv2+3)^(0+128),w
  1714  1300  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1715  1301  084B               	movf	(_conv2+2)^(0+128),w
  1716  1302  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1717  1303  084A               	movf	(_conv2+1)^(0+128),w
  1718  1304  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1719  1305  0849               	movf	_conv2^(0+128),w
  1720  1306  00A1               	movwf	(?_sprintf^(0+128)+1)
  1721  1307  30D3               	movlw	(low (_voltaje2| 0))& (0+255)
  1722  1308  120A  118A  2078  160A  118A  	fcall	_sprintf
  1723  130D                     l3484:
  1724                           
  1725                           ;lab03_maestro.c: 129:             for (i = 0; i <= strlen(voltaje2); i++) {
  1726  130D  1683               	bsf	3,5	;RP0=1, select bank1
  1727  130E  1303               	bcf	3,6	;RP1=0, select bank1
  1728  130F  01D1               	clrf	_i^(0+128)
  1729  1310  2B36               	goto	l3494
  1730  1311                     l3486:
  1731                           
  1732                           ;lab03_maestro.c: 130:                 _delay((unsigned long)((100)*(8000000/4000.0)));
  1733  1311  3002               	movlw	2
  1734  1312  1683               	bsf	3,5	;RP0=1, select bank1
  1735  1313  1303               	bcf	3,6	;RP1=0, select bank1
  1736  1314  00C7               	movwf	(??_main^(0+128)+2)
  1737  1315  3004               	movlw	4
  1738  1316  00C6               	movwf	(??_main^(0+128)+1)
  1739  1317  30B9               	movlw	185
  1740  1318  00C5               	movwf	??_main^(0+128)
  1741  1319                     u5677:
  1742  1319  0BC5               	decfsz	??_main^(0+128),f
  1743  131A  2B19               	goto	u5677
  1744  131B  0BC6               	decfsz	(??_main^(0+128)+1),f
  1745  131C  2B19               	goto	u5677
  1746  131D  0BC7               	decfsz	(??_main^(0+128)+2),f
  1747  131E  2B19               	goto	u5677
  1748  131F  2B20               	nop2
  1749  1320                     l3488:
  1750                           
  1751                           ;lab03_maestro.c: 131:                 if (TXIF == 1) {
  1752  1320  1283               	bcf	3,5	;RP0=0, select bank0
  1753  1321  1303               	bcf	3,6	;RP1=0, select bank0
  1754  1322  1E0C               	btfss	12,4	;volatile
  1755  1323  2B25               	goto	u5561
  1756  1324  2B26               	goto	u5560
  1757  1325                     u5561:
  1758  1325  2B30               	goto	l3492
  1759  1326                     u5560:
  1760  1326                     l3490:
  1761                           
  1762                           ;lab03_maestro.c: 132:                     TXREG = voltaje2[i];
  1763  1326  1683               	bsf	3,5	;RP0=1, select bank1
  1764  1327  1303               	bcf	3,6	;RP1=0, select bank1
  1765  1328  0851               	movf	_i^(0+128),w
  1766  1329  3ED3               	addlw	(low (_voltaje2| 0))& (0+255)
  1767  132A  0084               	movwf	4
  1768  132B  1383               	bcf	3,7	;select IRP bank1
  1769  132C  0800               	movf	0,w
  1770  132D  1283               	bcf	3,5	;RP0=0, select bank0
  1771  132E  1303               	bcf	3,6	;RP1=0, select bank0
  1772  132F  0099               	movwf	25	;volatile
  1773  1330                     l3492:
  1774                           
  1775                           ;lab03_maestro.c: 134:             }
  1776  1330  3001               	movlw	1
  1777  1331  1683               	bsf	3,5	;RP0=1, select bank1
  1778  1332  1303               	bcf	3,6	;RP1=0, select bank1
  1779  1333  00C5               	movwf	??_main^(0+128)
  1780  1334  0845               	movf	??_main^(0+128),w
  1781  1335  07D1               	addwf	_i^(0+128),f
  1782  1336                     l3494:
  1783  1336  0851               	movf	_i^(0+128),w
  1784  1337  00C5               	movwf	??_main^(0+128)
  1785  1338  01C6               	clrf	(??_main^(0+128)+1)
  1786  1339  30D3               	movlw	(low (_voltaje2| 0))& (0+255)
  1787  133A  160A  158A  2482  160A  118A  	fcall	_strlen
  1788  133F  1683               	bsf	3,5	;RP0=1, select bank1
  1789  1340  1303               	bcf	3,6	;RP1=0, select bank1
  1790  1341  0846               	movf	(??_main+1)^(0+128),w
  1791  1342  0271               	subwf	?_strlen+1,w
  1792  1343  1D03               	skipz
  1793  1344  2B47               	goto	u5575
  1794  1345  0845               	movf	??_main^(0+128),w
  1795  1346  0270               	subwf	?_strlen,w
  1796  1347                     u5575:
  1797  1347  1803               	skipnc
  1798  1348  2B4A               	goto	u5571
  1799  1349  2B4B               	goto	u5570
  1800  134A                     u5571:
  1801  134A  2B11               	goto	l3486
  1802  134B                     u5570:
  1803  134B  2A67               	goto	l3468
  1804  134C                     l3500:
  1805  134C  1683               	bsf	3,5	;RP0=1, select bank1
  1806  134D  1303               	bcf	3,6	;RP1=0, select bank1
  1807  134E  0852               	movf	_canal^(0+128),w
  1808  134F  00C5               	movwf	??_main^(0+128)
  1809  1350  01C6               	clrf	(??_main^(0+128)+1)
  1810                           
  1811                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1812                           ; Switch size 1, requested type "simple"
  1813                           ; Number of cases is 1, Range of values is 0 to 0
  1814                           ; switch strategies available:
  1815                           ; Name         Instructions Cycles
  1816                           ; simple_byte            4     3 (average)
  1817                           ; direct_byte           11     8 (fixed)
  1818                           ; jumptable            260     6 (fixed)
  1819                           ;	Chosen strategy is simple_byte
  1820  1351  0846               	movf	(??_main+1)^(0+128),w
  1821  1352  3A00               	xorlw	0	; case 0
  1822  1353  1903               	skipnz
  1823  1354  2B56               	goto	l3594
  1824  1355  2B5E               	goto	l3502
  1825  1356                     l3594:
  1826                           
  1827                           ; Switch size 1, requested type "simple"
  1828                           ; Number of cases is 2, Range of values is 0 to 1
  1829                           ; switch strategies available:
  1830                           ; Name         Instructions Cycles
  1831                           ; simple_byte            7     4 (average)
  1832                           ; direct_byte           14     8 (fixed)
  1833                           ; jumptable            260     6 (fixed)
  1834                           ;	Chosen strategy is simple_byte
  1835  1356  0845               	movf	??_main^(0+128),w
  1836  1357  3A00               	xorlw	0	; case 0
  1837  1358  1903               	skipnz
  1838  1359  299B               	goto	l130
  1839  135A  3A01               	xorlw	1	; case 1
  1840  135B  1903               	skipnz
  1841  135C  2A7F               	goto	l136
  1842  135D  2B5E               	goto	l3502
  1843  135E                     l3502:
  1844                           
  1845                           ;lab03_maestro.c: 142:     if (canal == 0) {
  1846  135E  1683               	bsf	3,5	;RP0=1, select bank1
  1847  135F  1303               	bcf	3,6	;RP1=0, select bank1
  1848  1360  0852               	movf	_canal^(0+128),w
  1849  1361  1D03               	btfss	3,2
  1850  1362  2B64               	goto	u5581
  1851  1363  2B65               	goto	u5580
  1852  1364                     u5581:
  1853  1364  2B68               	goto	l3506
  1854  1365                     u5580:
  1855  1365                     l3504:
  1856                           
  1857                           ;lab03_maestro.c: 143:         canal = 1;
  1858  1365  01D2               	clrf	_canal^(0+128)
  1859  1366  0AD2               	incf	_canal^(0+128),f
  1860                           
  1861                           ;lab03_maestro.c: 144:     }
  1862  1367  2993               	goto	l126
  1863  1368                     l3506:
  1864                           
  1865                           ;lab03_maestro.c: 146:         canal = 0;
  1866  1368  01D2               	clrf	_canal^(0+128)
  1867  1369  2993               	goto	l126
  1868  136A  120A  118A  2800   	ljmp	start
  1869  136D                     __end_of_main:
  1870                           
  1871                           	psect	text1
  1872  1C82                     __ptext1:	
  1873 ;; *************** function _strlen *****************
  1874 ;; Defined at:
  1875 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strlen.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  s               1    wreg     PTR const unsigned char 
  1878 ;;		 -> voltaje2(4), voltaje1(4), 
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;  s               1    4[COMMON] PTR const unsigned char 
  1881 ;;		 -> voltaje2(4), voltaje1(4), 
  1882 ;;  cp              1    3[COMMON] PTR const unsigned char 
  1883 ;;		 -> voltaje2(4), voltaje1(4), 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  2    0[COMMON] unsigned int 
  1886 ;; Registers used:
  1887 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1893 ;;      Params:         2       0       0       0       0
  1894 ;;      Locals:         2       0       0       0       0
  1895 ;;      Temps:          1       0       0       0       0
  1896 ;;      Totals:         5       0       0       0       0
  1897 ;;Total ram usage:        5 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_main
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           
  1907                           ;psect for function _strlen
  1908  1C82                     _strlen:
  1909                           
  1910                           ;incstack = 0
  1911                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  1912                           ;strlen@s stored from wreg
  1913  1C82  00F4               	movwf	strlen@s
  1914  1C83                     l3410:
  1915  1C83  0874               	movf	strlen@s,w
  1916  1C84  00F2               	movwf	??_strlen
  1917  1C85  0872               	movf	??_strlen,w
  1918  1C86  00F3               	movwf	strlen@cp
  1919  1C87  2C8C               	goto	l3414
  1920  1C88                     l3412:
  1921  1C88  3001               	movlw	1
  1922  1C89  00F2               	movwf	??_strlen
  1923  1C8A  0872               	movf	??_strlen,w
  1924  1C8B  07F3               	addwf	strlen@cp,f
  1925  1C8C                     l3414:
  1926  1C8C  0873               	movf	strlen@cp,w
  1927  1C8D  0084               	movwf	4
  1928  1C8E  1383               	bcf	3,7	;select IRP bank0
  1929  1C8F  0800               	movf	0,w
  1930  1C90  1D03               	btfss	3,2
  1931  1C91  2C93               	goto	u5521
  1932  1C92  2C94               	goto	u5520
  1933  1C93                     u5521:
  1934  1C93  2C88               	goto	l3412
  1935  1C94                     u5520:
  1936  1C94                     l3416:
  1937  1C94  0874               	movf	strlen@s,w
  1938  1C95  0273               	subwf	strlen@cp,w
  1939  1C96  00F0               	movwf	?_strlen
  1940  1C97  01F1               	clrf	?_strlen+1
  1941  1C98  1BF0               	btfsc	?_strlen,7
  1942  1C99  03F1               	decf	?_strlen+1,f
  1943  1C9A                     l838:
  1944  1C9A  0008               	return
  1945  1C9B                     __end_of_strlen:
  1946                           
  1947                           	psect	text2
  1948  0078                     __ptext2:	
  1949 ;; *************** function _sprintf *****************
  1950 ;; Defined at:
  1951 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  sp              1    wreg     PTR unsigned char 
  1954 ;;		 -> voltaje2(4), voltaje1(4), 
  1955 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1956 ;;		 -> STR_2(6), STR_1(6), 
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;  sp              1   33[BANK1 ] PTR unsigned char 
  1959 ;;		 -> voltaje2(4), voltaje1(4), 
  1960 ;;  fval            4   29[BANK1 ] PTR unsigned char 
  1961 ;;  tmpval          4   23[BANK1 ] struct .
  1962 ;;  val             4   15[BANK1 ] unsigned long 
  1963 ;;  prec            2   34[BANK1 ] int 
  1964 ;;  eexp            2   27[BANK1 ] int 
  1965 ;;  width           2   21[BANK1 ] int 
  1966 ;;  flag            2   19[BANK1 ] unsigned short 
  1967 ;;  cp              2    0        PTR const unsigned char 
  1968 ;;  len             2    0        unsigned int 
  1969 ;;  c               1   36[BANK1 ] unsigned char 
  1970 ;;  ap              1   14[BANK1 ] PTR void [1]
  1971 ;;		 -> ?_sprintf(2), 
  1972 ;;  d               1    0        unsigned char 
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  2    0[BANK1 ] int 
  1975 ;; Registers used:
  1976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1982 ;;      Params:         0       0       5       0       0
  1983 ;;      Locals:         0       0      27       0       0
  1984 ;;      Temps:          0       0       5       0       0
  1985 ;;      Totals:         0       0      37       0       0
  1986 ;;Total ram usage:       37 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; Hardware stack levels required when called:    3
  1989 ;; This function calls:
  1990 ;;		___awdiv
  1991 ;;		___fladd
  1992 ;;		___fleq
  1993 ;;		___flge
  1994 ;;		___flmul
  1995 ;;		___flneg
  1996 ;;		___flsub
  1997 ;;		___fltol
  1998 ;;		___lldiv
  1999 ;;		___llmod
  2000 ;;		___wmul
  2001 ;;		___xxtofl
  2002 ;;		__div_to_l_
  2003 ;;		__tdiv_to_l_
  2004 ;;		_fround
  2005 ;;		_isdigit
  2006 ;;		_scale
  2007 ;; This function is called by:
  2008 ;;		_main
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           
  2013                           ;psect for function _sprintf
  2014  0078                     _sprintf:
  2015                           
  2016                           ;incstack = 0
  2017                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2018                           ;sprintf@sp stored from wreg
  2019  0078  1683               	bsf	3,5	;RP0=1, select bank1
  2020  0079  1303               	bcf	3,6	;RP1=0, select bank1
  2021  007A  00C1               	movwf	sprintf@sp^(0+128)
  2022  007B                     l3148:
  2023                           
  2024                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2025  007B  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2026  007C  00A5               	movwf	??_sprintf^(0+128)
  2027  007D  0825               	movf	??_sprintf^(0+128),w
  2028  007E  00AE               	movwf	sprintf@ap^(0+128)
  2029                           
  2030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2031  007F  2FDC               	goto	l3398
  2032  0080                     l3150:
  2033                           
  2034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2035  0080  3025               	movlw	37
  2036  0081  0644               	xorwf	sprintf@c^(0+128),w
  2037  0082  1903               	btfsc	3,2
  2038  0083  2885               	goto	u5051
  2039  0084  2886               	goto	u5050
  2040  0085                     u5051:
  2041  0085  2892               	goto	l3156
  2042  0086                     u5050:
  2043  0086                     l3152:
  2044                           
  2045                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2046  0086  0844               	movf	sprintf@c^(0+128),w
  2047  0087  00A5               	movwf	??_sprintf^(0+128)
  2048  0088  0841               	movf	sprintf@sp^(0+128),w
  2049  0089  0084               	movwf	4
  2050  008A  0825               	movf	??_sprintf^(0+128),w
  2051  008B  1383               	bcf	3,7	;select IRP bank0
  2052  008C  0080               	movwf	0
  2053  008D                     l3154:
  2054  008D  3001               	movlw	1
  2055  008E  00A5               	movwf	??_sprintf^(0+128)
  2056  008F  0825               	movf	??_sprintf^(0+128),w
  2057  0090  07C1               	addwf	sprintf@sp^(0+128),f
  2058                           
  2059                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2060  0091  2FDC               	goto	l3398
  2061  0092                     l3156:
  2062                           
  2063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2064  0092  01B5               	clrf	sprintf@width^(0+128)
  2065  0093  01B6               	clrf	(sprintf@width+1)^(0+128)
  2066                           
  2067                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2068  0094  01B3               	clrf	sprintf@flag^(0+128)
  2069  0095  01B4               	clrf	(sprintf@flag+1)^(0+128)
  2070  0096                     l3158:
  2071                           
  2072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2073  0096  0820               	movf	sprintf@f^(0+128),w
  2074  0097  0084               	movwf	4
  2075  0098  160A  158A  2000  120A  118A  	fcall	stringdir
  2076  009D  160A  158A  2446  120A  118A  	fcall	_isdigit
  2077  00A2  1C03               	btfss	3,0
  2078  00A3  28A5               	goto	u5061
  2079  00A4  28A6               	goto	u5060
  2080  00A5                     u5061:
  2081  00A5  28E6               	goto	l3170
  2082  00A6                     u5060:
  2083  00A6                     l3160:
  2084                           
  2085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2086  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  2087  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  2088  00A8  01B5               	clrf	sprintf@width^(0+128)
  2089  00A9  01B6               	clrf	(sprintf@width+1)^(0+128)
  2090  00AA                     l3162:
  2091                           
  2092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2093  00AA  300A               	movlw	10
  2094  00AB  00F0               	movwf	___wmul@multiplier
  2095  00AC  3000               	movlw	0
  2096  00AD  00F1               	movwf	___wmul@multiplier+1
  2097  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  2098  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  2099  00B0  0836               	movf	(sprintf@width+1)^(0+128),w
  2100  00B1  00F3               	movwf	___wmul@multiplicand+1
  2101  00B2  0835               	movf	sprintf@width^(0+128),w
  2102  00B3  00F2               	movwf	___wmul@multiplicand
  2103  00B4  160A  158A  24BF  120A  118A  	fcall	___wmul
  2104  00B9  0871               	movf	?___wmul+1,w
  2105  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  2106  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  2107  00BC  00B6               	movwf	(sprintf@width+1)^(0+128)
  2108  00BD  0870               	movf	?___wmul,w
  2109  00BE  00B5               	movwf	sprintf@width^(0+128)
  2110  00BF                     l3164:
  2111                           
  2112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2113  00BF  0820               	movf	sprintf@f^(0+128),w
  2114  00C0  0084               	movwf	4
  2115  00C1  160A  158A  2000  120A  118A  	fcall	stringdir
  2116  00C6  3ED0               	addlw	208
  2117  00C7  00A5               	movwf	??_sprintf^(0+128)
  2118  00C8  30FF               	movlw	255
  2119  00C9  1803               	skipnc
  2120  00CA  3000               	movlw	0
  2121  00CB  00A6               	movwf	(??_sprintf^(0+128)+1)
  2122  00CC  0825               	movf	??_sprintf^(0+128),w
  2123  00CD  07B5               	addwf	sprintf@width^(0+128),f
  2124  00CE  1803               	skipnc
  2125  00CF  0AB6               	incf	(sprintf@width+1)^(0+128),f
  2126  00D0  0826               	movf	(??_sprintf+1)^(0+128),w
  2127  00D1  07B6               	addwf	(sprintf@width+1)^(0+128),f
  2128  00D2                     l3166:
  2129  00D2  3001               	movlw	1
  2130  00D3  00A5               	movwf	??_sprintf^(0+128)
  2131  00D4  0825               	movf	??_sprintf^(0+128),w
  2132  00D5  07A0               	addwf	sprintf@f^(0+128),f
  2133  00D6                     l3168:
  2134                           
  2135                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2136  00D6  0820               	movf	sprintf@f^(0+128),w
  2137  00D7  0084               	movwf	4
  2138  00D8  160A  158A  2000  120A  118A  	fcall	stringdir
  2139  00DD  160A  158A  2446  120A  118A  	fcall	_isdigit
  2140  00E2  1803               	btfsc	3,0
  2141  00E3  28E5               	goto	u5071
  2142  00E4  28E6               	goto	u5070
  2143  00E5                     u5071:
  2144  00E5  28AA               	goto	l3162
  2145  00E6                     u5070:
  2146  00E6                     l3170:
  2147                           
  2148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2149  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  2150  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  2151  00E8  0820               	movf	sprintf@f^(0+128),w
  2152  00E9  0084               	movwf	4
  2153  00EA  160A  158A  2000  120A  118A  	fcall	stringdir
  2154  00EF  3A2E               	xorlw	46
  2155  00F0  1D03               	skipz
  2156  00F1  28F3               	goto	u5081
  2157  00F2  28F4               	goto	u5080
  2158  00F3                     u5081:
  2159  00F3  2939               	goto	l3186
  2160  00F4                     u5080:
  2161  00F4                     l3172:
  2162                           
  2163                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2164  00F4  1734               	bsf	(sprintf@flag^(0+128)+1),6
  2165  00F5                     l3174:
  2166                           
  2167                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2168  00F5  3001               	movlw	1
  2169  00F6  00A5               	movwf	??_sprintf^(0+128)
  2170  00F7  0825               	movf	??_sprintf^(0+128),w
  2171  00F8  07A0               	addwf	sprintf@f^(0+128),f
  2172  00F9                     l3176:
  2173                           
  2174                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2175  00F9  01C2               	clrf	sprintf@prec^(0+128)
  2176  00FA  01C3               	clrf	(sprintf@prec+1)^(0+128)
  2177                           
  2178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2179  00FB  2928               	goto	l3184
  2180  00FC                     l3178:
  2181                           
  2182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2183  00FC  300A               	movlw	10
  2184  00FD  00F0               	movwf	___wmul@multiplier
  2185  00FE  3000               	movlw	0
  2186  00FF  00F1               	movwf	___wmul@multiplier+1
  2187  0100  1683               	bsf	3,5	;RP0=1, select bank1
  2188  0101  1303               	bcf	3,6	;RP1=0, select bank1
  2189  0102  0843               	movf	(sprintf@prec+1)^(0+128),w
  2190  0103  00F3               	movwf	___wmul@multiplicand+1
  2191  0104  0842               	movf	sprintf@prec^(0+128),w
  2192  0105  00F2               	movwf	___wmul@multiplicand
  2193  0106  160A  158A  24BF  120A  118A  	fcall	___wmul
  2194  010B  0871               	movf	?___wmul+1,w
  2195  010C  1683               	bsf	3,5	;RP0=1, select bank1
  2196  010D  1303               	bcf	3,6	;RP1=0, select bank1
  2197  010E  00C3               	movwf	(sprintf@prec+1)^(0+128)
  2198  010F  0870               	movf	?___wmul,w
  2199  0110  00C2               	movwf	sprintf@prec^(0+128)
  2200  0111                     l3180:
  2201                           
  2202                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2203  0111  0820               	movf	sprintf@f^(0+128),w
  2204  0112  0084               	movwf	4
  2205  0113  160A  158A  2000  120A  118A  	fcall	stringdir
  2206  0118  3ED0               	addlw	208
  2207  0119  00A5               	movwf	??_sprintf^(0+128)
  2208  011A  30FF               	movlw	255
  2209  011B  1803               	skipnc
  2210  011C  3000               	movlw	0
  2211  011D  00A6               	movwf	(??_sprintf^(0+128)+1)
  2212  011E  0825               	movf	??_sprintf^(0+128),w
  2213  011F  07C2               	addwf	sprintf@prec^(0+128),f
  2214  0120  1803               	skipnc
  2215  0121  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  2216  0122  0826               	movf	(??_sprintf+1)^(0+128),w
  2217  0123  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  2218  0124                     l3182:
  2219  0124  3001               	movlw	1
  2220  0125  00A5               	movwf	??_sprintf^(0+128)
  2221  0126  0825               	movf	??_sprintf^(0+128),w
  2222  0127  07A0               	addwf	sprintf@f^(0+128),f
  2223  0128                     l3184:
  2224                           
  2225                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2226  0128  0820               	movf	sprintf@f^(0+128),w
  2227  0129  0084               	movwf	4
  2228  012A  160A  158A  2000  120A  118A  	fcall	stringdir
  2229  012F  160A  158A  2446  120A  118A  	fcall	_isdigit
  2230  0134  1803               	btfsc	3,0
  2231  0135  2937               	goto	u5091
  2232  0136  2938               	goto	u5090
  2233  0137                     u5091:
  2234  0137  28FC               	goto	l3178
  2235  0138                     u5090:
  2236  0138  293F               	goto	l3192
  2237  0139                     l3186:
  2238                           
  2239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2240  0139  01C2               	clrf	sprintf@prec^(0+128)
  2241  013A  01C3               	clrf	(sprintf@prec+1)^(0+128)
  2242  013B                     l3188:
  2243                           
  2244                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2245  013B  1634               	bsf	(sprintf@flag^(0+128)+1),4
  2246  013C  293F               	goto	l3192
  2247  013D                     l276:	
  2248                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2249                           
  2250                           
  2251                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2252  013D  1534               	bsf	(sprintf@flag^(0+128)+1),2
  2253                           
  2254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2255  013E  295B               	goto	l3194
  2256  013F                     l3192:
  2257  013F  3001               	movlw	1
  2258  0140  1683               	bsf	3,5	;RP0=1, select bank1
  2259  0141  1303               	bcf	3,6	;RP1=0, select bank1
  2260  0142  07A0               	addwf	sprintf@f^(0+128),f
  2261  0143  30FF               	movlw	-1
  2262  0144  0720               	addwf	sprintf@f^(0+128),w
  2263  0145  0084               	movwf	4
  2264  0146  160A  158A  2000  120A  118A  	fcall	stringdir
  2265  014B  00C4               	movwf	sprintf@c^(0+128)
  2266  014C  00A5               	movwf	??_sprintf^(0+128)
  2267  014D  01A6               	clrf	(??_sprintf^(0+128)+1)
  2268                           
  2269                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2270                           ; Switch size 1, requested type "simple"
  2271                           ; Number of cases is 1, Range of values is 0 to 0
  2272                           ; switch strategies available:
  2273                           ; Name         Instructions Cycles
  2274                           ; simple_byte            4     3 (average)
  2275                           ; direct_byte           11     8 (fixed)
  2276                           ; jumptable            260     6 (fixed)
  2277                           ;	Chosen strategy is simple_byte
  2278  014E  0826               	movf	(??_sprintf+1)^(0+128),w
  2279  014F  3A00               	xorlw	0	; case 0
  2280  0150  1903               	skipnz
  2281  0151  2953               	goto	l3596
  2282  0152  2FDC               	goto	l3398
  2283  0153                     l3596:
  2284                           
  2285                           ; Switch size 1, requested type "simple"
  2286                           ; Number of cases is 2, Range of values is 0 to 102
  2287                           ; switch strategies available:
  2288                           ; Name         Instructions Cycles
  2289                           ; simple_byte            7     4 (average)
  2290                           ; jumptable            260     6 (fixed)
  2291                           ;	Chosen strategy is simple_byte
  2292  0153  0825               	movf	??_sprintf^(0+128),w
  2293  0154  3A00               	xorlw	0	; case 0
  2294  0155  1903               	skipnz
  2295  0156  2FEE               	goto	l3400
  2296  0157  3A66               	xorlw	102	; case 102
  2297  0158  1903               	skipnz
  2298  0159  293D               	goto	l276
  2299  015A  2FDC               	goto	l3398
  2300  015B                     l3194:
  2301                           
  2302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2303  015B  3000               	movlw	0
  2304  015C  0533               	andwf	sprintf@flag^(0+128),w
  2305  015D  00A5               	movwf	??_sprintf^(0+128)
  2306  015E  3007               	movlw	7
  2307  015F  0534               	andwf	(sprintf@flag+1)^(0+128),w
  2308  0160  00A6               	movwf	(??_sprintf+1)^(0+128)
  2309  0161  0825               	movf	??_sprintf^(0+128),w
  2310  0162  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2311  0163  1903               	btfsc	3,2
  2312  0164  2966               	goto	u5101
  2313  0165  2967               	goto	u5100
  2314  0166                     u5101:
  2315  0166  2F19               	goto	l3352
  2316  0167                     u5100:
  2317  0167                     l3196:
  2318                           
  2319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2320  0167  1E34               	btfss	(sprintf@flag+1)^(0+128),4
  2321  0168  296A               	goto	u5111
  2322  0169  296B               	goto	u5110
  2323  016A                     u5111:
  2324  016A  296F               	goto	l3200
  2325  016B                     u5110:
  2326  016B                     l3198:
  2327                           
  2328                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2329  016B  3006               	movlw	6
  2330  016C  00C2               	movwf	sprintf@prec^(0+128)
  2331  016D  3000               	movlw	0
  2332  016E  00C3               	movwf	(sprintf@prec^(0+128)+1)
  2333  016F                     l3200:
  2334                           
  2335                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2336  016F  082E               	movf	sprintf@ap^(0+128),w
  2337  0170  0084               	movwf	4
  2338  0171  1383               	bcf	3,7	;select IRP bank0
  2339  0172  0800               	movf	0,w
  2340  0173  00BD               	movwf	sprintf@fval^(0+128)
  2341  0174  0A84               	incf	4,f
  2342  0175  0800               	movf	0,w
  2343  0176  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2344  0177  0A84               	incf	4,f
  2345  0178  0800               	movf	0,w
  2346  0179  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2347  017A  0A84               	incf	4,f
  2348  017B  0800               	movf	0,w
  2349  017C  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2350  017D                     l3202:
  2351  017D  3004               	movlw	4
  2352  017E  00A5               	movwf	??_sprintf^(0+128)
  2353  017F  0825               	movf	??_sprintf^(0+128),w
  2354  0180  07AE               	addwf	sprintf@ap^(0+128),f
  2355  0181                     l3204:
  2356                           
  2357                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2358  0181  0840               	movf	(sprintf@fval+3)^(0+128),w
  2359  0182  00F3               	movwf	___flge@ff1+3
  2360  0183  083F               	movf	(sprintf@fval+2)^(0+128),w
  2361  0184  00F2               	movwf	___flge@ff1+2
  2362  0185  083E               	movf	(sprintf@fval+1)^(0+128),w
  2363  0186  00F1               	movwf	___flge@ff1+1
  2364  0187  083D               	movf	sprintf@fval^(0+128),w
  2365  0188  00F0               	movwf	___flge@ff1
  2366  0189  3000               	movlw	0
  2367  018A  00F7               	movwf	___flge@ff2+3
  2368  018B  3000               	movlw	0
  2369  018C  00F6               	movwf	___flge@ff2+2
  2370  018D  3000               	movlw	0
  2371  018E  00F5               	movwf	___flge@ff2+1
  2372  018F  3000               	movlw	0
  2373  0190  00F4               	movwf	___flge@ff2
  2374  0191  160A  118A  200A  120A  118A  	fcall	___flge
  2375  0196  1803               	btfsc	3,0
  2376  0197  2999               	goto	u5121
  2377  0198  299A               	goto	u5120
  2378  0199                     u5121:
  2379  0199  29B7               	goto	l3210
  2380  019A                     u5120:
  2381  019A                     l3206:
  2382                           
  2383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2384  019A  1683               	bsf	3,5	;RP0=1, select bank1
  2385  019B  1303               	bcf	3,6	;RP1=0, select bank1
  2386  019C  0840               	movf	(sprintf@fval+3)^(0+128),w
  2387  019D  00F3               	movwf	___flneg@f1+3
  2388  019E  083F               	movf	(sprintf@fval+2)^(0+128),w
  2389  019F  00F2               	movwf	___flneg@f1+2
  2390  01A0  083E               	movf	(sprintf@fval+1)^(0+128),w
  2391  01A1  00F1               	movwf	___flneg@f1+1
  2392  01A2  083D               	movf	sprintf@fval^(0+128),w
  2393  01A3  00F0               	movwf	___flneg@f1
  2394  01A4  120A  118A  2004  120A  118A  	fcall	___flneg
  2395  01A9  0873               	movf	?___flneg+3,w
  2396  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  2397  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  2398  01AC  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2399  01AD  0872               	movf	?___flneg+2,w
  2400  01AE  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2401  01AF  0871               	movf	?___flneg+1,w
  2402  01B0  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2403  01B1  0870               	movf	?___flneg,w
  2404  01B2  00BD               	movwf	sprintf@fval^(0+128)
  2405  01B3                     l3208:
  2406                           
  2407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2408  01B3  3003               	movlw	3
  2409  01B4  04B3               	iorwf	sprintf@flag^(0+128),f
  2410  01B5  3000               	movlw	0
  2411  01B6  04B4               	iorwf	(sprintf@flag+1)^(0+128),f
  2412  01B7                     l3210:
  2413                           
  2414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2415  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  2416  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  2417  01B9  01BB               	clrf	sprintf@eexp^(0+128)
  2418  01BA  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  2419  01BB                     l3212:
  2420                           
  2421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2422  01BB  0840               	movf	(sprintf@fval+3)^(0+128),w
  2423  01BC  00F3               	movwf	___fleq@ff1+3
  2424  01BD  083F               	movf	(sprintf@fval+2)^(0+128),w
  2425  01BE  00F2               	movwf	___fleq@ff1+2
  2426  01BF  083E               	movf	(sprintf@fval+1)^(0+128),w
  2427  01C0  00F1               	movwf	___fleq@ff1+1
  2428  01C1  083D               	movf	sprintf@fval^(0+128),w
  2429  01C2  00F0               	movwf	___fleq@ff1
  2430  01C3  3000               	movlw	0
  2431  01C4  00F7               	movwf	___fleq@ff2+3
  2432  01C5  3000               	movlw	0
  2433  01C6  00F6               	movwf	___fleq@ff2+2
  2434  01C7  3000               	movlw	0
  2435  01C8  00F5               	movwf	___fleq@ff2+1
  2436  01C9  3000               	movlw	0
  2437  01CA  00F4               	movwf	___fleq@ff2
  2438  01CB  160A  158A  2589  120A  118A  	fcall	___fleq
  2439  01D0  1803               	btfsc	3,0
  2440  01D1  29D3               	goto	u5131
  2441  01D2  29D4               	goto	u5130
  2442  01D3                     u5131:
  2443  01D3  2AC4               	goto	l3238
  2444  01D4                     u5130:
  2445  01D4                     l3214:
  2446                           
  2447                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2448  01D4  1003               	clrc
  2449  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  2450  01D6  1303               	bcf	3,6	;RP1=0, select bank1
  2451  01D7  0D3F               	rlf	(sprintf@fval+2)^(0+128),w
  2452  01D8  0D40               	rlf	(sprintf@fval+3)^(0+128),w
  2453  01D9  3E82               	addlw	130
  2454  01DA  00BB               	movwf	sprintf@eexp^(0+128)
  2455  01DB  30FF               	movlw	255
  2456  01DC  1803               	skipnc
  2457  01DD  3000               	movlw	0
  2458  01DE  00BC               	movwf	(sprintf@eexp^(0+128)+1)
  2459  01DF                     l3216:
  2460                           
  2461                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2462  01DF  30FF               	movlw	255
  2463  01E0  07BB               	addwf	sprintf@eexp^(0+128),f
  2464  01E1  1803               	skipnc
  2465  01E2  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2466  01E3  30FF               	movlw	255
  2467  01E4  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2468  01E5                     l3218:
  2469                           
  2470                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2471  01E5  3003               	movlw	3
  2472  01E6  00F0               	movwf	___wmul@multiplier
  2473  01E7  3000               	movlw	0
  2474  01E8  00F1               	movwf	___wmul@multiplier+1
  2475  01E9  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2476  01EA  00F3               	movwf	___wmul@multiplicand+1
  2477  01EB  083B               	movf	sprintf@eexp^(0+128),w
  2478  01EC  00F2               	movwf	___wmul@multiplicand
  2479  01ED  160A  158A  24BF  120A  118A  	fcall	___wmul
  2480  01F2  0871               	movf	?___wmul+1,w
  2481  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  2482  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  2483  01F5  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  2484  01F6  0870               	movf	?___wmul,w
  2485  01F7  00BB               	movwf	sprintf@eexp^(0+128)
  2486  01F8                     l3220:
  2487                           
  2488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2489  01F8  300A               	movlw	10
  2490  01F9  00F7               	movwf	___awdiv@divisor
  2491  01FA  3000               	movlw	0
  2492  01FB  00F8               	movwf	___awdiv@divisor+1
  2493  01FC  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2494  01FD  00FA               	movwf	___awdiv@dividend+1
  2495  01FE  083B               	movf	sprintf@eexp^(0+128),w
  2496  01FF  00F9               	movwf	___awdiv@dividend
  2497  0200  120A  118A  200F  120A  118A  	fcall	___awdiv
  2498  0205  0878               	movf	?___awdiv+1,w
  2499  0206  1683               	bsf	3,5	;RP0=1, select bank1
  2500  0207  1303               	bcf	3,6	;RP1=0, select bank1
  2501  0208  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  2502  0209  0877               	movf	?___awdiv,w
  2503  020A  00BB               	movwf	sprintf@eexp^(0+128)
  2504  020B                     l3222:
  2505                           
  2506                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2507  020B  1FBC               	btfss	(sprintf@eexp+1)^(0+128),7
  2508  020C  2A0E               	goto	u5141
  2509  020D  2A0F               	goto	u5140
  2510  020E                     u5141:
  2511  020E  2A15               	goto	l3226
  2512  020F                     u5140:
  2513  020F                     l3224:
  2514                           
  2515                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2516  020F  30FF               	movlw	255
  2517  0210  07BB               	addwf	sprintf@eexp^(0+128),f
  2518  0211  1803               	skipnc
  2519  0212  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2520  0213  30FF               	movlw	255
  2521  0214  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2522  0215                     l3226:
  2523                           
  2524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2525  0215  033B               	decf	sprintf@eexp^(0+128),w
  2526  0216  3AFF               	xorlw	255
  2527  0217  120A  158A  2140  120A  118A  	fcall	_scale
  2528  021C  1283               	bcf	3,5	;RP0=0, select bank0
  2529  021D  1303               	bcf	3,6	;RP1=0, select bank0
  2530  021E  0841               	movf	?_scale+3,w
  2531  021F  1683               	bsf	3,5	;RP0=1, select bank1
  2532  0220  1303               	bcf	3,6	;RP1=0, select bank1
  2533  0221  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2534  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2535  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2536  0224  0840               	movf	?_scale+2,w
  2537  0225  1683               	bsf	3,5	;RP0=1, select bank1
  2538  0226  1303               	bcf	3,6	;RP1=0, select bank1
  2539  0227  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2540  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2541  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2542  022A  083F               	movf	?_scale+1,w
  2543  022B  1683               	bsf	3,5	;RP0=1, select bank1
  2544  022C  1303               	bcf	3,6	;RP1=0, select bank1
  2545  022D  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2546  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2547  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2548  0230  083E               	movf	?_scale,w
  2549  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2550  0232  1303               	bcf	3,6	;RP1=0, select bank1
  2551  0233  00B7               	movwf	sprintf@tmpval^(0+128)
  2552  0234                     l3228:
  2553                           
  2554                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2555  0234  0840               	movf	(sprintf@fval+3)^(0+128),w
  2556  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2557  0236  1303               	bcf	3,6	;RP1=0, select bank0
  2558  0237  00A7               	movwf	___flmul@b+3
  2559  0238  1683               	bsf	3,5	;RP0=1, select bank1
  2560  0239  1303               	bcf	3,6	;RP1=0, select bank1
  2561  023A  083F               	movf	(sprintf@fval+2)^(0+128),w
  2562  023B  1283               	bcf	3,5	;RP0=0, select bank0
  2563  023C  1303               	bcf	3,6	;RP1=0, select bank0
  2564  023D  00A6               	movwf	___flmul@b+2
  2565  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2566  023F  1303               	bcf	3,6	;RP1=0, select bank1
  2567  0240  083E               	movf	(sprintf@fval+1)^(0+128),w
  2568  0241  1283               	bcf	3,5	;RP0=0, select bank0
  2569  0242  1303               	bcf	3,6	;RP1=0, select bank0
  2570  0243  00A5               	movwf	___flmul@b+1
  2571  0244  1683               	bsf	3,5	;RP0=1, select bank1
  2572  0245  1303               	bcf	3,6	;RP1=0, select bank1
  2573  0246  083D               	movf	sprintf@fval^(0+128),w
  2574  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2575  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2576  0249  00A4               	movwf	___flmul@b
  2577  024A  1683               	bsf	3,5	;RP0=1, select bank1
  2578  024B  1303               	bcf	3,6	;RP1=0, select bank1
  2579  024C  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2580  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2581  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2582  024F  00AB               	movwf	___flmul@a+3
  2583  0250  1683               	bsf	3,5	;RP0=1, select bank1
  2584  0251  1303               	bcf	3,6	;RP1=0, select bank1
  2585  0252  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2586  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2587  0254  1303               	bcf	3,6	;RP1=0, select bank0
  2588  0255  00AA               	movwf	___flmul@a+2
  2589  0256  1683               	bsf	3,5	;RP0=1, select bank1
  2590  0257  1303               	bcf	3,6	;RP1=0, select bank1
  2591  0258  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2592  0259  1283               	bcf	3,5	;RP0=0, select bank0
  2593  025A  1303               	bcf	3,6	;RP1=0, select bank0
  2594  025B  00A9               	movwf	___flmul@a+1
  2595  025C  1683               	bsf	3,5	;RP0=1, select bank1
  2596  025D  1303               	bcf	3,6	;RP1=0, select bank1
  2597  025E  0837               	movf	sprintf@tmpval^(0+128),w
  2598  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2599  0260  1303               	bcf	3,6	;RP1=0, select bank0
  2600  0261  00A8               	movwf	___flmul@a
  2601  0262  120A  158A  249F  120A  118A  	fcall	___flmul
  2602  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2603  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2604  0269  0827               	movf	?___flmul+3,w
  2605  026A  1683               	bsf	3,5	;RP0=1, select bank1
  2606  026B  1303               	bcf	3,6	;RP1=0, select bank1
  2607  026C  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2608  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2609  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2610  026F  0826               	movf	?___flmul+2,w
  2611  0270  1683               	bsf	3,5	;RP0=1, select bank1
  2612  0271  1303               	bcf	3,6	;RP1=0, select bank1
  2613  0272  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2614  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2615  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2616  0275  0825               	movf	?___flmul+1,w
  2617  0276  1683               	bsf	3,5	;RP0=1, select bank1
  2618  0277  1303               	bcf	3,6	;RP1=0, select bank1
  2619  0278  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2620  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2621  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2622  027B  0824               	movf	?___flmul,w
  2623  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2624  027D  1303               	bcf	3,6	;RP1=0, select bank1
  2625  027E  00B7               	movwf	sprintf@tmpval^(0+128)
  2626  027F                     l3230:
  2627                           
  2628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2629  027F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2630  0280  00F3               	movwf	___flge@ff1+3
  2631  0281  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2632  0282  00F2               	movwf	___flge@ff1+2
  2633  0283  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2634  0284  00F1               	movwf	___flge@ff1+1
  2635  0285  0837               	movf	sprintf@tmpval^(0+128),w
  2636  0286  00F0               	movwf	___flge@ff1
  2637  0287  303F               	movlw	63
  2638  0288  00F7               	movwf	___flge@ff2+3
  2639  0289  3080               	movlw	128
  2640  028A  00F6               	movwf	___flge@ff2+2
  2641  028B  3000               	movlw	0
  2642  028C  00F5               	movwf	___flge@ff2+1
  2643  028D  3000               	movlw	0
  2644  028E  00F4               	movwf	___flge@ff2
  2645  028F  160A  118A  200A  120A  118A  	fcall	___flge
  2646  0294  1803               	btfsc	3,0
  2647  0295  2A97               	goto	u5151
  2648  0296  2A98               	goto	u5150
  2649  0297                     u5151:
  2650  0297  2AA1               	goto	l3234
  2651  0298                     u5150:
  2652  0298                     l3232:
  2653                           
  2654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2655  0298  30FF               	movlw	255
  2656  0299  1683               	bsf	3,5	;RP0=1, select bank1
  2657  029A  1303               	bcf	3,6	;RP1=0, select bank1
  2658  029B  07BB               	addwf	sprintf@eexp^(0+128),f
  2659  029C  1803               	skipnc
  2660  029D  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2661  029E  30FF               	movlw	255
  2662  029F  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2663  02A0  2AC4               	goto	l3238
  2664  02A1                     l3234:
  2665  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2666  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  2667  02A3  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2668  02A4  00F3               	movwf	___flge@ff1+3
  2669  02A5  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2670  02A6  00F2               	movwf	___flge@ff1+2
  2671  02A7  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2672  02A8  00F1               	movwf	___flge@ff1+1
  2673  02A9  0837               	movf	sprintf@tmpval^(0+128),w
  2674  02AA  00F0               	movwf	___flge@ff1
  2675  02AB  3041               	movlw	65
  2676  02AC  00F7               	movwf	___flge@ff2+3
  2677  02AD  3020               	movlw	32
  2678  02AE  00F6               	movwf	___flge@ff2+2
  2679  02AF  3000               	movlw	0
  2680  02B0  00F5               	movwf	___flge@ff2+1
  2681  02B1  3000               	movlw	0
  2682  02B2  00F4               	movwf	___flge@ff2
  2683  02B3  160A  118A  200A  120A  118A  	fcall	___flge
  2684  02B8  1C03               	btfss	3,0
  2685  02B9  2ABB               	goto	u5161
  2686  02BA  2ABC               	goto	u5160
  2687  02BB                     u5161:
  2688  02BB  2AC4               	goto	l3238
  2689  02BC                     u5160:
  2690  02BC                     l3236:
  2691                           
  2692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2693  02BC  3001               	movlw	1
  2694  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  2695  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  2696  02BF  07BB               	addwf	sprintf@eexp^(0+128),f
  2697  02C0  1803               	skipnc
  2698  02C1  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2699  02C2  3000               	movlw	0
  2700  02C3  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2701  02C4                     l3238:
  2702                           
  2703                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2704  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2705  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  2706  02C6  0843               	movf	(sprintf@prec+1)^(0+128),w
  2707  02C7  3A80               	xorlw	128
  2708  02C8  00FF               	movwf	btemp+1
  2709  02C9  3080               	movlw	128
  2710  02CA  027F               	subwf	btemp+1,w
  2711  02CB  1D03               	skipz
  2712  02CC  2ACF               	goto	u5175
  2713  02CD  300D               	movlw	13
  2714  02CE  0242               	subwf	sprintf@prec^(0+128),w
  2715  02CF                     u5175:
  2716  02CF  1803               	skipnc
  2717  02D0  2AD2               	goto	u5171
  2718  02D1  2AD3               	goto	u5170
  2719  02D2                     u5171:
  2720  02D2  2B1A               	goto	l3242
  2721  02D3                     u5170:
  2722  02D3                     l3240:
  2723                           
  2724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2725  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  2726  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  2727  02D5  0842               	movf	sprintf@prec^(0+128),w
  2728  02D6  160A  118A  236D  120A  118A  	fcall	_fround
  2729  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2730  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  2731  02DD  0841               	movf	?_fround+3,w
  2732  02DE  00D5               	movwf	___fladd@b+3
  2733  02DF  0840               	movf	?_fround+2,w
  2734  02E0  00D4               	movwf	___fladd@b+2
  2735  02E1  083F               	movf	?_fround+1,w
  2736  02E2  00D3               	movwf	___fladd@b+1
  2737  02E3  083E               	movf	?_fround,w
  2738  02E4  00D2               	movwf	___fladd@b
  2739  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  2740  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  2741  02E7  0840               	movf	(sprintf@fval+3)^(0+128),w
  2742  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  2743  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  2744  02EA  00D9               	movwf	___fladd@a+3
  2745  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2746  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  2747  02ED  083F               	movf	(sprintf@fval+2)^(0+128),w
  2748  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2749  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2750  02F0  00D8               	movwf	___fladd@a+2
  2751  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  2752  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  2753  02F3  083E               	movf	(sprintf@fval+1)^(0+128),w
  2754  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2755  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2756  02F6  00D7               	movwf	___fladd@a+1
  2757  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  2758  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  2759  02F9  083D               	movf	sprintf@fval^(0+128),w
  2760  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2761  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2762  02FC  00D6               	movwf	___fladd@a
  2763  02FD  160A  118A  2578  120A  118A  	fcall	___fladd
  2764  0302  1283               	bcf	3,5	;RP0=0, select bank0
  2765  0303  1303               	bcf	3,6	;RP1=0, select bank0
  2766  0304  0855               	movf	?___fladd+3,w
  2767  0305  1683               	bsf	3,5	;RP0=1, select bank1
  2768  0306  1303               	bcf	3,6	;RP1=0, select bank1
  2769  0307  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2770  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2771  0309  1303               	bcf	3,6	;RP1=0, select bank0
  2772  030A  0854               	movf	?___fladd+2,w
  2773  030B  1683               	bsf	3,5	;RP0=1, select bank1
  2774  030C  1303               	bcf	3,6	;RP1=0, select bank1
  2775  030D  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2776  030E  1283               	bcf	3,5	;RP0=0, select bank0
  2777  030F  1303               	bcf	3,6	;RP1=0, select bank0
  2778  0310  0853               	movf	?___fladd+1,w
  2779  0311  1683               	bsf	3,5	;RP0=1, select bank1
  2780  0312  1303               	bcf	3,6	;RP1=0, select bank1
  2781  0313  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2782  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2783  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2784  0316  0852               	movf	?___fladd,w
  2785  0317  1683               	bsf	3,5	;RP0=1, select bank1
  2786  0318  1303               	bcf	3,6	;RP1=0, select bank1
  2787  0319  00BD               	movwf	sprintf@fval^(0+128)
  2788  031A                     l3242:
  2789                           
  2790                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2791  031A  1683               	bsf	3,5	;RP0=1, select bank1
  2792  031B  1303               	bcf	3,6	;RP1=0, select bank1
  2793  031C  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2794  031D  3A80               	xorlw	128
  2795  031E  00FF               	movwf	btemp+1
  2796  031F  3080               	movlw	128
  2797  0320  027F               	subwf	btemp+1,w
  2798  0321  1D03               	skipz
  2799  0322  2B25               	goto	u5185
  2800  0323  300A               	movlw	10
  2801  0324  023B               	subwf	sprintf@eexp^(0+128),w
  2802  0325                     u5185:
  2803  0325  1803               	skipnc
  2804  0326  2B28               	goto	u5181
  2805  0327  2B29               	goto	u5180
  2806  0328                     u5181:
  2807  0328  2B7A               	goto	l3250
  2808  0329                     u5180:
  2809  0329                     l3244:
  2810  0329  1683               	bsf	3,5	;RP0=1, select bank1
  2811  032A  1303               	bcf	3,6	;RP1=0, select bank1
  2812  032B  0840               	movf	(sprintf@fval+3)^(0+128),w
  2813  032C  00F3               	movwf	___fleq@ff1+3
  2814  032D  083F               	movf	(sprintf@fval+2)^(0+128),w
  2815  032E  00F2               	movwf	___fleq@ff1+2
  2816  032F  083E               	movf	(sprintf@fval+1)^(0+128),w
  2817  0330  00F1               	movwf	___fleq@ff1+1
  2818  0331  083D               	movf	sprintf@fval^(0+128),w
  2819  0332  00F0               	movwf	___fleq@ff1
  2820  0333  3000               	movlw	0
  2821  0334  00F7               	movwf	___fleq@ff2+3
  2822  0335  3000               	movlw	0
  2823  0336  00F6               	movwf	___fleq@ff2+2
  2824  0337  3000               	movlw	0
  2825  0338  00F5               	movwf	___fleq@ff2+1
  2826  0339  3000               	movlw	0
  2827  033A  00F4               	movwf	___fleq@ff2
  2828  033B  160A  158A  2589  120A  118A  	fcall	___fleq
  2829  0340  1803               	btfsc	3,0
  2830  0341  2B43               	goto	u5191
  2831  0342  2B44               	goto	u5190
  2832  0343                     u5191:
  2833  0343  2BEC               	goto	l3264
  2834  0344                     u5190:
  2835  0344                     l3246:
  2836  0344  1683               	bsf	3,5	;RP0=1, select bank1
  2837  0345  1303               	bcf	3,6	;RP1=0, select bank1
  2838  0346  0840               	movf	(sprintf@fval+3)^(0+128),w
  2839  0347  1283               	bcf	3,5	;RP0=0, select bank0
  2840  0348  1303               	bcf	3,6	;RP1=0, select bank0
  2841  0349  00D4               	movwf	___fltol@f1+3
  2842  034A  1683               	bsf	3,5	;RP0=1, select bank1
  2843  034B  1303               	bcf	3,6	;RP1=0, select bank1
  2844  034C  083F               	movf	(sprintf@fval+2)^(0+128),w
  2845  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2846  034E  1303               	bcf	3,6	;RP1=0, select bank0
  2847  034F  00D3               	movwf	___fltol@f1+2
  2848  0350  1683               	bsf	3,5	;RP0=1, select bank1
  2849  0351  1303               	bcf	3,6	;RP1=0, select bank1
  2850  0352  083E               	movf	(sprintf@fval+1)^(0+128),w
  2851  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2852  0354  1303               	bcf	3,6	;RP1=0, select bank0
  2853  0355  00D2               	movwf	___fltol@f1+1
  2854  0356  1683               	bsf	3,5	;RP0=1, select bank1
  2855  0357  1303               	bcf	3,6	;RP1=0, select bank1
  2856  0358  083D               	movf	sprintf@fval^(0+128),w
  2857  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2858  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2859  035B  00D1               	movwf	___fltol@f1
  2860  035C  120A  158A  2006  120A  118A  	fcall	___fltol
  2861  0361  1283               	bcf	3,5	;RP0=0, select bank0
  2862  0362  1303               	bcf	3,6	;RP1=0, select bank0
  2863  0363  0854               	movf	?___fltol+3,w
  2864  0364  0453               	iorwf	?___fltol+2,w
  2865  0365  0452               	iorwf	?___fltol+1,w
  2866  0366  0451               	iorwf	?___fltol,w
  2867  0367  1D03               	skipz
  2868  0368  2B6A               	goto	u5201
  2869  0369  2B6B               	goto	u5200
  2870  036A                     u5201:
  2871  036A  2BEC               	goto	l3264
  2872  036B                     u5200:
  2873  036B                     l3248:
  2874  036B  1683               	bsf	3,5	;RP0=1, select bank1
  2875  036C  1303               	bcf	3,6	;RP1=0, select bank1
  2876  036D  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2877  036E  3A80               	xorlw	128
  2878  036F  00FF               	movwf	btemp+1
  2879  0370  3080               	movlw	128
  2880  0371  027F               	subwf	btemp+1,w
  2881  0372  1D03               	skipz
  2882  0373  2B76               	goto	u5215
  2883  0374  3002               	movlw	2
  2884  0375  023B               	subwf	sprintf@eexp^(0+128),w
  2885  0376                     u5215:
  2886  0376  1C03               	skipc
  2887  0377  2B79               	goto	u5211
  2888  0378  2B7A               	goto	u5210
  2889  0379                     u5211:
  2890  0379  2BEC               	goto	l3264
  2891  037A                     u5210:
  2892  037A                     l3250:
  2893                           
  2894                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2895  037A  1683               	bsf	3,5	;RP0=1, select bank1
  2896  037B  1303               	bcf	3,6	;RP1=0, select bank1
  2897  037C  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2898  037D  00F3               	movwf	___flge@ff1+3
  2899  037E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2900  037F  00F2               	movwf	___flge@ff1+2
  2901  0380  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2902  0381  00F1               	movwf	___flge@ff1+1
  2903  0382  0837               	movf	sprintf@tmpval^(0+128),w
  2904  0383  00F0               	movwf	___flge@ff1
  2905  0384  3040               	movlw	64
  2906  0385  00F7               	movwf	___flge@ff2+3
  2907  0386  3089               	movlw	137
  2908  0387  00F6               	movwf	___flge@ff2+2
  2909  0388  3070               	movlw	112
  2910  0389  00F5               	movwf	___flge@ff2+1
  2911  038A  305F               	movlw	95
  2912  038B  00F4               	movwf	___flge@ff2
  2913  038C  160A  118A  200A  120A  118A  	fcall	___flge
  2914  0391  1803               	btfsc	3,0
  2915  0392  2B94               	goto	u5221
  2916  0393  2B95               	goto	u5220
  2917  0394                     u5221:
  2918  0394  2B9E               	goto	l3254
  2919  0395                     u5220:
  2920  0395                     l3252:
  2921                           
  2922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2923  0395  30F7               	movlw	247
  2924  0396  1683               	bsf	3,5	;RP0=1, select bank1
  2925  0397  1303               	bcf	3,6	;RP1=0, select bank1
  2926  0398  07BB               	addwf	sprintf@eexp^(0+128),f
  2927  0399  1803               	skipnc
  2928  039A  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2929  039B  30FF               	movlw	255
  2930  039C  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2931                           
  2932                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2933  039D  2BA6               	goto	l3256
  2934  039E                     l3254:
  2935                           
  2936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2937  039E  30F8               	movlw	248
  2938  039F  1683               	bsf	3,5	;RP0=1, select bank1
  2939  03A0  1303               	bcf	3,6	;RP1=0, select bank1
  2940  03A1  07BB               	addwf	sprintf@eexp^(0+128),f
  2941  03A2  1803               	skipnc
  2942  03A3  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2943  03A4  30FF               	movlw	255
  2944  03A5  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2945  03A6                     l3256:
  2946                           
  2947                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2948  03A6  083B               	movf	sprintf@eexp^(0+128),w
  2949  03A7  120A  158A  2140  120A  118A  	fcall	_scale
  2950  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2951  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  2952  03AE  0841               	movf	?_scale+3,w
  2953  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  2954  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  2955  03B1  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2956  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2957  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  2958  03B4  0840               	movf	?_scale+2,w
  2959  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2960  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  2961  03B7  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2962  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2963  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2964  03BA  083F               	movf	?_scale+1,w
  2965  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  2966  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  2967  03BD  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2968  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2969  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2970  03C0  083E               	movf	?_scale,w
  2971  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  2972  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  2973  03C3  00B7               	movwf	sprintf@tmpval^(0+128)
  2974  03C4                     l3258:
  2975  03C4  0840               	movf	(sprintf@fval+3)^(0+128),w
  2976  03C5  00F3               	movwf	__div_to_l_@f1+3
  2977  03C6  083F               	movf	(sprintf@fval+2)^(0+128),w
  2978  03C7  00F2               	movwf	__div_to_l_@f1+2
  2979  03C8  083E               	movf	(sprintf@fval+1)^(0+128),w
  2980  03C9  00F1               	movwf	__div_to_l_@f1+1
  2981  03CA  083D               	movf	sprintf@fval^(0+128),w
  2982  03CB  00F0               	movwf	__div_to_l_@f1
  2983  03CC  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2984  03CD  00F7               	movwf	__div_to_l_@f2+3
  2985  03CE  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2986  03CF  00F6               	movwf	__div_to_l_@f2+2
  2987  03D0  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2988  03D1  00F5               	movwf	__div_to_l_@f2+1
  2989  03D2  0837               	movf	sprintf@tmpval^(0+128),w
  2990  03D3  00F4               	movwf	__div_to_l_@f2
  2991  03D4  120A  158A  2082  120A  118A  	fcall	__div_to_l_
  2992  03D9  0873               	movf	?__div_to_l_+3,w
  2993  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  2994  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  2995  03DC  00B2               	movwf	(sprintf@val+3)^(0+128)
  2996  03DD  0872               	movf	?__div_to_l_+2,w
  2997  03DE  00B1               	movwf	(sprintf@val+2)^(0+128)
  2998  03DF  0871               	movf	?__div_to_l_+1,w
  2999  03E0  00B0               	movwf	(sprintf@val+1)^(0+128)
  3000  03E1  0870               	movf	?__div_to_l_,w
  3001  03E2  00AF               	movwf	sprintf@val^(0+128)
  3002  03E3                     l3262:
  3003                           
  3004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3005  03E3  3000               	movlw	0
  3006  03E4  00C0               	movwf	(sprintf@fval+3)^(0+128)
  3007  03E5  3000               	movlw	0
  3008  03E6  00BF               	movwf	(sprintf@fval+2)^(0+128)
  3009  03E7  3000               	movlw	0
  3010  03E8  00BE               	movwf	(sprintf@fval+1)^(0+128)
  3011  03E9  3000               	movlw	0
  3012  03EA  00BD               	movwf	sprintf@fval^(0+128)
  3013                           
  3014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3015  03EB  2C70               	goto	l3270
  3016  03EC                     l3264:
  3017                           
  3018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3019  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  3020  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  3021  03EE  0840               	movf	(sprintf@fval+3)^(0+128),w
  3022  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  3023  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  3024  03F1  00D4               	movwf	___fltol@f1+3
  3025  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  3026  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  3027  03F4  083F               	movf	(sprintf@fval+2)^(0+128),w
  3028  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  3029  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  3030  03F7  00D3               	movwf	___fltol@f1+2
  3031  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  3032  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  3033  03FA  083E               	movf	(sprintf@fval+1)^(0+128),w
  3034  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  3035  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  3036  03FD  00D2               	movwf	___fltol@f1+1
  3037  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  3038  03FF  1303               	bcf	3,6	;RP1=0, select bank1
  3039  0400  083D               	movf	sprintf@fval^(0+128),w
  3040  0401  1283               	bcf	3,5	;RP0=0, select bank0
  3041  0402  1303               	bcf	3,6	;RP1=0, select bank0
  3042  0403  00D1               	movwf	___fltol@f1
  3043  0404  120A  158A  2006  120A  118A  	fcall	___fltol
  3044  0409  1283               	bcf	3,5	;RP0=0, select bank0
  3045  040A  1303               	bcf	3,6	;RP1=0, select bank0
  3046  040B  0854               	movf	?___fltol+3,w
  3047  040C  1683               	bsf	3,5	;RP0=1, select bank1
  3048  040D  1303               	bcf	3,6	;RP1=0, select bank1
  3049  040E  00B2               	movwf	(sprintf@val+3)^(0+128)
  3050  040F  1283               	bcf	3,5	;RP0=0, select bank0
  3051  0410  1303               	bcf	3,6	;RP1=0, select bank0
  3052  0411  0853               	movf	?___fltol+2,w
  3053  0412  1683               	bsf	3,5	;RP0=1, select bank1
  3054  0413  1303               	bcf	3,6	;RP1=0, select bank1
  3055  0414  00B1               	movwf	(sprintf@val+2)^(0+128)
  3056  0415  1283               	bcf	3,5	;RP0=0, select bank0
  3057  0416  1303               	bcf	3,6	;RP1=0, select bank0
  3058  0417  0852               	movf	?___fltol+1,w
  3059  0418  1683               	bsf	3,5	;RP0=1, select bank1
  3060  0419  1303               	bcf	3,6	;RP1=0, select bank1
  3061  041A  00B0               	movwf	(sprintf@val+1)^(0+128)
  3062  041B  1283               	bcf	3,5	;RP0=0, select bank0
  3063  041C  1303               	bcf	3,6	;RP1=0, select bank0
  3064  041D  0851               	movf	?___fltol,w
  3065  041E  1683               	bsf	3,5	;RP0=1, select bank1
  3066  041F  1303               	bcf	3,6	;RP1=0, select bank1
  3067  0420  00AF               	movwf	sprintf@val^(0+128)
  3068  0421                     l3266:
  3069                           
  3070                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3071  0421  0832               	movf	(sprintf@val+3)^(0+128),w
  3072  0422  00F3               	movwf	___xxtofl@val+3
  3073  0423  0831               	movf	(sprintf@val+2)^(0+128),w
  3074  0424  00F2               	movwf	___xxtofl@val+2
  3075  0425  0830               	movf	(sprintf@val+1)^(0+128),w
  3076  0426  00F1               	movwf	___xxtofl@val+1
  3077  0427  082F               	movf	sprintf@val^(0+128),w
  3078  0428  00F0               	movwf	___xxtofl@val
  3079  0429  3000               	movlw	0
  3080  042A  160A  158A  2746  120A  118A  	fcall	___xxtofl
  3081  042F  0873               	movf	?___xxtofl+3,w
  3082  0430  1283               	bcf	3,5	;RP0=0, select bank0
  3083  0431  1303               	bcf	3,6	;RP1=0, select bank0
  3084  0432  00E9               	movwf	___flsub@a+3
  3085  0433  0872               	movf	?___xxtofl+2,w
  3086  0434  00E8               	movwf	___flsub@a+2
  3087  0435  0871               	movf	?___xxtofl+1,w
  3088  0436  00E7               	movwf	___flsub@a+1
  3089  0437  0870               	movf	?___xxtofl,w
  3090  0438  00E6               	movwf	___flsub@a
  3091  0439  1683               	bsf	3,5	;RP0=1, select bank1
  3092  043A  1303               	bcf	3,6	;RP1=0, select bank1
  3093  043B  0840               	movf	(sprintf@fval+3)^(0+128),w
  3094  043C  1283               	bcf	3,5	;RP0=0, select bank0
  3095  043D  1303               	bcf	3,6	;RP1=0, select bank0
  3096  043E  00ED               	movwf	___flsub@b+3
  3097  043F  1683               	bsf	3,5	;RP0=1, select bank1
  3098  0440  1303               	bcf	3,6	;RP1=0, select bank1
  3099  0441  083F               	movf	(sprintf@fval+2)^(0+128),w
  3100  0442  1283               	bcf	3,5	;RP0=0, select bank0
  3101  0443  1303               	bcf	3,6	;RP1=0, select bank0
  3102  0444  00EC               	movwf	___flsub@b+2
  3103  0445  1683               	bsf	3,5	;RP0=1, select bank1
  3104  0446  1303               	bcf	3,6	;RP1=0, select bank1
  3105  0447  083E               	movf	(sprintf@fval+1)^(0+128),w
  3106  0448  1283               	bcf	3,5	;RP0=0, select bank0
  3107  0449  1303               	bcf	3,6	;RP1=0, select bank0
  3108  044A  00EB               	movwf	___flsub@b+1
  3109  044B  1683               	bsf	3,5	;RP0=1, select bank1
  3110  044C  1303               	bcf	3,6	;RP1=0, select bank1
  3111  044D  083D               	movf	sprintf@fval^(0+128),w
  3112  044E  1283               	bcf	3,5	;RP0=0, select bank0
  3113  044F  1303               	bcf	3,6	;RP1=0, select bank0
  3114  0450  00EA               	movwf	___flsub@b
  3115  0451  160A  158A  249B  120A  118A  	fcall	___flsub
  3116  0456  1283               	bcf	3,5	;RP0=0, select bank0
  3117  0457  1303               	bcf	3,6	;RP1=0, select bank0
  3118  0458  0869               	movf	?___flsub+3,w
  3119  0459  1683               	bsf	3,5	;RP0=1, select bank1
  3120  045A  1303               	bcf	3,6	;RP1=0, select bank1
  3121  045B  00C0               	movwf	(sprintf@fval+3)^(0+128)
  3122  045C  1283               	bcf	3,5	;RP0=0, select bank0
  3123  045D  1303               	bcf	3,6	;RP1=0, select bank0
  3124  045E  0868               	movf	?___flsub+2,w
  3125  045F  1683               	bsf	3,5	;RP0=1, select bank1
  3126  0460  1303               	bcf	3,6	;RP1=0, select bank1
  3127  0461  00BF               	movwf	(sprintf@fval+2)^(0+128)
  3128  0462  1283               	bcf	3,5	;RP0=0, select bank0
  3129  0463  1303               	bcf	3,6	;RP1=0, select bank0
  3130  0464  0867               	movf	?___flsub+1,w
  3131  0465  1683               	bsf	3,5	;RP0=1, select bank1
  3132  0466  1303               	bcf	3,6	;RP1=0, select bank1
  3133  0467  00BE               	movwf	(sprintf@fval+1)^(0+128)
  3134  0468  1283               	bcf	3,5	;RP0=0, select bank0
  3135  0469  1303               	bcf	3,6	;RP1=0, select bank0
  3136  046A  0866               	movf	?___flsub,w
  3137  046B  1683               	bsf	3,5	;RP0=1, select bank1
  3138  046C  1303               	bcf	3,6	;RP1=0, select bank1
  3139  046D  00BD               	movwf	sprintf@fval^(0+128)
  3140  046E                     l3268:
  3141                           
  3142                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3143  046E  01BB               	clrf	sprintf@eexp^(0+128)
  3144  046F  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  3145  0470                     l3270:
  3146                           
  3147                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3148  0470  01C4               	clrf	sprintf@c^(0+128)
  3149  0471  0AC4               	incf	sprintf@c^(0+128),f
  3150  0472                     l3276:
  3151                           
  3152                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3153  0472  0844               	movf	sprintf@c^(0+128),w
  3154  0473  00A5               	movwf	??_sprintf^(0+128)
  3155  0474  3001               	movlw	1
  3156  0475                     u5235:
  3157  0475  1003               	clrc
  3158  0476  0DA5               	rlf	??_sprintf^(0+128),f
  3159  0477  3EFF               	addlw	-1
  3160  0478  1D03               	skipz
  3161  0479  2C75               	goto	u5235
  3162  047A  1003               	clrc
  3163  047B  0D25               	rlf	??_sprintf^(0+128),w
  3164  047C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3165  047D  0084               	movwf	4
  3166  047E  160A  158A  2000  120A  118A  	fcall	stringdir
  3167  0483  00A6               	movwf	(??_sprintf+1)^(0+128)
  3168  0484  160A  158A  2000  120A  118A  	fcall	stringdir
  3169  0489  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  3170  048A  160A  158A  2000  120A  118A  	fcall	stringdir
  3171  048F  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  3172  0490  160A  158A  2000  120A  118A  	fcall	stringdir
  3173  0495  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  3174  0496  0829               	movf	(??_sprintf+4)^(0+128),w
  3175  0497  0232               	subwf	(sprintf@val+3)^(0+128),w
  3176  0498  1D03               	skipz
  3177  0499  2CA4               	goto	u5245
  3178  049A  0828               	movf	(??_sprintf+3)^(0+128),w
  3179  049B  0231               	subwf	(sprintf@val+2)^(0+128),w
  3180  049C  1D03               	skipz
  3181  049D  2CA4               	goto	u5245
  3182  049E  0827               	movf	(??_sprintf+2)^(0+128),w
  3183  049F  0230               	subwf	(sprintf@val+1)^(0+128),w
  3184  04A0  1D03               	skipz
  3185  04A1  2CA4               	goto	u5245
  3186  04A2  0826               	movf	(??_sprintf+1)^(0+128),w
  3187  04A3  022F               	subwf	sprintf@val^(0+128),w
  3188  04A4                     u5245:
  3189  04A4  1803               	skipnc
  3190  04A5  2CA7               	goto	u5241
  3191  04A6  2CA8               	goto	u5240
  3192  04A7                     u5241:
  3193  04A7  2CA9               	goto	l3280
  3194  04A8                     u5240:
  3195  04A8  2CB3               	goto	l3282
  3196  04A9                     l3280:
  3197  04A9  3001               	movlw	1
  3198  04AA  00A5               	movwf	??_sprintf^(0+128)
  3199  04AB  0825               	movf	??_sprintf^(0+128),w
  3200  04AC  07C4               	addwf	sprintf@c^(0+128),f
  3201  04AD  300A               	movlw	10
  3202  04AE  0644               	xorwf	sprintf@c^(0+128),w
  3203  04AF  1D03               	btfss	3,2
  3204  04B0  2CB2               	goto	u5251
  3205  04B1  2CB3               	goto	u5250
  3206  04B2                     u5251:
  3207  04B2  2C72               	goto	l3276
  3208  04B3                     u5250:
  3209  04B3                     l3282:
  3210                           
  3211                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  3212  04B3  0844               	movf	sprintf@c^(0+128),w
  3213  04B4  0742               	addwf	sprintf@prec^(0+128),w
  3214  04B5  00A5               	movwf	??_sprintf^(0+128)
  3215  04B6  0843               	movf	(sprintf@prec+1)^(0+128),w
  3216  04B7  1803               	skipnc
  3217  04B8  0A43               	incf	(sprintf@prec+1)^(0+128),w
  3218  04B9  00A6               	movwf	(??_sprintf^(0+128)+1)
  3219  04BA  083B               	movf	sprintf@eexp^(0+128),w
  3220  04BB  0725               	addwf	??_sprintf^(0+128),w
  3221  04BC  00A7               	movwf	(??_sprintf+2)^(0+128)
  3222  04BD  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3223  04BE  1803               	skipnc
  3224  04BF  0A3C               	incf	(sprintf@eexp+1)^(0+128),w
  3225  04C0  0726               	addwf	(??_sprintf+1)^(0+128),w
  3226  04C1  00A8               	movwf	(??_sprintf+3)^(0+128)
  3227  04C2  0827               	movf	(??_sprintf+2)^(0+128),w
  3228  04C3  02B5               	subwf	sprintf@width^(0+128),f
  3229  04C4  0828               	movf	(??_sprintf+3)^(0+128),w
  3230  04C5  1C03               	skipc
  3231  04C6  03B6               	decf	(sprintf@width+1)^(0+128),f
  3232  04C7  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3233                           
  3234                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  3235  04C8  0842               	movf	sprintf@prec^(0+128),w
  3236  04C9  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3237  04CA  1903               	btfsc	3,2
  3238  04CB  2CCD               	goto	u5261
  3239  04CC  2CCE               	goto	u5260
  3240  04CD                     u5261:
  3241  04CD  2CD4               	goto	l3286
  3242  04CE                     u5260:
  3243  04CE                     l3284:
  3244                           
  3245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  3246  04CE  30FF               	movlw	255
  3247  04CF  07B5               	addwf	sprintf@width^(0+128),f
  3248  04D0  1803               	skipnc
  3249  04D1  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3250  04D2  30FF               	movlw	255
  3251  04D3  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3252  04D4                     l3286:
  3253                           
  3254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  3255  04D4  3003               	movlw	3
  3256  04D5  0533               	andwf	sprintf@flag^(0+128),w
  3257  04D6  00A5               	movwf	??_sprintf^(0+128)
  3258  04D7  3000               	movlw	0
  3259  04D8  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3260  04D9  00A6               	movwf	(??_sprintf+1)^(0+128)
  3261  04DA  0825               	movf	??_sprintf^(0+128),w
  3262  04DB  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3263  04DC  1903               	btfsc	3,2
  3264  04DD  2CDF               	goto	u5271
  3265  04DE  2CE0               	goto	u5270
  3266  04DF                     u5271:
  3267  04DF  2CF5               	goto	l3296
  3268  04E0                     u5270:
  3269  04E0                     l3288:
  3270                           
  3271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  3272  04E0  30FF               	movlw	255
  3273  04E1  07B5               	addwf	sprintf@width^(0+128),f
  3274  04E2  1803               	skipnc
  3275  04E3  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3276  04E4  30FF               	movlw	255
  3277  04E5  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3278  04E6  2CF5               	goto	l3296
  3279  04E7                     l3290:
  3280                           
  3281                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  3282  04E7  3020               	movlw	32
  3283  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  3284  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  3285  04EA  00A5               	movwf	??_sprintf^(0+128)
  3286  04EB  0841               	movf	sprintf@sp^(0+128),w
  3287  04EC  0084               	movwf	4
  3288  04ED  0825               	movf	??_sprintf^(0+128),w
  3289  04EE  1383               	bcf	3,7	;select IRP bank0
  3290  04EF  0080               	movwf	0
  3291  04F0                     l3292:
  3292  04F0  3001               	movlw	1
  3293  04F1  00A5               	movwf	??_sprintf^(0+128)
  3294  04F2  0825               	movf	??_sprintf^(0+128),w
  3295  04F3  07C1               	addwf	sprintf@sp^(0+128),f
  3296  04F4  2CE0               	goto	l3288
  3297  04F5                     l3296:
  3298                           
  3299                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  3300  04F5  0836               	movf	(sprintf@width+1)^(0+128),w
  3301  04F6  3A80               	xorlw	128
  3302  04F7  00FF               	movwf	btemp+1
  3303  04F8  3080               	movlw	128
  3304  04F9  027F               	subwf	btemp+1,w
  3305  04FA  1D03               	skipz
  3306  04FB  2CFE               	goto	u5285
  3307  04FC  3001               	movlw	1
  3308  04FD  0235               	subwf	sprintf@width^(0+128),w
  3309  04FE                     u5285:
  3310  04FE  1803               	skipnc
  3311  04FF  2D01               	goto	u5281
  3312  0500  2D02               	goto	u5280
  3313  0501                     u5281:
  3314  0501  2CE7               	goto	l3290
  3315  0502                     u5280:
  3316  0502                     l3298:
  3317                           
  3318                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  3319  0502  3003               	movlw	3
  3320  0503  1683               	bsf	3,5	;RP0=1, select bank1
  3321  0504  1303               	bcf	3,6	;RP1=0, select bank1
  3322  0505  0533               	andwf	sprintf@flag^(0+128),w
  3323  0506  00A5               	movwf	??_sprintf^(0+128)
  3324  0507  3000               	movlw	0
  3325  0508  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3326  0509  00A6               	movwf	(??_sprintf+1)^(0+128)
  3327  050A  0825               	movf	??_sprintf^(0+128),w
  3328  050B  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3329  050C  1903               	btfsc	3,2
  3330  050D  2D0F               	goto	u5291
  3331  050E  2D10               	goto	u5290
  3332  050F                     u5291:
  3333  050F  2D82               	goto	l307
  3334  0510                     u5290:
  3335  0510                     l3300:
  3336                           
  3337                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3338  0510  302D               	movlw	45
  3339  0511  00A5               	movwf	??_sprintf^(0+128)
  3340  0512  0841               	movf	sprintf@sp^(0+128),w
  3341  0513  0084               	movwf	4
  3342  0514  0825               	movf	??_sprintf^(0+128),w
  3343  0515  1383               	bcf	3,7	;select IRP bank0
  3344  0516  0080               	movwf	0
  3345  0517                     l3302:
  3346  0517  3001               	movlw	1
  3347  0518  00A5               	movwf	??_sprintf^(0+128)
  3348  0519  0825               	movf	??_sprintf^(0+128),w
  3349  051A  07C1               	addwf	sprintf@sp^(0+128),f
  3350  051B  2D82               	goto	l307
  3351  051C                     l3304:
  3352                           
  3353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3354  051C  0844               	movf	sprintf@c^(0+128),w
  3355  051D  00A5               	movwf	??_sprintf^(0+128)
  3356  051E  3001               	movlw	1
  3357  051F                     u5305:
  3358  051F  1003               	clrc
  3359  0520  0DA5               	rlf	??_sprintf^(0+128),f
  3360  0521  3EFF               	addlw	-1
  3361  0522  1D03               	skipz
  3362  0523  2D1F               	goto	u5305
  3363  0524  1003               	clrc
  3364  0525  0D25               	rlf	??_sprintf^(0+128),w
  3365  0526  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3366  0527  0084               	movwf	4
  3367  0528  160A  158A  2000  120A  118A  	fcall	stringdir
  3368  052D  00F0               	movwf	___lldiv@divisor
  3369  052E  160A  158A  2000  120A  118A  	fcall	stringdir
  3370  0533  00F1               	movwf	___lldiv@divisor+1
  3371  0534  160A  158A  2000  120A  118A  	fcall	stringdir
  3372  0539  00F2               	movwf	___lldiv@divisor+2
  3373  053A  160A  158A  2000  120A  118A  	fcall	stringdir
  3374  053F  00F3               	movwf	___lldiv@divisor+3
  3375  0540  0832               	movf	(sprintf@val+3)^(0+128),w
  3376  0541  00F7               	movwf	___lldiv@dividend+3
  3377  0542  0831               	movf	(sprintf@val+2)^(0+128),w
  3378  0543  00F6               	movwf	___lldiv@dividend+2
  3379  0544  0830               	movf	(sprintf@val+1)^(0+128),w
  3380  0545  00F5               	movwf	___lldiv@dividend+1
  3381  0546  082F               	movf	sprintf@val^(0+128),w
  3382  0547  00F4               	movwf	___lldiv@dividend
  3383  0548  160A  158A  26E0  120A  118A  	fcall	___lldiv
  3384  054D  0873               	movf	?___lldiv+3,w
  3385  054E  1683               	bsf	3,5	;RP0=1, select bank1
  3386  054F  1303               	bcf	3,6	;RP1=0, select bank1
  3387  0550  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3388  0551  0872               	movf	?___lldiv+2,w
  3389  0552  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3390  0553  0871               	movf	?___lldiv+1,w
  3391  0554  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3392  0555  0870               	movf	?___lldiv,w
  3393  0556  00B7               	movwf	sprintf@tmpval^(0+128)
  3394  0557                     l3306:
  3395                           
  3396                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3397  0557  3000               	movlw	0
  3398  0558  00F3               	movwf	___llmod@divisor+3
  3399  0559  3000               	movlw	0
  3400  055A  00F2               	movwf	___llmod@divisor+2
  3401  055B  3000               	movlw	0
  3402  055C  00F1               	movwf	___llmod@divisor+1
  3403  055D  300A               	movlw	10
  3404  055E  00F0               	movwf	___llmod@divisor
  3405  055F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3406  0560  00F7               	movwf	___llmod@dividend+3
  3407  0561  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3408  0562  00F6               	movwf	___llmod@dividend+2
  3409  0563  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3410  0564  00F5               	movwf	___llmod@dividend+1
  3411  0565  0837               	movf	sprintf@tmpval^(0+128),w
  3412  0566  00F4               	movwf	___llmod@dividend
  3413  0567  160A  158A  25D7  120A  118A  	fcall	___llmod
  3414  056C  0873               	movf	?___llmod+3,w
  3415  056D  1683               	bsf	3,5	;RP0=1, select bank1
  3416  056E  1303               	bcf	3,6	;RP1=0, select bank1
  3417  056F  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3418  0570  0872               	movf	?___llmod+2,w
  3419  0571  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3420  0572  0871               	movf	?___llmod+1,w
  3421  0573  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3422  0574  0870               	movf	?___llmod,w
  3423  0575  00B7               	movwf	sprintf@tmpval^(0+128)
  3424  0576                     l3308:
  3425                           
  3426                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3427  0576  0837               	movf	sprintf@tmpval^(0+128),w
  3428  0577  3E30               	addlw	48
  3429  0578  00A5               	movwf	??_sprintf^(0+128)
  3430  0579  0841               	movf	sprintf@sp^(0+128),w
  3431  057A  0084               	movwf	4
  3432  057B  0825               	movf	??_sprintf^(0+128),w
  3433  057C  1383               	bcf	3,7	;select IRP bank0
  3434  057D  0080               	movwf	0
  3435  057E  3001               	movlw	1
  3436  057F  00A5               	movwf	??_sprintf^(0+128)
  3437  0580  0825               	movf	??_sprintf^(0+128),w
  3438  0581  07C1               	addwf	sprintf@sp^(0+128),f
  3439  0582                     l307:	
  3440                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  3441                           
  3442                           
  3443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3444  0582  3001               	movlw	1
  3445  0583  02C4               	subwf	sprintf@c^(0+128),f
  3446  0584  0A44               	incf	sprintf@c^(0+128),w
  3447  0585  1D03               	btfss	3,2
  3448  0586  2D88               	goto	u5311
  3449  0587  2D89               	goto	u5310
  3450  0588                     u5311:
  3451  0588  2D1C               	goto	l3304
  3452  0589                     u5310:
  3453  0589  2D9D               	goto	l3316
  3454  058A                     l3310:
  3455                           
  3456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3457  058A  3030               	movlw	48
  3458  058B  1683               	bsf	3,5	;RP0=1, select bank1
  3459  058C  1303               	bcf	3,6	;RP1=0, select bank1
  3460  058D  00A5               	movwf	??_sprintf^(0+128)
  3461  058E  0841               	movf	sprintf@sp^(0+128),w
  3462  058F  0084               	movwf	4
  3463  0590  0825               	movf	??_sprintf^(0+128),w
  3464  0591  1383               	bcf	3,7	;select IRP bank0
  3465  0592  0080               	movwf	0
  3466  0593                     l3312:
  3467  0593  3001               	movlw	1
  3468  0594  00A5               	movwf	??_sprintf^(0+128)
  3469  0595  0825               	movf	??_sprintf^(0+128),w
  3470  0596  07C1               	addwf	sprintf@sp^(0+128),f
  3471  0597                     l3314:
  3472                           
  3473                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3474  0597  30FF               	movlw	255
  3475  0598  07BB               	addwf	sprintf@eexp^(0+128),f
  3476  0599  1803               	skipnc
  3477  059A  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3478  059B  30FF               	movlw	255
  3479  059C  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3480  059D                     l3316:
  3481                           
  3482                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3483  059D  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3484  059E  3A80               	xorlw	128
  3485  059F  00FF               	movwf	btemp+1
  3486  05A0  3080               	movlw	128
  3487  05A1  027F               	subwf	btemp+1,w
  3488  05A2  1D03               	skipz
  3489  05A3  2DA6               	goto	u5325
  3490  05A4  3001               	movlw	1
  3491  05A5  023B               	subwf	sprintf@eexp^(0+128),w
  3492  05A6                     u5325:
  3493  05A6  1803               	skipnc
  3494  05A7  2DA9               	goto	u5321
  3495  05A8  2DAA               	goto	u5320
  3496  05A9                     u5321:
  3497  05A9  2D8A               	goto	l3310
  3498  05AA                     u5320:
  3499  05AA                     l3318:
  3500                           
  3501                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3502  05AA  1683               	bsf	3,5	;RP0=1, select bank1
  3503  05AB  1303               	bcf	3,6	;RP1=0, select bank1
  3504  05AC  0843               	movf	(sprintf@prec+1)^(0+128),w
  3505  05AD  3A80               	xorlw	128
  3506  05AE  00FF               	movwf	btemp+1
  3507  05AF  3080               	movlw	128
  3508  05B0  027F               	subwf	btemp+1,w
  3509  05B1  1D03               	skipz
  3510  05B2  2DB5               	goto	u5335
  3511  05B3  3009               	movlw	9
  3512  05B4  0242               	subwf	sprintf@prec^(0+128),w
  3513  05B5                     u5335:
  3514  05B5  1C03               	skipc
  3515  05B6  2DB8               	goto	u5331
  3516  05B7  2DB9               	goto	u5330
  3517  05B8                     u5331:
  3518  05B8  2DC0               	goto	l3322
  3519  05B9                     u5330:
  3520  05B9                     l3320:
  3521                           
  3522                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3523  05B9  3008               	movlw	8
  3524  05BA  1683               	bsf	3,5	;RP0=1, select bank1
  3525  05BB  1303               	bcf	3,6	;RP1=0, select bank1
  3526  05BC  00A5               	movwf	??_sprintf^(0+128)
  3527  05BD  0825               	movf	??_sprintf^(0+128),w
  3528  05BE  00C4               	movwf	sprintf@c^(0+128)
  3529  05BF  2DC6               	goto	l314
  3530  05C0                     l3322:
  3531                           
  3532                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3533  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  3534  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  3535  05C2  0842               	movf	sprintf@prec^(0+128),w
  3536  05C3  00A5               	movwf	??_sprintf^(0+128)
  3537  05C4  0825               	movf	??_sprintf^(0+128),w
  3538  05C5  00C4               	movwf	sprintf@c^(0+128)
  3539  05C6                     l314:
  3540                           
  3541                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3542  05C6  0844               	movf	sprintf@c^(0+128),w
  3543  05C7  00A5               	movwf	??_sprintf^(0+128)
  3544  05C8  01A6               	clrf	(??_sprintf^(0+128)+1)
  3545  05C9  0825               	movf	??_sprintf^(0+128),w
  3546  05CA  02C2               	subwf	sprintf@prec^(0+128),f
  3547  05CB  0826               	movf	(??_sprintf+1)^(0+128),w
  3548  05CC  1C03               	skipc
  3549  05CD  03C3               	decf	(sprintf@prec+1)^(0+128),f
  3550  05CE  02C3               	subwf	(sprintf@prec+1)^(0+128),f
  3551  05CF                     l3324:
  3552                           
  3553                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3554  05CF  0844               	movf	sprintf@c^(0+128),w
  3555  05D0  1903               	btfsc	3,2
  3556  05D1  2DD3               	goto	u5341
  3557  05D2  2DD4               	goto	u5340
  3558  05D3                     u5341:
  3559  05D3  2DDF               	goto	l3330
  3560  05D4                     u5340:
  3561  05D4                     l3326:
  3562                           
  3563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3564  05D4  302E               	movlw	46
  3565  05D5  00A5               	movwf	??_sprintf^(0+128)
  3566  05D6  0841               	movf	sprintf@sp^(0+128),w
  3567  05D7  0084               	movwf	4
  3568  05D8  0825               	movf	??_sprintf^(0+128),w
  3569  05D9  1383               	bcf	3,7	;select IRP bank0
  3570  05DA  0080               	movwf	0
  3571  05DB                     l3328:
  3572  05DB  3001               	movlw	1
  3573  05DC  00A5               	movwf	??_sprintf^(0+128)
  3574  05DD  0825               	movf	??_sprintf^(0+128),w
  3575  05DE  07C1               	addwf	sprintf@sp^(0+128),f
  3576  05DF                     l3330:
  3577                           
  3578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3579  05DF  0844               	movf	sprintf@c^(0+128),w
  3580  05E0  120A  158A  2140  120A  118A  	fcall	_scale
  3581  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  3582  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  3583  05E7  0841               	movf	?_scale+3,w
  3584  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  3585  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  3586  05EA  00AD               	movwf	(_sprintf$1164+3)^(0+128)
  3587  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  3588  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  3589  05ED  0840               	movf	?_scale+2,w
  3590  05EE  1683               	bsf	3,5	;RP0=1, select bank1
  3591  05EF  1303               	bcf	3,6	;RP1=0, select bank1
  3592  05F0  00AC               	movwf	(_sprintf$1164+2)^(0+128)
  3593  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  3594  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  3595  05F3  083F               	movf	?_scale+1,w
  3596  05F4  1683               	bsf	3,5	;RP0=1, select bank1
  3597  05F5  1303               	bcf	3,6	;RP1=0, select bank1
  3598  05F6  00AB               	movwf	(_sprintf$1164+1)^(0+128)
  3599  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  3600  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  3601  05F9  083E               	movf	?_scale,w
  3602  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  3603  05FB  1303               	bcf	3,6	;RP1=0, select bank1
  3604  05FC  00AA               	movwf	_sprintf$1164^(0+128)
  3605  05FD                     l3332:
  3606                           
  3607                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3608  05FD  082D               	movf	(_sprintf$1164+3)^(0+128),w
  3609  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  3610  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  3611  0600  00AB               	movwf	___flmul@a+3
  3612  0601  1683               	bsf	3,5	;RP0=1, select bank1
  3613  0602  1303               	bcf	3,6	;RP1=0, select bank1
  3614  0603  082C               	movf	(_sprintf$1164+2)^(0+128),w
  3615  0604  1283               	bcf	3,5	;RP0=0, select bank0
  3616  0605  1303               	bcf	3,6	;RP1=0, select bank0
  3617  0606  00AA               	movwf	___flmul@a+2
  3618  0607  1683               	bsf	3,5	;RP0=1, select bank1
  3619  0608  1303               	bcf	3,6	;RP1=0, select bank1
  3620  0609  082B               	movf	(_sprintf$1164+1)^(0+128),w
  3621  060A  1283               	bcf	3,5	;RP0=0, select bank0
  3622  060B  1303               	bcf	3,6	;RP1=0, select bank0
  3623  060C  00A9               	movwf	___flmul@a+1
  3624  060D  1683               	bsf	3,5	;RP0=1, select bank1
  3625  060E  1303               	bcf	3,6	;RP1=0, select bank1
  3626  060F  082A               	movf	_sprintf$1164^(0+128),w
  3627  0610  1283               	bcf	3,5	;RP0=0, select bank0
  3628  0611  1303               	bcf	3,6	;RP1=0, select bank0
  3629  0612  00A8               	movwf	___flmul@a
  3630  0613  1683               	bsf	3,5	;RP0=1, select bank1
  3631  0614  1303               	bcf	3,6	;RP1=0, select bank1
  3632  0615  0840               	movf	(sprintf@fval+3)^(0+128),w
  3633  0616  1283               	bcf	3,5	;RP0=0, select bank0
  3634  0617  1303               	bcf	3,6	;RP1=0, select bank0
  3635  0618  00A7               	movwf	___flmul@b+3
  3636  0619  1683               	bsf	3,5	;RP0=1, select bank1
  3637  061A  1303               	bcf	3,6	;RP1=0, select bank1
  3638  061B  083F               	movf	(sprintf@fval+2)^(0+128),w
  3639  061C  1283               	bcf	3,5	;RP0=0, select bank0
  3640  061D  1303               	bcf	3,6	;RP1=0, select bank0
  3641  061E  00A6               	movwf	___flmul@b+2
  3642  061F  1683               	bsf	3,5	;RP0=1, select bank1
  3643  0620  1303               	bcf	3,6	;RP1=0, select bank1
  3644  0621  083E               	movf	(sprintf@fval+1)^(0+128),w
  3645  0622  1283               	bcf	3,5	;RP0=0, select bank0
  3646  0623  1303               	bcf	3,6	;RP1=0, select bank0
  3647  0624  00A5               	movwf	___flmul@b+1
  3648  0625  1683               	bsf	3,5	;RP0=1, select bank1
  3649  0626  1303               	bcf	3,6	;RP1=0, select bank1
  3650  0627  083D               	movf	sprintf@fval^(0+128),w
  3651  0628  1283               	bcf	3,5	;RP0=0, select bank0
  3652  0629  1303               	bcf	3,6	;RP1=0, select bank0
  3653  062A  00A4               	movwf	___flmul@b
  3654  062B  120A  158A  249F  120A  118A  	fcall	___flmul
  3655  0630  1283               	bcf	3,5	;RP0=0, select bank0
  3656  0631  1303               	bcf	3,6	;RP1=0, select bank0
  3657  0632  0827               	movf	?___flmul+3,w
  3658  0633  00D4               	movwf	___fltol@f1+3
  3659  0634  0826               	movf	?___flmul+2,w
  3660  0635  00D3               	movwf	___fltol@f1+2
  3661  0636  0825               	movf	?___flmul+1,w
  3662  0637  00D2               	movwf	___fltol@f1+1
  3663  0638  0824               	movf	?___flmul,w
  3664  0639  00D1               	movwf	___fltol@f1
  3665  063A  120A  158A  2006  120A  118A  	fcall	___fltol
  3666  063F  1283               	bcf	3,5	;RP0=0, select bank0
  3667  0640  1303               	bcf	3,6	;RP1=0, select bank0
  3668  0641  0854               	movf	?___fltol+3,w
  3669  0642  1683               	bsf	3,5	;RP0=1, select bank1
  3670  0643  1303               	bcf	3,6	;RP1=0, select bank1
  3671  0644  00B2               	movwf	(sprintf@val+3)^(0+128)
  3672  0645  1283               	bcf	3,5	;RP0=0, select bank0
  3673  0646  1303               	bcf	3,6	;RP1=0, select bank0
  3674  0647  0853               	movf	?___fltol+2,w
  3675  0648  1683               	bsf	3,5	;RP0=1, select bank1
  3676  0649  1303               	bcf	3,6	;RP1=0, select bank1
  3677  064A  00B1               	movwf	(sprintf@val+2)^(0+128)
  3678  064B  1283               	bcf	3,5	;RP0=0, select bank0
  3679  064C  1303               	bcf	3,6	;RP1=0, select bank0
  3680  064D  0852               	movf	?___fltol+1,w
  3681  064E  1683               	bsf	3,5	;RP0=1, select bank1
  3682  064F  1303               	bcf	3,6	;RP1=0, select bank1
  3683  0650  00B0               	movwf	(sprintf@val+1)^(0+128)
  3684  0651  1283               	bcf	3,5	;RP0=0, select bank0
  3685  0652  1303               	bcf	3,6	;RP1=0, select bank0
  3686  0653  0851               	movf	?___fltol,w
  3687  0654  1683               	bsf	3,5	;RP0=1, select bank1
  3688  0655  1303               	bcf	3,6	;RP1=0, select bank1
  3689  0656  00AF               	movwf	sprintf@val^(0+128)
  3690                           
  3691                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3692  0657  2EF9               	goto	l3342
  3693  0658                     l3334:
  3694                           
  3695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3696  0658  0844               	movf	sprintf@c^(0+128),w
  3697  0659  00A5               	movwf	??_sprintf^(0+128)
  3698  065A  3001               	movlw	1
  3699  065B                     u5355:
  3700  065B  1003               	clrc
  3701  065C  0DA5               	rlf	??_sprintf^(0+128),f
  3702  065D  3EFF               	addlw	-1
  3703  065E  1D03               	skipz
  3704  065F  2E5B               	goto	u5355
  3705  0660  1003               	clrc
  3706  0661  0D25               	rlf	??_sprintf^(0+128),w
  3707  0662  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3708  0663  0084               	movwf	4
  3709  0664  160A  158A  2000  120A  118A  	fcall	stringdir
  3710  0669  00F0               	movwf	___lldiv@divisor
  3711  066A  160A  158A  2000  120A  118A  	fcall	stringdir
  3712  066F  00F1               	movwf	___lldiv@divisor+1
  3713  0670  160A  158A  2000  120A  118A  	fcall	stringdir
  3714  0675  00F2               	movwf	___lldiv@divisor+2
  3715  0676  160A  158A  2000  120A  118A  	fcall	stringdir
  3716  067B  00F3               	movwf	___lldiv@divisor+3
  3717  067C  0832               	movf	(sprintf@val+3)^(0+128),w
  3718  067D  00F7               	movwf	___lldiv@dividend+3
  3719  067E  0831               	movf	(sprintf@val+2)^(0+128),w
  3720  067F  00F6               	movwf	___lldiv@dividend+2
  3721  0680  0830               	movf	(sprintf@val+1)^(0+128),w
  3722  0681  00F5               	movwf	___lldiv@dividend+1
  3723  0682  082F               	movf	sprintf@val^(0+128),w
  3724  0683  00F4               	movwf	___lldiv@dividend
  3725  0684  160A  158A  26E0  120A  118A  	fcall	___lldiv
  3726  0689  0873               	movf	?___lldiv+3,w
  3727  068A  1683               	bsf	3,5	;RP0=1, select bank1
  3728  068B  1303               	bcf	3,6	;RP1=0, select bank1
  3729  068C  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3730  068D  0872               	movf	?___lldiv+2,w
  3731  068E  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3732  068F  0871               	movf	?___lldiv+1,w
  3733  0690  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3734  0691  0870               	movf	?___lldiv,w
  3735  0692  00B7               	movwf	sprintf@tmpval^(0+128)
  3736  0693                     l3336:
  3737                           
  3738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3739  0693  3000               	movlw	0
  3740  0694  00F3               	movwf	___llmod@divisor+3
  3741  0695  3000               	movlw	0
  3742  0696  00F2               	movwf	___llmod@divisor+2
  3743  0697  3000               	movlw	0
  3744  0698  00F1               	movwf	___llmod@divisor+1
  3745  0699  300A               	movlw	10
  3746  069A  00F0               	movwf	___llmod@divisor
  3747  069B  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3748  069C  00F7               	movwf	___llmod@dividend+3
  3749  069D  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3750  069E  00F6               	movwf	___llmod@dividend+2
  3751  069F  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3752  06A0  00F5               	movwf	___llmod@dividend+1
  3753  06A1  0837               	movf	sprintf@tmpval^(0+128),w
  3754  06A2  00F4               	movwf	___llmod@dividend
  3755  06A3  160A  158A  25D7  120A  118A  	fcall	___llmod
  3756  06A8  0873               	movf	?___llmod+3,w
  3757  06A9  1683               	bsf	3,5	;RP0=1, select bank1
  3758  06AA  1303               	bcf	3,6	;RP1=0, select bank1
  3759  06AB  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3760  06AC  0872               	movf	?___llmod+2,w
  3761  06AD  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3762  06AE  0871               	movf	?___llmod+1,w
  3763  06AF  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3764  06B0  0870               	movf	?___llmod,w
  3765  06B1  00B7               	movwf	sprintf@tmpval^(0+128)
  3766  06B2                     l3338:
  3767                           
  3768                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3769  06B2  0837               	movf	sprintf@tmpval^(0+128),w
  3770  06B3  3E30               	addlw	48
  3771  06B4  00A5               	movwf	??_sprintf^(0+128)
  3772  06B5  0841               	movf	sprintf@sp^(0+128),w
  3773  06B6  0084               	movwf	4
  3774  06B7  0825               	movf	??_sprintf^(0+128),w
  3775  06B8  1383               	bcf	3,7	;select IRP bank0
  3776  06B9  0080               	movwf	0
  3777  06BA  3001               	movlw	1
  3778  06BB  00A5               	movwf	??_sprintf^(0+128)
  3779  06BC  0825               	movf	??_sprintf^(0+128),w
  3780  06BD  07C1               	addwf	sprintf@sp^(0+128),f
  3781  06BE                     l3340:
  3782                           
  3783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3784  06BE  0844               	movf	sprintf@c^(0+128),w
  3785  06BF  00A5               	movwf	??_sprintf^(0+128)
  3786  06C0  3001               	movlw	1
  3787  06C1                     u5365:
  3788  06C1  1003               	clrc
  3789  06C2  0DA5               	rlf	??_sprintf^(0+128),f
  3790  06C3  3EFF               	addlw	-1
  3791  06C4  1D03               	skipz
  3792  06C5  2EC1               	goto	u5365
  3793  06C6  1003               	clrc
  3794  06C7  0D25               	rlf	??_sprintf^(0+128),w
  3795  06C8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3796  06C9  0084               	movwf	4
  3797  06CA  160A  158A  2000  120A  118A  	fcall	stringdir
  3798  06CF  00F0               	movwf	___llmod@divisor
  3799  06D0  160A  158A  2000  120A  118A  	fcall	stringdir
  3800  06D5  00F1               	movwf	___llmod@divisor+1
  3801  06D6  160A  158A  2000  120A  118A  	fcall	stringdir
  3802  06DB  00F2               	movwf	___llmod@divisor+2
  3803  06DC  160A  158A  2000  120A  118A  	fcall	stringdir
  3804  06E1  00F3               	movwf	___llmod@divisor+3
  3805  06E2  0832               	movf	(sprintf@val+3)^(0+128),w
  3806  06E3  00F7               	movwf	___llmod@dividend+3
  3807  06E4  0831               	movf	(sprintf@val+2)^(0+128),w
  3808  06E5  00F6               	movwf	___llmod@dividend+2
  3809  06E6  0830               	movf	(sprintf@val+1)^(0+128),w
  3810  06E7  00F5               	movwf	___llmod@dividend+1
  3811  06E8  082F               	movf	sprintf@val^(0+128),w
  3812  06E9  00F4               	movwf	___llmod@dividend
  3813  06EA  160A  158A  25D7  120A  118A  	fcall	___llmod
  3814  06EF  0873               	movf	?___llmod+3,w
  3815  06F0  1683               	bsf	3,5	;RP0=1, select bank1
  3816  06F1  1303               	bcf	3,6	;RP1=0, select bank1
  3817  06F2  00B2               	movwf	(sprintf@val+3)^(0+128)
  3818  06F3  0872               	movf	?___llmod+2,w
  3819  06F4  00B1               	movwf	(sprintf@val+2)^(0+128)
  3820  06F5  0871               	movf	?___llmod+1,w
  3821  06F6  00B0               	movwf	(sprintf@val+1)^(0+128)
  3822  06F7  0870               	movf	?___llmod,w
  3823  06F8  00AF               	movwf	sprintf@val^(0+128)
  3824  06F9                     l3342:
  3825                           
  3826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3827  06F9  3001               	movlw	1
  3828  06FA  02C4               	subwf	sprintf@c^(0+128),f
  3829  06FB  0A44               	incf	sprintf@c^(0+128),w
  3830  06FC  1D03               	btfss	3,2
  3831  06FD  2EFF               	goto	u5371
  3832  06FE  2F00               	goto	u5370
  3833  06FF                     u5371:
  3834  06FF  2E58               	goto	l3334
  3835  0700                     u5370:
  3836  0700  2F12               	goto	l3350
  3837  0701                     l3344:
  3838                           
  3839                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3840  0701  3030               	movlw	48
  3841  0702  00A5               	movwf	??_sprintf^(0+128)
  3842  0703  0841               	movf	sprintf@sp^(0+128),w
  3843  0704  0084               	movwf	4
  3844  0705  0825               	movf	??_sprintf^(0+128),w
  3845  0706  1383               	bcf	3,7	;select IRP bank0
  3846  0707  0080               	movwf	0
  3847  0708                     l3346:
  3848  0708  3001               	movlw	1
  3849  0709  00A5               	movwf	??_sprintf^(0+128)
  3850  070A  0825               	movf	??_sprintf^(0+128),w
  3851  070B  07C1               	addwf	sprintf@sp^(0+128),f
  3852  070C                     l3348:
  3853                           
  3854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3855  070C  30FF               	movlw	255
  3856  070D  07C2               	addwf	sprintf@prec^(0+128),f
  3857  070E  1803               	skipnc
  3858  070F  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3859  0710  30FF               	movlw	255
  3860  0711  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3861  0712                     l3350:
  3862                           
  3863                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3864  0712  0842               	movf	sprintf@prec^(0+128),w
  3865  0713  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3866  0714  1D03               	btfss	3,2
  3867  0715  2F17               	goto	u5381
  3868  0716  2F18               	goto	u5380
  3869  0717                     u5381:
  3870  0717  2F01               	goto	l3344
  3871  0718                     u5380:
  3872  0718  2FDC               	goto	l3398
  3873  0719                     l3352:
  3874                           
  3875                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3876  0719  0842               	movf	sprintf@prec^(0+128),w
  3877  071A  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3878  071B  1D03               	btfss	3,2
  3879  071C  2F1E               	goto	u5391
  3880  071D  2F1F               	goto	u5390
  3881  071E                     u5391:
  3882  071E  2F2D               	goto	l322
  3883  071F                     u5390:
  3884  071F                     l3354:
  3885  071F  0832               	movf	(sprintf@val+3)^(0+128),w
  3886  0720  0431               	iorwf	(sprintf@val+2)^(0+128),w
  3887  0721  0430               	iorwf	(sprintf@val+1)^(0+128),w
  3888  0722  042F               	iorwf	sprintf@val^(0+128),w
  3889  0723  1D03               	skipz
  3890  0724  2F26               	goto	u5401
  3891  0725  2F27               	goto	u5400
  3892  0726                     u5401:
  3893  0726  2F2D               	goto	l322
  3894  0727                     u5400:
  3895  0727                     l3356:
  3896                           
  3897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3898  0727  3001               	movlw	1
  3899  0728  07C2               	addwf	sprintf@prec^(0+128),f
  3900  0729  1803               	skipnc
  3901  072A  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3902  072B  3000               	movlw	0
  3903  072C  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3904  072D                     l322:
  3905                           
  3906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3907  072D  0843               	movf	(sprintf@prec+1)^(0+128),w
  3908  072E  3A80               	xorlw	128
  3909  072F  3C80               	sublw	128
  3910  0730  1D03               	skipz
  3911  0731  2F34               	goto	u5415
  3912  0732  0842               	movf	sprintf@prec^(0+128),w
  3913  0733  0244               	subwf	sprintf@c^(0+128),w
  3914  0734                     u5415:
  3915  0734  1803               	skipnc
  3916  0735  2F37               	goto	u5411
  3917  0736  2F38               	goto	u5410
  3918  0737                     u5411:
  3919  0737  2F3F               	goto	l3360
  3920  0738                     u5410:
  3921  0738                     l3358:
  3922                           
  3923                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  3924  0738  1683               	bsf	3,5	;RP0=1, select bank1
  3925  0739  1303               	bcf	3,6	;RP1=0, select bank1
  3926  073A  0842               	movf	sprintf@prec^(0+128),w
  3927  073B  00A5               	movwf	??_sprintf^(0+128)
  3928  073C  0825               	movf	??_sprintf^(0+128),w
  3929  073D  00C4               	movwf	sprintf@c^(0+128)
  3930  073E  2F57               	goto	l3364
  3931  073F                     l3360:
  3932  073F  1683               	bsf	3,5	;RP0=1, select bank1
  3933  0740  1303               	bcf	3,6	;RP1=0, select bank1
  3934  0741  0843               	movf	(sprintf@prec+1)^(0+128),w
  3935  0742  3A80               	xorlw	128
  3936  0743  00A5               	movwf	??_sprintf^(0+128)
  3937  0744  3080               	movlw	128
  3938  0745  0225               	subwf	??_sprintf^(0+128),w
  3939  0746  1D03               	skipz
  3940  0747  2F4A               	goto	u5425
  3941  0748  0844               	movf	sprintf@c^(0+128),w
  3942  0749  0242               	subwf	sprintf@prec^(0+128),w
  3943  074A                     u5425:
  3944  074A  1803               	skipnc
  3945  074B  2F4D               	goto	u5421
  3946  074C  2F4E               	goto	u5420
  3947  074D                     u5421:
  3948  074D  2F57               	goto	l3364
  3949  074E                     u5420:
  3950  074E                     l3362:
  3951                           
  3952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3953  074E  1683               	bsf	3,5	;RP0=1, select bank1
  3954  074F  1303               	bcf	3,6	;RP1=0, select bank1
  3955  0750  0844               	movf	sprintf@c^(0+128),w
  3956  0751  00A5               	movwf	??_sprintf^(0+128)
  3957  0752  01A6               	clrf	(??_sprintf^(0+128)+1)
  3958  0753  0825               	movf	??_sprintf^(0+128),w
  3959  0754  00C2               	movwf	sprintf@prec^(0+128)
  3960  0755  0826               	movf	(??_sprintf+1)^(0+128),w
  3961  0756  00C3               	movwf	(sprintf@prec+1)^(0+128)
  3962  0757                     l3364:
  3963                           
  3964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  3965  0757  1683               	bsf	3,5	;RP0=1, select bank1
  3966  0758  1303               	bcf	3,6	;RP1=0, select bank1
  3967  0759  0835               	movf	sprintf@width^(0+128),w
  3968  075A  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3969  075B  1903               	btfsc	3,2
  3970  075C  2F5E               	goto	u5431
  3971  075D  2F5F               	goto	u5430
  3972  075E                     u5431:
  3973  075E  2F71               	goto	l3370
  3974  075F                     u5430:
  3975  075F                     l3366:
  3976  075F  3003               	movlw	3
  3977  0760  0533               	andwf	sprintf@flag^(0+128),w
  3978  0761  00A5               	movwf	??_sprintf^(0+128)
  3979  0762  3000               	movlw	0
  3980  0763  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3981  0764  00A6               	movwf	(??_sprintf+1)^(0+128)
  3982  0765  0825               	movf	??_sprintf^(0+128),w
  3983  0766  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3984  0767  1903               	btfsc	3,2
  3985  0768  2F6A               	goto	u5441
  3986  0769  2F6B               	goto	u5440
  3987  076A                     u5441:
  3988  076A  2F71               	goto	l3370
  3989  076B                     u5440:
  3990  076B                     l3368:
  3991                           
  3992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  3993  076B  30FF               	movlw	255
  3994  076C  07B5               	addwf	sprintf@width^(0+128),f
  3995  076D  1803               	skipnc
  3996  076E  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3997  076F  30FF               	movlw	255
  3998  0770  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3999  0771                     l3370:
  4000                           
  4001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  4002  0771  1F34               	btfss	(sprintf@flag+1)^(0+128),6
  4003  0772  2F74               	goto	u5451
  4004  0773  2F75               	goto	u5450
  4005  0774                     u5451:
  4006  0774  2F90               	goto	l3378
  4007  0775                     u5450:
  4008  0775                     l3372:
  4009                           
  4010                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  4011  0775  0843               	movf	(sprintf@prec+1)^(0+128),w
  4012  0776  3A80               	xorlw	128
  4013  0777  00A5               	movwf	??_sprintf^(0+128)
  4014  0778  0836               	movf	(sprintf@width+1)^(0+128),w
  4015  0779  3A80               	xorlw	128
  4016  077A  0225               	subwf	??_sprintf^(0+128),w
  4017  077B  1D03               	skipz
  4018  077C  2F7F               	goto	u5465
  4019  077D  0835               	movf	sprintf@width^(0+128),w
  4020  077E  0242               	subwf	sprintf@prec^(0+128),w
  4021  077F                     u5465:
  4022  077F  1803               	skipnc
  4023  0780  2F82               	goto	u5461
  4024  0781  2F83               	goto	u5460
  4025  0782                     u5461:
  4026  0782  2F8C               	goto	l3376
  4027  0783                     u5460:
  4028  0783                     l3374:
  4029                           
  4030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  4031  0783  1683               	bsf	3,5	;RP0=1, select bank1
  4032  0784  1303               	bcf	3,6	;RP1=0, select bank1
  4033  0785  0842               	movf	sprintf@prec^(0+128),w
  4034  0786  02B5               	subwf	sprintf@width^(0+128),f
  4035  0787  0843               	movf	(sprintf@prec+1)^(0+128),w
  4036  0788  1C03               	skipc
  4037  0789  03B6               	decf	(sprintf@width+1)^(0+128),f
  4038  078A  02B6               	subwf	(sprintf@width+1)^(0+128),f
  4039  078B  2F90               	goto	l3378
  4040  078C                     l3376:
  4041                           
  4042                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  4043  078C  1683               	bsf	3,5	;RP0=1, select bank1
  4044  078D  1303               	bcf	3,6	;RP1=0, select bank1
  4045  078E  01B5               	clrf	sprintf@width^(0+128)
  4046  078F  01B6               	clrf	(sprintf@width+1)^(0+128)
  4047  0790                     l3378:
  4048                           
  4049                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  4050  0790  0836               	movf	(sprintf@width+1)^(0+128),w
  4051  0791  3A80               	xorlw	128
  4052  0792  3C80               	sublw	128
  4053  0793  1D03               	skipz
  4054  0794  2F97               	goto	u5475
  4055  0795  0835               	movf	sprintf@width^(0+128),w
  4056  0796  0244               	subwf	sprintf@c^(0+128),w
  4057  0797                     u5475:
  4058  0797  1803               	skipnc
  4059  0798  2F9A               	goto	u5471
  4060  0799  2F9B               	goto	u5470
  4061  079A                     u5471:
  4062  079A  2FA7               	goto	l3382
  4063  079B                     u5470:
  4064  079B                     l3380:
  4065                           
  4066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  4067  079B  1683               	bsf	3,5	;RP0=1, select bank1
  4068  079C  1303               	bcf	3,6	;RP1=0, select bank1
  4069  079D  0844               	movf	sprintf@c^(0+128),w
  4070  079E  00A5               	movwf	??_sprintf^(0+128)
  4071  079F  01A6               	clrf	(??_sprintf^(0+128)+1)
  4072  07A0  0825               	movf	??_sprintf^(0+128),w
  4073  07A1  02B5               	subwf	sprintf@width^(0+128),f
  4074  07A2  0826               	movf	(??_sprintf+1)^(0+128),w
  4075  07A3  1C03               	skipc
  4076  07A4  03B6               	decf	(sprintf@width+1)^(0+128),f
  4077  07A5  02B6               	subwf	(sprintf@width+1)^(0+128),f
  4078  07A6  2FAB               	goto	l3384
  4079  07A7                     l3382:
  4080                           
  4081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  4082  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  4083  07A8  1303               	bcf	3,6	;RP1=0, select bank1
  4084  07A9  01B5               	clrf	sprintf@width^(0+128)
  4085  07AA  01B6               	clrf	(sprintf@width+1)^(0+128)
  4086  07AB                     l3384:
  4087                           
  4088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  4089  07AB  0835               	movf	sprintf@width^(0+128),w
  4090  07AC  0436               	iorwf	(sprintf@width+1)^(0+128),w
  4091  07AD  1903               	btfsc	3,2
  4092  07AE  2FB0               	goto	u5481
  4093  07AF  2FB1               	goto	u5480
  4094  07B0                     u5481:
  4095  07B0  2FC8               	goto	l3392
  4096  07B1                     u5480:
  4097  07B1                     l3386:
  4098                           
  4099                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  4100  07B1  3020               	movlw	32
  4101  07B2  00A5               	movwf	??_sprintf^(0+128)
  4102  07B3  0841               	movf	sprintf@sp^(0+128),w
  4103  07B4  0084               	movwf	4
  4104  07B5  0825               	movf	??_sprintf^(0+128),w
  4105  07B6  1383               	bcf	3,7	;select IRP bank0
  4106  07B7  0080               	movwf	0
  4107  07B8                     l3388:
  4108  07B8  3001               	movlw	1
  4109  07B9  00A5               	movwf	??_sprintf^(0+128)
  4110  07BA  0825               	movf	??_sprintf^(0+128),w
  4111  07BB  07C1               	addwf	sprintf@sp^(0+128),f
  4112  07BC                     l3390:
  4113  07BC  30FF               	movlw	255
  4114  07BD  07B5               	addwf	sprintf@width^(0+128),f
  4115  07BE  1803               	skipnc
  4116  07BF  0AB6               	incf	(sprintf@width+1)^(0+128),f
  4117  07C0  30FF               	movlw	255
  4118  07C1  07B6               	addwf	(sprintf@width+1)^(0+128),f
  4119  07C2  0835               	movf	sprintf@width^(0+128),w
  4120  07C3  0436               	iorwf	(sprintf@width+1)^(0+128),w
  4121  07C4  1D03               	btfss	3,2
  4122  07C5  2FC7               	goto	u5491
  4123  07C6  2FC8               	goto	u5490
  4124  07C7                     u5491:
  4125  07C7  2FB1               	goto	l3386
  4126  07C8                     u5490:
  4127  07C8                     l3392:
  4128                           
  4129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  4130  07C8  3003               	movlw	3
  4131  07C9  0533               	andwf	sprintf@flag^(0+128),w
  4132  07CA  00A5               	movwf	??_sprintf^(0+128)
  4133  07CB  3000               	movlw	0
  4134  07CC  0534               	andwf	(sprintf@flag+1)^(0+128),w
  4135  07CD  00A6               	movwf	(??_sprintf+1)^(0+128)
  4136  07CE  0825               	movf	??_sprintf^(0+128),w
  4137  07CF  0426               	iorwf	(??_sprintf^(0+128)+1),w
  4138  07D0  1903               	btfsc	3,2
  4139  07D1  2FD3               	goto	u5501
  4140  07D2  2FD4               	goto	u5500
  4141  07D3                     u5501:
  4142  07D3  2FDC               	goto	l3398
  4143  07D4                     u5500:
  4144  07D4                     l3394:
  4145                           
  4146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4147  07D4  302D               	movlw	45
  4148  07D5  00A5               	movwf	??_sprintf^(0+128)
  4149  07D6  0841               	movf	sprintf@sp^(0+128),w
  4150  07D7  0084               	movwf	4
  4151  07D8  0825               	movf	??_sprintf^(0+128),w
  4152  07D9  1383               	bcf	3,7	;select IRP bank0
  4153  07DA  0080               	movwf	0
  4154  07DB  288D               	goto	l3154
  4155  07DC                     l3398:
  4156                           
  4157                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4158  07DC  3001               	movlw	1
  4159  07DD  07A0               	addwf	sprintf@f^(0+128),f
  4160  07DE  30FF               	movlw	-1
  4161  07DF  0720               	addwf	sprintf@f^(0+128),w
  4162  07E0  0084               	movwf	4
  4163  07E1  160A  158A  2000  120A  118A  	fcall	stringdir
  4164  07E6  00A5               	movwf	??_sprintf^(0+128)
  4165  07E7  0825               	movf	??_sprintf^(0+128),w
  4166  07E8  00C4               	movwf	sprintf@c^(0+128)
  4167  07E9  0844               	movf	sprintf@c^(0+128),w
  4168  07EA  1D03               	btfss	3,2
  4169  07EB  2FED               	goto	u5511
  4170  07EC  2FEE               	goto	u5510
  4171  07ED                     u5511:
  4172  07ED  2880               	goto	l3150
  4173  07EE                     u5510:
  4174  07EE                     l3400:
  4175                           
  4176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4177  07EE  0841               	movf	sprintf@sp^(0+128),w
  4178  07EF  0084               	movwf	4
  4179  07F0  1383               	bcf	3,7	;select IRP bank0
  4180  07F1  0180               	clrf	0
  4181  07F2                     l337:
  4182  07F2  0008               	return
  4183  07F3                     __end_of_sprintf:
  4184                           
  4185                           	psect	text3
  4186  0940                     __ptext3:	
  4187 ;; *************** function _scale *****************
  4188 ;; Defined at:
  4189 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  scl             1    wreg     char 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  scl             1   48[BANK0 ] char 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  4   30[BANK0 ] char 
  4196 ;; Registers used:
  4197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4203 ;;      Params:         0       4       0       0       0
  4204 ;;      Locals:         0       5       0       0       0
  4205 ;;      Temps:          0      10       0       0       0
  4206 ;;      Totals:         0      19       0       0       0
  4207 ;;Total ram usage:       19 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:    2
  4210 ;; This function calls:
  4211 ;;		___awdiv
  4212 ;;		___awmod
  4213 ;;		___flmul
  4214 ;; This function is called by:
  4215 ;;		_sprintf
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           
  4220                           ;psect for function _scale
  4221  0940                     _scale:
  4222                           
  4223                           ;incstack = 0
  4224                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4225                           ;scale@scl stored from wreg
  4226  0940  1283               	bcf	3,5	;RP0=0, select bank0
  4227  0941  1303               	bcf	3,6	;RP1=0, select bank0
  4228  0942  00D0               	movwf	scale@scl
  4229  0943                     l2756:
  4230                           
  4231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4232  0943  1FD0               	btfss	scale@scl,7
  4233  0944  2946               	goto	u4071
  4234  0945  2947               	goto	u4070
  4235  0946                     u4071:
  4236  0946  2AF4               	goto	l2778
  4237  0947                     u4070:
  4238  0947                     l2758:
  4239                           
  4240                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4241  0947  09D0               	comf	scale@scl,f
  4242  0948  0AD0               	incf	scale@scl,f
  4243  0949                     l2760:
  4244                           
  4245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4246  0949  0850               	movf	scale@scl,w
  4247  094A  3A80               	xorlw	128
  4248  094B  3E12               	addlw	-238
  4249  094C  1C03               	skipc
  4250  094D  294F               	goto	u4081
  4251  094E  2950               	goto	u4080
  4252  094F                     u4081:
  4253  094F  2A38               	goto	l2768
  4254  0950                     u4080:
  4255  0950                     l2762:
  4256                           
  4257                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4258  0950  300A               	movlw	10
  4259  0951  00F7               	movwf	___awdiv@divisor
  4260  0952  3000               	movlw	0
  4261  0953  00F8               	movwf	___awdiv@divisor+1
  4262  0954  0850               	movf	scale@scl,w
  4263  0955  00F2               	movwf	___awmod@dividend
  4264  0956  01F3               	clrf	___awmod@dividend+1
  4265  0957  1BF2               	btfsc	___awmod@dividend,7
  4266  0958  03F3               	decf	___awmod@dividend+1,f
  4267  0959  3064               	movlw	100
  4268  095A  00F0               	movwf	___awmod@divisor
  4269  095B  3000               	movlw	0
  4270  095C  00F1               	movwf	___awmod@divisor+1
  4271  095D  160A  158A  262B  120A  158A  	fcall	___awmod
  4272  0962  0871               	movf	?___awmod+1,w
  4273  0963  00FA               	movwf	___awdiv@dividend+1
  4274  0964  0870               	movf	?___awmod,w
  4275  0965  00F9               	movwf	___awdiv@dividend
  4276  0966  120A  118A  200F  120A  158A  	fcall	___awdiv
  4277  096B  0877               	movf	?___awdiv,w
  4278  096C  1283               	bcf	3,5	;RP0=0, select bank0
  4279  096D  1303               	bcf	3,6	;RP1=0, select bank0
  4280  096E  00C2               	movwf	??_scale
  4281  096F  3001               	movlw	1
  4282  0970                     u4095:
  4283  0970  1003               	clrc
  4284  0971  0DC2               	rlf	??_scale,f
  4285  0972  3EFF               	addlw	-1
  4286  0973  1D03               	skipz
  4287  0974  2970               	goto	u4095
  4288  0975  1003               	clrc
  4289  0976  0D42               	rlf	??_scale,w
  4290  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4291  0978  0084               	movwf	4
  4292  0979  160A  158A  2000  120A  158A  	fcall	stringdir
  4293  097E  00C3               	movwf	??_scale+1
  4294  097F  160A  158A  2000  120A  158A  	fcall	stringdir
  4295  0984  00C4               	movwf	??_scale+2
  4296  0985  160A  158A  2000  120A  158A  	fcall	stringdir
  4297  098A  00C5               	movwf	??_scale+3
  4298  098B  160A  158A  2000  120A  158A  	fcall	stringdir
  4299  0990  00C6               	movwf	??_scale+4
  4300  0991  0846               	movf	??_scale+4,w
  4301  0992  00A7               	movwf	___flmul@b+3
  4302  0993  0845               	movf	??_scale+3,w
  4303  0994  00A6               	movwf	___flmul@b+2
  4304  0995  0844               	movf	??_scale+2,w
  4305  0996  00A5               	movwf	___flmul@b+1
  4306  0997  0843               	movf	??_scale+1,w
  4307  0998  00A4               	movwf	___flmul@b
  4308  0999  3064               	movlw	100
  4309  099A  00F7               	movwf	___awdiv@divisor
  4310  099B  3000               	movlw	0
  4311  099C  00F8               	movwf	___awdiv@divisor+1
  4312  099D  0850               	movf	scale@scl,w
  4313  099E  00F9               	movwf	___awdiv@dividend
  4314  099F  01FA               	clrf	___awdiv@dividend+1
  4315  09A0  1BF9               	btfsc	___awdiv@dividend,7
  4316  09A1  03FA               	decf	___awdiv@dividend+1,f
  4317  09A2  120A  118A  200F  120A  158A  	fcall	___awdiv
  4318  09A7  0877               	movf	?___awdiv,w
  4319  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  4320  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  4321  09AA  00C7               	movwf	??_scale+5
  4322  09AB  3001               	movlw	1
  4323  09AC                     u4105:
  4324  09AC  1003               	clrc
  4325  09AD  0DC7               	rlf	??_scale+5,f
  4326  09AE  3EFF               	addlw	-1
  4327  09AF  1D03               	skipz
  4328  09B0  29AC               	goto	u4105
  4329  09B1  1003               	clrc
  4330  09B2  0D47               	rlf	??_scale+5,w
  4331  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4332  09B4  0084               	movwf	4
  4333  09B5  160A  158A  2000  120A  158A  	fcall	stringdir
  4334  09BA  00C8               	movwf	??_scale+6
  4335  09BB  160A  158A  2000  120A  158A  	fcall	stringdir
  4336  09C0  00C9               	movwf	??_scale+7
  4337  09C1  160A  158A  2000  120A  158A  	fcall	stringdir
  4338  09C6  00CA               	movwf	??_scale+8
  4339  09C7  160A  158A  2000  120A  158A  	fcall	stringdir
  4340  09CC  00CB               	movwf	??_scale+9
  4341  09CD  084B               	movf	??_scale+9,w
  4342  09CE  00AB               	movwf	___flmul@a+3
  4343  09CF  084A               	movf	??_scale+8,w
  4344  09D0  00AA               	movwf	___flmul@a+2
  4345  09D1  0849               	movf	??_scale+7,w
  4346  09D2  00A9               	movwf	___flmul@a+1
  4347  09D3  0848               	movf	??_scale+6,w
  4348  09D4  00A8               	movwf	___flmul@a
  4349  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  4350  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  4351  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  4352  09DC  0827               	movf	?___flmul+3,w
  4353  09DD  00CF               	movwf	_scale$1163+3
  4354  09DE  0826               	movf	?___flmul+2,w
  4355  09DF  00CE               	movwf	_scale$1163+2
  4356  09E0  0825               	movf	?___flmul+1,w
  4357  09E1  00CD               	movwf	_scale$1163+1
  4358  09E2  0824               	movf	?___flmul,w
  4359  09E3  00CC               	movwf	_scale$1163
  4360                           
  4361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4362  09E4  300A               	movlw	10
  4363  09E5  00F0               	movwf	___awmod@divisor
  4364  09E6  3000               	movlw	0
  4365  09E7  00F1               	movwf	___awmod@divisor+1
  4366  09E8  0850               	movf	scale@scl,w
  4367  09E9  00F2               	movwf	___awmod@dividend
  4368  09EA  01F3               	clrf	___awmod@dividend+1
  4369  09EB  1BF2               	btfsc	___awmod@dividend,7
  4370  09EC  03F3               	decf	___awmod@dividend+1,f
  4371  09ED  160A  158A  262B  120A  158A  	fcall	___awmod
  4372  09F2  0870               	movf	?___awmod,w
  4373  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  4374  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  4375  09F5  00C2               	movwf	??_scale
  4376  09F6  3001               	movlw	1
  4377  09F7                     u4115:
  4378  09F7  1003               	clrc
  4379  09F8  0DC2               	rlf	??_scale,f
  4380  09F9  3EFF               	addlw	-1
  4381  09FA  1D03               	skipz
  4382  09FB  29F7               	goto	u4115
  4383  09FC  1003               	clrc
  4384  09FD  0D42               	rlf	??_scale,w
  4385  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4386  09FF  0084               	movwf	4
  4387  0A00  160A  158A  2000  120A  158A  	fcall	stringdir
  4388  0A05  00C3               	movwf	??_scale+1
  4389  0A06  160A  158A  2000  120A  158A  	fcall	stringdir
  4390  0A0B  00C4               	movwf	??_scale+2
  4391  0A0C  160A  158A  2000  120A  158A  	fcall	stringdir
  4392  0A11  00C5               	movwf	??_scale+3
  4393  0A12  160A  158A  2000  120A  158A  	fcall	stringdir
  4394  0A17  00C6               	movwf	??_scale+4
  4395  0A18  0846               	movf	??_scale+4,w
  4396  0A19  00A7               	movwf	___flmul@b+3
  4397  0A1A  0845               	movf	??_scale+3,w
  4398  0A1B  00A6               	movwf	___flmul@b+2
  4399  0A1C  0844               	movf	??_scale+2,w
  4400  0A1D  00A5               	movwf	___flmul@b+1
  4401  0A1E  0843               	movf	??_scale+1,w
  4402  0A1F  00A4               	movwf	___flmul@b
  4403  0A20  084F               	movf	_scale$1163+3,w
  4404  0A21  00AB               	movwf	___flmul@a+3
  4405  0A22  084E               	movf	_scale$1163+2,w
  4406  0A23  00AA               	movwf	___flmul@a+2
  4407  0A24  084D               	movf	_scale$1163+1,w
  4408  0A25  00A9               	movwf	___flmul@a+1
  4409  0A26  084C               	movf	_scale$1163,w
  4410  0A27  00A8               	movwf	___flmul@a
  4411  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  4412  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  4413  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  4414  0A2F  0827               	movf	?___flmul+3,w
  4415  0A30  00C1               	movwf	?_scale+3
  4416  0A31  0826               	movf	?___flmul+2,w
  4417  0A32  00C0               	movwf	?_scale+2
  4418  0A33  0825               	movf	?___flmul+1,w
  4419  0A34  00BF               	movwf	?_scale+1
  4420  0A35  0824               	movf	?___flmul,w
  4421  0A36  00BE               	movwf	?_scale
  4422  0A37  2C9E               	goto	l254
  4423  0A38                     l2768:
  4424  0A38  0850               	movf	scale@scl,w
  4425  0A39  3A80               	xorlw	128
  4426  0A3A  3E75               	addlw	-139
  4427  0A3B  1C03               	skipc
  4428  0A3C  2A3E               	goto	u4121
  4429  0A3D  2A3F               	goto	u4120
  4430  0A3E                     u4121:
  4431  0A3E  2AC7               	goto	l2774
  4432  0A3F                     u4120:
  4433  0A3F                     l2770:
  4434                           
  4435                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4436  0A3F  300A               	movlw	10
  4437  0A40  00F0               	movwf	___awmod@divisor
  4438  0A41  3000               	movlw	0
  4439  0A42  00F1               	movwf	___awmod@divisor+1
  4440  0A43  0850               	movf	scale@scl,w
  4441  0A44  00F2               	movwf	___awmod@dividend
  4442  0A45  01F3               	clrf	___awmod@dividend+1
  4443  0A46  1BF2               	btfsc	___awmod@dividend,7
  4444  0A47  03F3               	decf	___awmod@dividend+1,f
  4445  0A48  160A  158A  262B  120A  158A  	fcall	___awmod
  4446  0A4D  0870               	movf	?___awmod,w
  4447  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  4448  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  4449  0A50  00C2               	movwf	??_scale
  4450  0A51  3001               	movlw	1
  4451  0A52                     u4135:
  4452  0A52  1003               	clrc
  4453  0A53  0DC2               	rlf	??_scale,f
  4454  0A54  3EFF               	addlw	-1
  4455  0A55  1D03               	skipz
  4456  0A56  2A52               	goto	u4135
  4457  0A57  1003               	clrc
  4458  0A58  0D42               	rlf	??_scale,w
  4459  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4460  0A5A  0084               	movwf	4
  4461  0A5B  160A  158A  2000  120A  158A  	fcall	stringdir
  4462  0A60  00C3               	movwf	??_scale+1
  4463  0A61  160A  158A  2000  120A  158A  	fcall	stringdir
  4464  0A66  00C4               	movwf	??_scale+2
  4465  0A67  160A  158A  2000  120A  158A  	fcall	stringdir
  4466  0A6C  00C5               	movwf	??_scale+3
  4467  0A6D  160A  158A  2000  120A  158A  	fcall	stringdir
  4468  0A72  00C6               	movwf	??_scale+4
  4469  0A73  0846               	movf	??_scale+4,w
  4470  0A74  00A7               	movwf	___flmul@b+3
  4471  0A75  0845               	movf	??_scale+3,w
  4472  0A76  00A6               	movwf	___flmul@b+2
  4473  0A77  0844               	movf	??_scale+2,w
  4474  0A78  00A5               	movwf	___flmul@b+1
  4475  0A79  0843               	movf	??_scale+1,w
  4476  0A7A  00A4               	movwf	___flmul@b
  4477  0A7B  300A               	movlw	10
  4478  0A7C  00F7               	movwf	___awdiv@divisor
  4479  0A7D  3000               	movlw	0
  4480  0A7E  00F8               	movwf	___awdiv@divisor+1
  4481  0A7F  0850               	movf	scale@scl,w
  4482  0A80  00F9               	movwf	___awdiv@dividend
  4483  0A81  01FA               	clrf	___awdiv@dividend+1
  4484  0A82  1BF9               	btfsc	___awdiv@dividend,7
  4485  0A83  03FA               	decf	___awdiv@dividend+1,f
  4486  0A84  120A  118A  200F  120A  158A  	fcall	___awdiv
  4487  0A89  0877               	movf	?___awdiv,w
  4488  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4489  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4490  0A8C  00C7               	movwf	??_scale+5
  4491  0A8D  3001               	movlw	1
  4492  0A8E                     u4145:
  4493  0A8E  1003               	clrc
  4494  0A8F  0DC7               	rlf	??_scale+5,f
  4495  0A90  3EFF               	addlw	-1
  4496  0A91  1D03               	skipz
  4497  0A92  2A8E               	goto	u4145
  4498  0A93  1003               	clrc
  4499  0A94  0D47               	rlf	??_scale+5,w
  4500  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4501  0A96  0084               	movwf	4
  4502  0A97  160A  158A  2000  120A  158A  	fcall	stringdir
  4503  0A9C  00C8               	movwf	??_scale+6
  4504  0A9D  160A  158A  2000  120A  158A  	fcall	stringdir
  4505  0AA2  00C9               	movwf	??_scale+7
  4506  0AA3  160A  158A  2000  120A  158A  	fcall	stringdir
  4507  0AA8  00CA               	movwf	??_scale+8
  4508  0AA9  160A  158A  2000  120A  158A  	fcall	stringdir
  4509  0AAE  00CB               	movwf	??_scale+9
  4510  0AAF  084B               	movf	??_scale+9,w
  4511  0AB0  00AB               	movwf	___flmul@a+3
  4512  0AB1  084A               	movf	??_scale+8,w
  4513  0AB2  00AA               	movwf	___flmul@a+2
  4514  0AB3  0849               	movf	??_scale+7,w
  4515  0AB4  00A9               	movwf	___flmul@a+1
  4516  0AB5  0848               	movf	??_scale+6,w
  4517  0AB6  00A8               	movwf	___flmul@a
  4518  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  4519  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4520  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4521  0ABE  0827               	movf	?___flmul+3,w
  4522  0ABF  00C1               	movwf	?_scale+3
  4523  0AC0  0826               	movf	?___flmul+2,w
  4524  0AC1  00C0               	movwf	?_scale+2
  4525  0AC2  0825               	movf	?___flmul+1,w
  4526  0AC3  00BF               	movwf	?_scale+1
  4527  0AC4  0824               	movf	?___flmul,w
  4528  0AC5  00BE               	movwf	?_scale
  4529  0AC6  2C9E               	goto	l254
  4530  0AC7                     l2774:
  4531                           
  4532                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4533  0AC7  0850               	movf	scale@scl,w
  4534  0AC8  00C2               	movwf	??_scale
  4535  0AC9  3001               	movlw	1
  4536  0ACA                     u4155:
  4537  0ACA  1003               	clrc
  4538  0ACB  0DC2               	rlf	??_scale,f
  4539  0ACC  3EFF               	addlw	-1
  4540  0ACD  1D03               	skipz
  4541  0ACE  2ACA               	goto	u4155
  4542  0ACF  1003               	clrc
  4543  0AD0  0D42               	rlf	??_scale,w
  4544  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4545  0AD2  0084               	movwf	4
  4546  0AD3  160A  158A  2000  120A  158A  	fcall	stringdir
  4547  0AD8  00C3               	movwf	??_scale+1
  4548  0AD9  160A  158A  2000  120A  158A  	fcall	stringdir
  4549  0ADE  00C4               	movwf	??_scale+2
  4550  0ADF  160A  158A  2000  120A  158A  	fcall	stringdir
  4551  0AE4  00C5               	movwf	??_scale+3
  4552  0AE5  160A  158A  2000  120A  158A  	fcall	stringdir
  4553  0AEA  00C6               	movwf	??_scale+4
  4554  0AEB  0846               	movf	??_scale+4,w
  4555  0AEC  00C1               	movwf	?_scale+3
  4556  0AED  0845               	movf	??_scale+3,w
  4557  0AEE  00C0               	movwf	?_scale+2
  4558  0AEF  0844               	movf	??_scale+2,w
  4559  0AF0  00BF               	movwf	?_scale+1
  4560  0AF1  0843               	movf	??_scale+1,w
  4561  0AF2  00BE               	movwf	?_scale
  4562  0AF3  2C9E               	goto	l254
  4563  0AF4                     l2778:
  4564                           
  4565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4566  0AF4  0850               	movf	scale@scl,w
  4567  0AF5  3A80               	xorlw	128
  4568  0AF6  3E12               	addlw	-238
  4569  0AF7  1C03               	skipc
  4570  0AF8  2AFA               	goto	u4161
  4571  0AF9  2AFB               	goto	u4160
  4572  0AFA                     u4161:
  4573  0AFA  2BE3               	goto	l2786
  4574  0AFB                     u4160:
  4575  0AFB                     l2780:
  4576                           
  4577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4578  0AFB  300A               	movlw	10
  4579  0AFC  00F7               	movwf	___awdiv@divisor
  4580  0AFD  3000               	movlw	0
  4581  0AFE  00F8               	movwf	___awdiv@divisor+1
  4582  0AFF  0850               	movf	scale@scl,w
  4583  0B00  00F2               	movwf	___awmod@dividend
  4584  0B01  01F3               	clrf	___awmod@dividend+1
  4585  0B02  1BF2               	btfsc	___awmod@dividend,7
  4586  0B03  03F3               	decf	___awmod@dividend+1,f
  4587  0B04  3064               	movlw	100
  4588  0B05  00F0               	movwf	___awmod@divisor
  4589  0B06  3000               	movlw	0
  4590  0B07  00F1               	movwf	___awmod@divisor+1
  4591  0B08  160A  158A  262B  120A  158A  	fcall	___awmod
  4592  0B0D  0871               	movf	?___awmod+1,w
  4593  0B0E  00FA               	movwf	___awdiv@dividend+1
  4594  0B0F  0870               	movf	?___awmod,w
  4595  0B10  00F9               	movwf	___awdiv@dividend
  4596  0B11  120A  118A  200F  120A  158A  	fcall	___awdiv
  4597  0B16  0877               	movf	?___awdiv,w
  4598  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  4599  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  4600  0B19  00C2               	movwf	??_scale
  4601  0B1A  3001               	movlw	1
  4602  0B1B                     u4175:
  4603  0B1B  1003               	clrc
  4604  0B1C  0DC2               	rlf	??_scale,f
  4605  0B1D  3EFF               	addlw	-1
  4606  0B1E  1D03               	skipz
  4607  0B1F  2B1B               	goto	u4175
  4608  0B20  1003               	clrc
  4609  0B21  0D42               	rlf	??_scale,w
  4610  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4611  0B23  0084               	movwf	4
  4612  0B24  160A  158A  2000  120A  158A  	fcall	stringdir
  4613  0B29  00C3               	movwf	??_scale+1
  4614  0B2A  160A  158A  2000  120A  158A  	fcall	stringdir
  4615  0B2F  00C4               	movwf	??_scale+2
  4616  0B30  160A  158A  2000  120A  158A  	fcall	stringdir
  4617  0B35  00C5               	movwf	??_scale+3
  4618  0B36  160A  158A  2000  120A  158A  	fcall	stringdir
  4619  0B3B  00C6               	movwf	??_scale+4
  4620  0B3C  0846               	movf	??_scale+4,w
  4621  0B3D  00A7               	movwf	___flmul@b+3
  4622  0B3E  0845               	movf	??_scale+3,w
  4623  0B3F  00A6               	movwf	___flmul@b+2
  4624  0B40  0844               	movf	??_scale+2,w
  4625  0B41  00A5               	movwf	___flmul@b+1
  4626  0B42  0843               	movf	??_scale+1,w
  4627  0B43  00A4               	movwf	___flmul@b
  4628  0B44  3064               	movlw	100
  4629  0B45  00F7               	movwf	___awdiv@divisor
  4630  0B46  3000               	movlw	0
  4631  0B47  00F8               	movwf	___awdiv@divisor+1
  4632  0B48  0850               	movf	scale@scl,w
  4633  0B49  00F9               	movwf	___awdiv@dividend
  4634  0B4A  01FA               	clrf	___awdiv@dividend+1
  4635  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4636  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4637  0B4D  120A  118A  200F  120A  158A  	fcall	___awdiv
  4638  0B52  0877               	movf	?___awdiv,w
  4639  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4640  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4641  0B55  00C7               	movwf	??_scale+5
  4642  0B56  3001               	movlw	1
  4643  0B57                     u4185:
  4644  0B57  1003               	clrc
  4645  0B58  0DC7               	rlf	??_scale+5,f
  4646  0B59  3EFF               	addlw	-1
  4647  0B5A  1D03               	skipz
  4648  0B5B  2B57               	goto	u4185
  4649  0B5C  1003               	clrc
  4650  0B5D  0D47               	rlf	??_scale+5,w
  4651  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4652  0B5F  0084               	movwf	4
  4653  0B60  160A  158A  2000  120A  158A  	fcall	stringdir
  4654  0B65  00C8               	movwf	??_scale+6
  4655  0B66  160A  158A  2000  120A  158A  	fcall	stringdir
  4656  0B6B  00C9               	movwf	??_scale+7
  4657  0B6C  160A  158A  2000  120A  158A  	fcall	stringdir
  4658  0B71  00CA               	movwf	??_scale+8
  4659  0B72  160A  158A  2000  120A  158A  	fcall	stringdir
  4660  0B77  00CB               	movwf	??_scale+9
  4661  0B78  084B               	movf	??_scale+9,w
  4662  0B79  00AB               	movwf	___flmul@a+3
  4663  0B7A  084A               	movf	??_scale+8,w
  4664  0B7B  00AA               	movwf	___flmul@a+2
  4665  0B7C  0849               	movf	??_scale+7,w
  4666  0B7D  00A9               	movwf	___flmul@a+1
  4667  0B7E  0848               	movf	??_scale+6,w
  4668  0B7F  00A8               	movwf	___flmul@a
  4669  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4670  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4671  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4672  0B87  0827               	movf	?___flmul+3,w
  4673  0B88  00CF               	movwf	_scale$1163+3
  4674  0B89  0826               	movf	?___flmul+2,w
  4675  0B8A  00CE               	movwf	_scale$1163+2
  4676  0B8B  0825               	movf	?___flmul+1,w
  4677  0B8C  00CD               	movwf	_scale$1163+1
  4678  0B8D  0824               	movf	?___flmul,w
  4679  0B8E  00CC               	movwf	_scale$1163
  4680                           
  4681                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4682  0B8F  300A               	movlw	10
  4683  0B90  00F0               	movwf	___awmod@divisor
  4684  0B91  3000               	movlw	0
  4685  0B92  00F1               	movwf	___awmod@divisor+1
  4686  0B93  0850               	movf	scale@scl,w
  4687  0B94  00F2               	movwf	___awmod@dividend
  4688  0B95  01F3               	clrf	___awmod@dividend+1
  4689  0B96  1BF2               	btfsc	___awmod@dividend,7
  4690  0B97  03F3               	decf	___awmod@dividend+1,f
  4691  0B98  160A  158A  262B  120A  158A  	fcall	___awmod
  4692  0B9D  0870               	movf	?___awmod,w
  4693  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4694  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4695  0BA0  00C2               	movwf	??_scale
  4696  0BA1  3001               	movlw	1
  4697  0BA2                     u4195:
  4698  0BA2  1003               	clrc
  4699  0BA3  0DC2               	rlf	??_scale,f
  4700  0BA4  3EFF               	addlw	-1
  4701  0BA5  1D03               	skipz
  4702  0BA6  2BA2               	goto	u4195
  4703  0BA7  1003               	clrc
  4704  0BA8  0D42               	rlf	??_scale,w
  4705  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4706  0BAA  0084               	movwf	4
  4707  0BAB  160A  158A  2000  120A  158A  	fcall	stringdir
  4708  0BB0  00C3               	movwf	??_scale+1
  4709  0BB1  160A  158A  2000  120A  158A  	fcall	stringdir
  4710  0BB6  00C4               	movwf	??_scale+2
  4711  0BB7  160A  158A  2000  120A  158A  	fcall	stringdir
  4712  0BBC  00C5               	movwf	??_scale+3
  4713  0BBD  160A  158A  2000  120A  158A  	fcall	stringdir
  4714  0BC2  00C6               	movwf	??_scale+4
  4715  0BC3  0846               	movf	??_scale+4,w
  4716  0BC4  00A7               	movwf	___flmul@b+3
  4717  0BC5  0845               	movf	??_scale+3,w
  4718  0BC6  00A6               	movwf	___flmul@b+2
  4719  0BC7  0844               	movf	??_scale+2,w
  4720  0BC8  00A5               	movwf	___flmul@b+1
  4721  0BC9  0843               	movf	??_scale+1,w
  4722  0BCA  00A4               	movwf	___flmul@b
  4723  0BCB  084F               	movf	_scale$1163+3,w
  4724  0BCC  00AB               	movwf	___flmul@a+3
  4725  0BCD  084E               	movf	_scale$1163+2,w
  4726  0BCE  00AA               	movwf	___flmul@a+2
  4727  0BCF  084D               	movf	_scale$1163+1,w
  4728  0BD0  00A9               	movwf	___flmul@a+1
  4729  0BD1  084C               	movf	_scale$1163,w
  4730  0BD2  00A8               	movwf	___flmul@a
  4731  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4732  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4733  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4734  0BDA  0827               	movf	?___flmul+3,w
  4735  0BDB  00C1               	movwf	?_scale+3
  4736  0BDC  0826               	movf	?___flmul+2,w
  4737  0BDD  00C0               	movwf	?_scale+2
  4738  0BDE  0825               	movf	?___flmul+1,w
  4739  0BDF  00BF               	movwf	?_scale+1
  4740  0BE0  0824               	movf	?___flmul,w
  4741  0BE1  00BE               	movwf	?_scale
  4742  0BE2  2C9E               	goto	l254
  4743  0BE3                     l2786:
  4744  0BE3  0850               	movf	scale@scl,w
  4745  0BE4  3A80               	xorlw	128
  4746  0BE5  3E75               	addlw	-139
  4747  0BE6  1C03               	skipc
  4748  0BE7  2BE9               	goto	u4201
  4749  0BE8  2BEA               	goto	u4200
  4750  0BE9                     u4201:
  4751  0BE9  2C72               	goto	l2792
  4752  0BEA                     u4200:
  4753  0BEA                     l2788:
  4754                           
  4755                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4756  0BEA  300A               	movlw	10
  4757  0BEB  00F0               	movwf	___awmod@divisor
  4758  0BEC  3000               	movlw	0
  4759  0BED  00F1               	movwf	___awmod@divisor+1
  4760  0BEE  0850               	movf	scale@scl,w
  4761  0BEF  00F2               	movwf	___awmod@dividend
  4762  0BF0  01F3               	clrf	___awmod@dividend+1
  4763  0BF1  1BF2               	btfsc	___awmod@dividend,7
  4764  0BF2  03F3               	decf	___awmod@dividend+1,f
  4765  0BF3  160A  158A  262B  120A  158A  	fcall	___awmod
  4766  0BF8  0870               	movf	?___awmod,w
  4767  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4768  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4769  0BFB  00C2               	movwf	??_scale
  4770  0BFC  3001               	movlw	1
  4771  0BFD                     u4215:
  4772  0BFD  1003               	clrc
  4773  0BFE  0DC2               	rlf	??_scale,f
  4774  0BFF  3EFF               	addlw	-1
  4775  0C00  1D03               	skipz
  4776  0C01  2BFD               	goto	u4215
  4777  0C02  1003               	clrc
  4778  0C03  0D42               	rlf	??_scale,w
  4779  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4780  0C05  0084               	movwf	4
  4781  0C06  160A  158A  2000  120A  158A  	fcall	stringdir
  4782  0C0B  00C3               	movwf	??_scale+1
  4783  0C0C  160A  158A  2000  120A  158A  	fcall	stringdir
  4784  0C11  00C4               	movwf	??_scale+2
  4785  0C12  160A  158A  2000  120A  158A  	fcall	stringdir
  4786  0C17  00C5               	movwf	??_scale+3
  4787  0C18  160A  158A  2000  120A  158A  	fcall	stringdir
  4788  0C1D  00C6               	movwf	??_scale+4
  4789  0C1E  0846               	movf	??_scale+4,w
  4790  0C1F  00A7               	movwf	___flmul@b+3
  4791  0C20  0845               	movf	??_scale+3,w
  4792  0C21  00A6               	movwf	___flmul@b+2
  4793  0C22  0844               	movf	??_scale+2,w
  4794  0C23  00A5               	movwf	___flmul@b+1
  4795  0C24  0843               	movf	??_scale+1,w
  4796  0C25  00A4               	movwf	___flmul@b
  4797  0C26  300A               	movlw	10
  4798  0C27  00F7               	movwf	___awdiv@divisor
  4799  0C28  3000               	movlw	0
  4800  0C29  00F8               	movwf	___awdiv@divisor+1
  4801  0C2A  0850               	movf	scale@scl,w
  4802  0C2B  00F9               	movwf	___awdiv@dividend
  4803  0C2C  01FA               	clrf	___awdiv@dividend+1
  4804  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  4805  0C2E  03FA               	decf	___awdiv@dividend+1,f
  4806  0C2F  120A  118A  200F  120A  158A  	fcall	___awdiv
  4807  0C34  0877               	movf	?___awdiv,w
  4808  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4809  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4810  0C37  00C7               	movwf	??_scale+5
  4811  0C38  3001               	movlw	1
  4812  0C39                     u4225:
  4813  0C39  1003               	clrc
  4814  0C3A  0DC7               	rlf	??_scale+5,f
  4815  0C3B  3EFF               	addlw	-1
  4816  0C3C  1D03               	skipz
  4817  0C3D  2C39               	goto	u4225
  4818  0C3E  1003               	clrc
  4819  0C3F  0D47               	rlf	??_scale+5,w
  4820  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4821  0C41  0084               	movwf	4
  4822  0C42  160A  158A  2000  120A  158A  	fcall	stringdir
  4823  0C47  00C8               	movwf	??_scale+6
  4824  0C48  160A  158A  2000  120A  158A  	fcall	stringdir
  4825  0C4D  00C9               	movwf	??_scale+7
  4826  0C4E  160A  158A  2000  120A  158A  	fcall	stringdir
  4827  0C53  00CA               	movwf	??_scale+8
  4828  0C54  160A  158A  2000  120A  158A  	fcall	stringdir
  4829  0C59  00CB               	movwf	??_scale+9
  4830  0C5A  084B               	movf	??_scale+9,w
  4831  0C5B  00AB               	movwf	___flmul@a+3
  4832  0C5C  084A               	movf	??_scale+8,w
  4833  0C5D  00AA               	movwf	___flmul@a+2
  4834  0C5E  0849               	movf	??_scale+7,w
  4835  0C5F  00A9               	movwf	___flmul@a+1
  4836  0C60  0848               	movf	??_scale+6,w
  4837  0C61  00A8               	movwf	___flmul@a
  4838  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4839  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4840  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4841  0C69  0827               	movf	?___flmul+3,w
  4842  0C6A  00C1               	movwf	?_scale+3
  4843  0C6B  0826               	movf	?___flmul+2,w
  4844  0C6C  00C0               	movwf	?_scale+2
  4845  0C6D  0825               	movf	?___flmul+1,w
  4846  0C6E  00BF               	movwf	?_scale+1
  4847  0C6F  0824               	movf	?___flmul,w
  4848  0C70  00BE               	movwf	?_scale
  4849  0C71  2C9E               	goto	l254
  4850  0C72                     l2792:
  4851                           
  4852                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4853  0C72  0850               	movf	scale@scl,w
  4854  0C73  00C2               	movwf	??_scale
  4855  0C74  3001               	movlw	1
  4856  0C75                     u4235:
  4857  0C75  1003               	clrc
  4858  0C76  0DC2               	rlf	??_scale,f
  4859  0C77  3EFF               	addlw	-1
  4860  0C78  1D03               	skipz
  4861  0C79  2C75               	goto	u4235
  4862  0C7A  1003               	clrc
  4863  0C7B  0D42               	rlf	??_scale,w
  4864  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4865  0C7D  0084               	movwf	4
  4866  0C7E  160A  158A  2000  120A  158A  	fcall	stringdir
  4867  0C83  00C3               	movwf	??_scale+1
  4868  0C84  160A  158A  2000  120A  158A  	fcall	stringdir
  4869  0C89  00C4               	movwf	??_scale+2
  4870  0C8A  160A  158A  2000  120A  158A  	fcall	stringdir
  4871  0C8F  00C5               	movwf	??_scale+3
  4872  0C90  160A  158A  2000  120A  158A  	fcall	stringdir
  4873  0C95  00C6               	movwf	??_scale+4
  4874  0C96  0846               	movf	??_scale+4,w
  4875  0C97  00C1               	movwf	?_scale+3
  4876  0C98  0845               	movf	??_scale+3,w
  4877  0C99  00C0               	movwf	?_scale+2
  4878  0C9A  0844               	movf	??_scale+2,w
  4879  0C9B  00BF               	movwf	?_scale+1
  4880  0C9C  0843               	movf	??_scale+1,w
  4881  0C9D  00BE               	movwf	?_scale
  4882  0C9E                     l254:
  4883  0C9E  0008               	return
  4884  0C9F                     __end_of_scale:
  4885                           
  4886                           	psect	text4
  4887  1E2B                     __ptext4:	
  4888 ;; *************** function ___awmod *****************
  4889 ;; Defined at:
  4890 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;  divisor         2    0[COMMON] int 
  4893 ;;  dividend        2    2[COMMON] int 
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;  sign            1    6[COMMON] unsigned char 
  4896 ;;  counter         1    5[COMMON] unsigned char 
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  2    0[COMMON] int 
  4899 ;; Registers used:
  4900 ;;		wreg, status,2, status,0
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4906 ;;      Params:         4       0       0       0       0
  4907 ;;      Locals:         2       0       0       0       0
  4908 ;;      Temps:          1       0       0       0       0
  4909 ;;      Totals:         7       0       0       0       0
  4910 ;;Total ram usage:        7 bytes
  4911 ;; Hardware stack levels used:    1
  4912 ;; This function calls:
  4913 ;;		Nothing
  4914 ;; This function is called by:
  4915 ;;		_scale
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           
  4920                           ;psect for function ___awmod
  4921  1E2B                     ___awmod:
  4922  1E2B                     l2316:	
  4923                           ;incstack = 0
  4924                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4925                           
  4926  1E2B  01F6               	clrf	___awmod@sign
  4927  1E2C                     l2318:
  4928  1E2C  1FF3               	btfss	___awmod@dividend+1,7
  4929  1E2D  2E2F               	goto	u2931
  4930  1E2E  2E30               	goto	u2930
  4931  1E2F                     u2931:
  4932  1E2F  2E37               	goto	l2324
  4933  1E30                     u2930:
  4934  1E30                     l2320:
  4935  1E30  09F2               	comf	___awmod@dividend,f
  4936  1E31  09F3               	comf	___awmod@dividend+1,f
  4937  1E32  0AF2               	incf	___awmod@dividend,f
  4938  1E33  1903               	skipnz
  4939  1E34  0AF3               	incf	___awmod@dividend+1,f
  4940  1E35                     l2322:
  4941  1E35  01F6               	clrf	___awmod@sign
  4942  1E36  0AF6               	incf	___awmod@sign,f
  4943  1E37                     l2324:
  4944  1E37  1FF1               	btfss	___awmod@divisor+1,7
  4945  1E38  2E3A               	goto	u2941
  4946  1E39  2E3B               	goto	u2940
  4947  1E3A                     u2941:
  4948  1E3A  2E40               	goto	l2328
  4949  1E3B                     u2940:
  4950  1E3B                     l2326:
  4951  1E3B  09F0               	comf	___awmod@divisor,f
  4952  1E3C  09F1               	comf	___awmod@divisor+1,f
  4953  1E3D  0AF0               	incf	___awmod@divisor,f
  4954  1E3E  1903               	skipnz
  4955  1E3F  0AF1               	incf	___awmod@divisor+1,f
  4956  1E40                     l2328:
  4957  1E40  0870               	movf	___awmod@divisor,w
  4958  1E41  0471               	iorwf	___awmod@divisor+1,w
  4959  1E42  1903               	btfsc	3,2
  4960  1E43  2E45               	goto	u2951
  4961  1E44  2E46               	goto	u2950
  4962  1E45                     u2951:
  4963  1E45  2E75               	goto	l2346
  4964  1E46                     u2950:
  4965  1E46                     l2330:
  4966  1E46  01F5               	clrf	___awmod@counter
  4967  1E47  0AF5               	incf	___awmod@counter,f
  4968  1E48  2E54               	goto	l2336
  4969  1E49                     l2332:
  4970  1E49  3001               	movlw	1
  4971  1E4A                     u2965:
  4972  1E4A  1003               	clrc
  4973  1E4B  0DF0               	rlf	___awmod@divisor,f
  4974  1E4C  0DF1               	rlf	___awmod@divisor+1,f
  4975  1E4D  3EFF               	addlw	-1
  4976  1E4E  1D03               	skipz
  4977  1E4F  2E4A               	goto	u2965
  4978  1E50                     l2334:
  4979  1E50  3001               	movlw	1
  4980  1E51  00F4               	movwf	??___awmod
  4981  1E52  0874               	movf	??___awmod,w
  4982  1E53  07F5               	addwf	___awmod@counter,f
  4983  1E54                     l2336:
  4984  1E54  1FF1               	btfss	___awmod@divisor+1,7
  4985  1E55  2E57               	goto	u2971
  4986  1E56  2E58               	goto	u2970
  4987  1E57                     u2971:
  4988  1E57  2E49               	goto	l2332
  4989  1E58                     u2970:
  4990  1E58                     l2338:
  4991  1E58  0871               	movf	___awmod@divisor+1,w
  4992  1E59  0273               	subwf	___awmod@dividend+1,w
  4993  1E5A  1D03               	skipz
  4994  1E5B  2E5E               	goto	u2985
  4995  1E5C  0870               	movf	___awmod@divisor,w
  4996  1E5D  0272               	subwf	___awmod@dividend,w
  4997  1E5E                     u2985:
  4998  1E5E  1C03               	skipc
  4999  1E5F  2E61               	goto	u2981
  5000  1E60  2E62               	goto	u2980
  5001  1E61                     u2981:
  5002  1E61  2E68               	goto	l2342
  5003  1E62                     u2980:
  5004  1E62                     l2340:
  5005  1E62  0870               	movf	___awmod@divisor,w
  5006  1E63  02F2               	subwf	___awmod@dividend,f
  5007  1E64  0871               	movf	___awmod@divisor+1,w
  5008  1E65  1C03               	skipc
  5009  1E66  03F3               	decf	___awmod@dividend+1,f
  5010  1E67  02F3               	subwf	___awmod@dividend+1,f
  5011  1E68                     l2342:
  5012  1E68  3001               	movlw	1
  5013  1E69                     u2995:
  5014  1E69  1003               	clrc
  5015  1E6A  0CF1               	rrf	___awmod@divisor+1,f
  5016  1E6B  0CF0               	rrf	___awmod@divisor,f
  5017  1E6C  3EFF               	addlw	-1
  5018  1E6D  1D03               	skipz
  5019  1E6E  2E69               	goto	u2995
  5020  1E6F                     l2344:
  5021  1E6F  3001               	movlw	1
  5022  1E70  02F5               	subwf	___awmod@counter,f
  5023  1E71  1D03               	btfss	3,2
  5024  1E72  2E74               	goto	u3001
  5025  1E73  2E75               	goto	u3000
  5026  1E74                     u3001:
  5027  1E74  2E58               	goto	l2338
  5028  1E75                     u3000:
  5029  1E75                     l2346:
  5030  1E75  0876               	movf	___awmod@sign,w
  5031  1E76  1903               	btfsc	3,2
  5032  1E77  2E79               	goto	u3011
  5033  1E78  2E7A               	goto	u3010
  5034  1E79                     u3011:
  5035  1E79  2E7F               	goto	l2350
  5036  1E7A                     u3010:
  5037  1E7A                     l2348:
  5038  1E7A  09F2               	comf	___awmod@dividend,f
  5039  1E7B  09F3               	comf	___awmod@dividend+1,f
  5040  1E7C  0AF2               	incf	___awmod@dividend,f
  5041  1E7D  1903               	skipnz
  5042  1E7E  0AF3               	incf	___awmod@dividend+1,f
  5043  1E7F                     l2350:
  5044  1E7F  0873               	movf	___awmod@dividend+1,w
  5045  1E80  00F1               	movwf	?___awmod+1
  5046  1E81  0872               	movf	___awmod@dividend,w
  5047  1E82  00F0               	movwf	?___awmod
  5048  1E83                     l507:
  5049  1E83  0008               	return
  5050  1E84                     __end_of___awmod:
  5051                           
  5052                           	psect	text5
  5053  000F                     __ptext5:	
  5054 ;; *************** function ___awdiv *****************
  5055 ;; Defined at:
  5056 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;  divisor         2    7[COMMON] int 
  5059 ;;  dividend        2    9[COMMON] int 
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  quotient        2    2[BANK0 ] int 
  5062 ;;  sign            1    1[BANK0 ] unsigned char 
  5063 ;;  counter         1    0[BANK0 ] unsigned char 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  2    7[COMMON] int 
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5073 ;;      Params:         4       0       0       0       0
  5074 ;;      Locals:         0       4       0       0       0
  5075 ;;      Temps:          1       0       0       0       0
  5076 ;;      Totals:         5       4       0       0       0
  5077 ;;Total ram usage:        9 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		_scale
  5083 ;;		_sprintf
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           
  5088                           ;psect for function ___awdiv
  5089  000F                     ___awdiv:
  5090  000F                     l2272:	
  5091                           ;incstack = 0
  5092                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5093                           
  5094  000F  1283               	bcf	3,5	;RP0=0, select bank0
  5095  0010  1303               	bcf	3,6	;RP1=0, select bank0
  5096  0011  01A1               	clrf	___awdiv@sign
  5097  0012                     l2274:
  5098  0012  1FF8               	btfss	___awdiv@divisor+1,7
  5099  0013  2815               	goto	u2831
  5100  0014  2816               	goto	u2830
  5101  0015                     u2831:
  5102  0015  281D               	goto	l2280
  5103  0016                     u2830:
  5104  0016                     l2276:
  5105  0016  09F7               	comf	___awdiv@divisor,f
  5106  0017  09F8               	comf	___awdiv@divisor+1,f
  5107  0018  0AF7               	incf	___awdiv@divisor,f
  5108  0019  1903               	skipnz
  5109  001A  0AF8               	incf	___awdiv@divisor+1,f
  5110  001B                     l2278:
  5111  001B  01A1               	clrf	___awdiv@sign
  5112  001C  0AA1               	incf	___awdiv@sign,f
  5113  001D                     l2280:
  5114  001D  1FFA               	btfss	___awdiv@dividend+1,7
  5115  001E  2820               	goto	u2841
  5116  001F  2821               	goto	u2840
  5117  0020                     u2841:
  5118  0020  282A               	goto	l2286
  5119  0021                     u2840:
  5120  0021                     l2282:
  5121  0021  09F9               	comf	___awdiv@dividend,f
  5122  0022  09FA               	comf	___awdiv@dividend+1,f
  5123  0023  0AF9               	incf	___awdiv@dividend,f
  5124  0024  1903               	skipnz
  5125  0025  0AFA               	incf	___awdiv@dividend+1,f
  5126  0026                     l2284:
  5127  0026  3001               	movlw	1
  5128  0027  00FB               	movwf	??___awdiv
  5129  0028  087B               	movf	??___awdiv,w
  5130  0029  06A1               	xorwf	___awdiv@sign,f
  5131  002A                     l2286:
  5132  002A  01A2               	clrf	___awdiv@quotient
  5133  002B  01A3               	clrf	___awdiv@quotient+1
  5134  002C                     l2288:
  5135  002C  0877               	movf	___awdiv@divisor,w
  5136  002D  0478               	iorwf	___awdiv@divisor+1,w
  5137  002E  1903               	btfsc	3,2
  5138  002F  2831               	goto	u2851
  5139  0030  2832               	goto	u2850
  5140  0031                     u2851:
  5141  0031  2869               	goto	l2308
  5142  0032                     u2850:
  5143  0032                     l2290:
  5144  0032  01A0               	clrf	___awdiv@counter
  5145  0033  0AA0               	incf	___awdiv@counter,f
  5146  0034  2840               	goto	l2296
  5147  0035                     l2292:
  5148  0035  3001               	movlw	1
  5149  0036                     u2865:
  5150  0036  1003               	clrc
  5151  0037  0DF7               	rlf	___awdiv@divisor,f
  5152  0038  0DF8               	rlf	___awdiv@divisor+1,f
  5153  0039  3EFF               	addlw	-1
  5154  003A  1D03               	skipz
  5155  003B  2836               	goto	u2865
  5156  003C                     l2294:
  5157  003C  3001               	movlw	1
  5158  003D  00FB               	movwf	??___awdiv
  5159  003E  087B               	movf	??___awdiv,w
  5160  003F  07A0               	addwf	___awdiv@counter,f
  5161  0040                     l2296:
  5162  0040  1FF8               	btfss	___awdiv@divisor+1,7
  5163  0041  2843               	goto	u2871
  5164  0042  2844               	goto	u2870
  5165  0043                     u2871:
  5166  0043  2835               	goto	l2292
  5167  0044                     u2870:
  5168  0044                     l2298:
  5169  0044  3001               	movlw	1
  5170  0045                     u2885:
  5171  0045  1003               	clrc
  5172  0046  0DA2               	rlf	___awdiv@quotient,f
  5173  0047  0DA3               	rlf	___awdiv@quotient+1,f
  5174  0048  3EFF               	addlw	-1
  5175  0049  1D03               	skipz
  5176  004A  2845               	goto	u2885
  5177  004B  0878               	movf	___awdiv@divisor+1,w
  5178  004C  027A               	subwf	___awdiv@dividend+1,w
  5179  004D  1D03               	skipz
  5180  004E  2851               	goto	u2895
  5181  004F  0877               	movf	___awdiv@divisor,w
  5182  0050  0279               	subwf	___awdiv@dividend,w
  5183  0051                     u2895:
  5184  0051  1C03               	skipc
  5185  0052  2854               	goto	u2891
  5186  0053  2855               	goto	u2890
  5187  0054                     u2891:
  5188  0054  285C               	goto	l2304
  5189  0055                     u2890:
  5190  0055                     l2300:
  5191  0055  0877               	movf	___awdiv@divisor,w
  5192  0056  02F9               	subwf	___awdiv@dividend,f
  5193  0057  0878               	movf	___awdiv@divisor+1,w
  5194  0058  1C03               	skipc
  5195  0059  03FA               	decf	___awdiv@dividend+1,f
  5196  005A  02FA               	subwf	___awdiv@dividend+1,f
  5197  005B                     l2302:
  5198  005B  1422               	bsf	___awdiv@quotient,0
  5199  005C                     l2304:
  5200  005C  3001               	movlw	1
  5201  005D                     u2905:
  5202  005D  1003               	clrc
  5203  005E  0CF8               	rrf	___awdiv@divisor+1,f
  5204  005F  0CF7               	rrf	___awdiv@divisor,f
  5205  0060  3EFF               	addlw	-1
  5206  0061  1D03               	skipz
  5207  0062  285D               	goto	u2905
  5208  0063                     l2306:
  5209  0063  3001               	movlw	1
  5210  0064  02A0               	subwf	___awdiv@counter,f
  5211  0065  1D03               	btfss	3,2
  5212  0066  2868               	goto	u2911
  5213  0067  2869               	goto	u2910
  5214  0068                     u2911:
  5215  0068  2844               	goto	l2298
  5216  0069                     u2910:
  5217  0069                     l2308:
  5218  0069  0821               	movf	___awdiv@sign,w
  5219  006A  1903               	btfsc	3,2
  5220  006B  286D               	goto	u2921
  5221  006C  286E               	goto	u2920
  5222  006D                     u2921:
  5223  006D  2873               	goto	l2312
  5224  006E                     u2920:
  5225  006E                     l2310:
  5226  006E  09A2               	comf	___awdiv@quotient,f
  5227  006F  09A3               	comf	___awdiv@quotient+1,f
  5228  0070  0AA2               	incf	___awdiv@quotient,f
  5229  0071  1903               	skipnz
  5230  0072  0AA3               	incf	___awdiv@quotient+1,f
  5231  0073                     l2312:
  5232  0073  0823               	movf	___awdiv@quotient+1,w
  5233  0074  00F8               	movwf	?___awdiv+1
  5234  0075  0822               	movf	___awdiv@quotient,w
  5235  0076  00F7               	movwf	?___awdiv
  5236  0077                     l494:
  5237  0077  0008               	return
  5238  0078                     __end_of___awdiv:
  5239                           
  5240                           	psect	text6
  5241  1C46                     __ptext6:	
  5242 ;; *************** function _isdigit *****************
  5243 ;; Defined at:
  5244 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  c               1    wreg     unsigned char 
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;  c               1    1[COMMON] unsigned char 
  5249 ;; Return value:  Size  Location     Type
  5250 ;;		None               void
  5251 ;; Registers used:
  5252 ;;		wreg, status,2, status,0
  5253 ;; Tracked objects:
  5254 ;;		On entry : 0/0
  5255 ;;		On exit  : 0/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5258 ;;      Params:         0       0       0       0       0
  5259 ;;      Locals:         2       0       0       0       0
  5260 ;;      Temps:          0       0       0       0       0
  5261 ;;      Totals:         2       0       0       0       0
  5262 ;;Total ram usage:        2 bytes
  5263 ;; Hardware stack levels used:    1
  5264 ;; This function calls:
  5265 ;;		Nothing
  5266 ;; This function is called by:
  5267 ;;		_sprintf
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           
  5272                           ;psect for function _isdigit
  5273  1C46                     _isdigit:
  5274                           
  5275                           ;incstack = 0
  5276                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5277                           ;isdigit@c stored from wreg
  5278  1C46  00F1               	movwf	isdigit@c
  5279  1C47                     l2796:
  5280  1C47  01F0               	clrf	_isdigit$977
  5281  1C48                     l2798:
  5282  1C48  303A               	movlw	58
  5283  1C49  0271               	subwf	isdigit@c,w
  5284  1C4A  1803               	skipnc
  5285  1C4B  2C4D               	goto	u4241
  5286  1C4C  2C4E               	goto	u4240
  5287  1C4D                     u4241:
  5288  1C4D  2C56               	goto	l2804
  5289  1C4E                     u4240:
  5290  1C4E                     l2800:
  5291  1C4E  3030               	movlw	48
  5292  1C4F  0271               	subwf	isdigit@c,w
  5293  1C50  1C03               	skipc
  5294  1C51  2C53               	goto	u4251
  5295  1C52  2C54               	goto	u4250
  5296  1C53                     u4251:
  5297  1C53  2C56               	goto	l2804
  5298  1C54                     u4250:
  5299  1C54                     l2802:
  5300  1C54  01F0               	clrf	_isdigit$977
  5301  1C55  0AF0               	incf	_isdigit$977,f
  5302  1C56                     l2804:
  5303  1C56  0C70               	rrf	_isdigit$977,w
  5304  1C57                     l828:
  5305  1C57  0008               	return
  5306  1C58                     __end_of_isdigit:
  5307                           
  5308                           	psect	text7
  5309  136D                     __ptext7:	
  5310 ;; *************** function _fround *****************
  5311 ;; Defined at:
  5312 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;  prec            1    wreg     unsigned char 
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;  prec            1   49[BANK0 ] unsigned char 
  5317 ;; Return value:  Size  Location     Type
  5318 ;;                  4   30[BANK0 ] unsigned char 
  5319 ;; Registers used:
  5320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5321 ;; Tracked objects:
  5322 ;;		On entry : 0/0
  5323 ;;		On exit  : 0/0
  5324 ;;		Unchanged: 0/0
  5325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5326 ;;      Params:         0       4       0       0       0
  5327 ;;      Locals:         0       9       0       0       0
  5328 ;;      Temps:          0       7       0       0       0
  5329 ;;      Totals:         0      20       0       0       0
  5330 ;;Total ram usage:       20 bytes
  5331 ;; Hardware stack levels used:    1
  5332 ;; Hardware stack levels required when called:    2
  5333 ;; This function calls:
  5334 ;;		___flmul
  5335 ;;		___lwdiv
  5336 ;;		___lwmod
  5337 ;; This function is called by:
  5338 ;;		_sprintf
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           
  5343                           ;psect for function _fround
  5344  136D                     _fround:
  5345                           
  5346                           ;incstack = 0
  5347                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5348                           ;fround@prec stored from wreg
  5349  136D  1283               	bcf	3,5	;RP0=0, select bank0
  5350  136E  1303               	bcf	3,6	;RP1=0, select bank0
  5351  136F  00D1               	movwf	fround@prec
  5352  1370                     l2738:
  5353                           
  5354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5355  1370  306E               	movlw	110
  5356  1371  0251               	subwf	fround@prec,w
  5357  1372  1C03               	skipc
  5358  1373  2B75               	goto	u3991
  5359  1374  2B76               	goto	u3990
  5360  1375                     u3991:
  5361  1375  2C83               	goto	l2746
  5362  1376                     u3990:
  5363  1376                     l2740:
  5364                           
  5365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5366  1376  303F               	movlw	63
  5367  1377  00A7               	movwf	___flmul@b+3
  5368  1378  3000               	movlw	0
  5369  1379  00A6               	movwf	___flmul@b+2
  5370  137A  3000               	movlw	0
  5371  137B  00A5               	movwf	___flmul@b+1
  5372  137C  3000               	movlw	0
  5373  137D  00A4               	movwf	___flmul@b
  5374  137E  3064               	movlw	100
  5375  137F  00F6               	movwf	___lwdiv@divisor
  5376  1380  3000               	movlw	0
  5377  1381  00F7               	movwf	___lwdiv@divisor+1
  5378  1382  0851               	movf	fround@prec,w
  5379  1383  00C2               	movwf	??_fround
  5380  1384  01C3               	clrf	??_fround+1
  5381  1385  0842               	movf	??_fround,w
  5382  1386  00F8               	movwf	___lwdiv@dividend
  5383  1387  0843               	movf	??_fround+1,w
  5384  1388  00F9               	movwf	___lwdiv@dividend+1
  5385  1389  160A  158A  2545  160A  118A  	fcall	___lwdiv
  5386  138E  0876               	movf	?___lwdiv,w
  5387  138F  1283               	bcf	3,5	;RP0=0, select bank0
  5388  1390  1303               	bcf	3,6	;RP1=0, select bank0
  5389  1391  00C4               	movwf	??_fround+2
  5390  1392  3001               	movlw	1
  5391  1393                     u4005:
  5392  1393  1003               	clrc
  5393  1394  0DC4               	rlf	??_fround+2,f
  5394  1395  3EFF               	addlw	-1
  5395  1396  1D03               	skipz
  5396  1397  2B93               	goto	u4005
  5397  1398  1003               	clrc
  5398  1399  0D44               	rlf	??_fround+2,w
  5399  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5400  139B  0084               	movwf	4
  5401  139C  160A  158A  2000  160A  118A  	fcall	stringdir
  5402  13A1  00C5               	movwf	??_fround+3
  5403  13A2  160A  158A  2000  160A  118A  	fcall	stringdir
  5404  13A7  00C6               	movwf	??_fround+4
  5405  13A8  160A  158A  2000  160A  118A  	fcall	stringdir
  5406  13AD  00C7               	movwf	??_fround+5
  5407  13AE  160A  158A  2000  160A  118A  	fcall	stringdir
  5408  13B3  00C8               	movwf	??_fround+6
  5409  13B4  0848               	movf	??_fround+6,w
  5410  13B5  00AB               	movwf	___flmul@a+3
  5411  13B6  0847               	movf	??_fround+5,w
  5412  13B7  00AA               	movwf	___flmul@a+2
  5413  13B8  0846               	movf	??_fround+4,w
  5414  13B9  00A9               	movwf	___flmul@a+1
  5415  13BA  0845               	movf	??_fround+3,w
  5416  13BB  00A8               	movwf	___flmul@a
  5417  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  5418  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  5419  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  5420  13C3  0827               	movf	?___flmul+3,w
  5421  13C4  00D0               	movwf	_fround$1161+3
  5422  13C5  0826               	movf	?___flmul+2,w
  5423  13C6  00CF               	movwf	_fround$1161+2
  5424  13C7  0825               	movf	?___flmul+1,w
  5425  13C8  00CE               	movwf	_fround$1161+1
  5426  13C9  0824               	movf	?___flmul,w
  5427  13CA  00CD               	movwf	_fround$1161
  5428                           
  5429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5430  13CB  300A               	movlw	10
  5431  13CC  00F6               	movwf	___lwdiv@divisor
  5432  13CD  3000               	movlw	0
  5433  13CE  00F7               	movwf	___lwdiv@divisor+1
  5434  13CF  0851               	movf	fround@prec,w
  5435  13D0  00C2               	movwf	??_fround
  5436  13D1  01C3               	clrf	??_fround+1
  5437  13D2  0842               	movf	??_fround,w
  5438  13D3  00F2               	movwf	___lwmod@dividend
  5439  13D4  0843               	movf	??_fround+1,w
  5440  13D5  00F3               	movwf	___lwmod@dividend+1
  5441  13D6  3064               	movlw	100
  5442  13D7  00F0               	movwf	___lwmod@divisor
  5443  13D8  3000               	movlw	0
  5444  13D9  00F1               	movwf	___lwmod@divisor+1
  5445  13DA  160A  158A  250B  160A  118A  	fcall	___lwmod
  5446  13DF  0871               	movf	?___lwmod+1,w
  5447  13E0  00F9               	movwf	___lwdiv@dividend+1
  5448  13E1  0870               	movf	?___lwmod,w
  5449  13E2  00F8               	movwf	___lwdiv@dividend
  5450  13E3  160A  158A  2545  160A  118A  	fcall	___lwdiv
  5451  13E8  0876               	movf	?___lwdiv,w
  5452  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  5453  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  5454  13EB  00C4               	movwf	??_fround+2
  5455  13EC  3001               	movlw	1
  5456  13ED                     u4015:
  5457  13ED  1003               	clrc
  5458  13EE  0DC4               	rlf	??_fround+2,f
  5459  13EF  3EFF               	addlw	-1
  5460  13F0  1D03               	skipz
  5461  13F1  2BED               	goto	u4015
  5462  13F2  1003               	clrc
  5463  13F3  0D44               	rlf	??_fround+2,w
  5464  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5465  13F5  0084               	movwf	4
  5466  13F6  160A  158A  2000  160A  118A  	fcall	stringdir
  5467  13FB  00C5               	movwf	??_fround+3
  5468  13FC  160A  158A  2000  160A  118A  	fcall	stringdir
  5469  1401  00C6               	movwf	??_fround+4
  5470  1402  160A  158A  2000  160A  118A  	fcall	stringdir
  5471  1407  00C7               	movwf	??_fround+5
  5472  1408  160A  158A  2000  160A  118A  	fcall	stringdir
  5473  140D  00C8               	movwf	??_fround+6
  5474  140E  0848               	movf	??_fround+6,w
  5475  140F  00A7               	movwf	___flmul@b+3
  5476  1410  0847               	movf	??_fround+5,w
  5477  1411  00A6               	movwf	___flmul@b+2
  5478  1412  0846               	movf	??_fround+4,w
  5479  1413  00A5               	movwf	___flmul@b+1
  5480  1414  0845               	movf	??_fround+3,w
  5481  1415  00A4               	movwf	___flmul@b
  5482  1416  0850               	movf	_fround$1161+3,w
  5483  1417  00AB               	movwf	___flmul@a+3
  5484  1418  084F               	movf	_fround$1161+2,w
  5485  1419  00AA               	movwf	___flmul@a+2
  5486  141A  084E               	movf	_fround$1161+1,w
  5487  141B  00A9               	movwf	___flmul@a+1
  5488  141C  084D               	movf	_fround$1161,w
  5489  141D  00A8               	movwf	___flmul@a
  5490  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  5491  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5492  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5493  1425  0827               	movf	?___flmul+3,w
  5494  1426  00CC               	movwf	_fround$1162+3
  5495  1427  0826               	movf	?___flmul+2,w
  5496  1428  00CB               	movwf	_fround$1162+2
  5497  1429  0825               	movf	?___flmul+1,w
  5498  142A  00CA               	movwf	_fround$1162+1
  5499  142B  0824               	movf	?___flmul,w
  5500  142C  00C9               	movwf	_fround$1162
  5501                           
  5502                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5503  142D  300A               	movlw	10
  5504  142E  00F0               	movwf	___lwmod@divisor
  5505  142F  3000               	movlw	0
  5506  1430  00F1               	movwf	___lwmod@divisor+1
  5507  1431  0851               	movf	fround@prec,w
  5508  1432  00C2               	movwf	??_fround
  5509  1433  01C3               	clrf	??_fround+1
  5510  1434  0842               	movf	??_fround,w
  5511  1435  00F2               	movwf	___lwmod@dividend
  5512  1436  0843               	movf	??_fround+1,w
  5513  1437  00F3               	movwf	___lwmod@dividend+1
  5514  1438  160A  158A  250B  160A  118A  	fcall	___lwmod
  5515  143D  0870               	movf	?___lwmod,w
  5516  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5517  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5518  1440  00C4               	movwf	??_fround+2
  5519  1441  3001               	movlw	1
  5520  1442                     u4025:
  5521  1442  1003               	clrc
  5522  1443  0DC4               	rlf	??_fround+2,f
  5523  1444  3EFF               	addlw	-1
  5524  1445  1D03               	skipz
  5525  1446  2C42               	goto	u4025
  5526  1447  1003               	clrc
  5527  1448  0D44               	rlf	??_fround+2,w
  5528  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5529  144A  0084               	movwf	4
  5530  144B  160A  158A  2000  160A  118A  	fcall	stringdir
  5531  1450  00C5               	movwf	??_fround+3
  5532  1451  160A  158A  2000  160A  118A  	fcall	stringdir
  5533  1456  00C6               	movwf	??_fround+4
  5534  1457  160A  158A  2000  160A  118A  	fcall	stringdir
  5535  145C  00C7               	movwf	??_fround+5
  5536  145D  160A  158A  2000  160A  118A  	fcall	stringdir
  5537  1462  00C8               	movwf	??_fround+6
  5538  1463  0848               	movf	??_fround+6,w
  5539  1464  00A7               	movwf	___flmul@b+3
  5540  1465  0847               	movf	??_fround+5,w
  5541  1466  00A6               	movwf	___flmul@b+2
  5542  1467  0846               	movf	??_fround+4,w
  5543  1468  00A5               	movwf	___flmul@b+1
  5544  1469  0845               	movf	??_fround+3,w
  5545  146A  00A4               	movwf	___flmul@b
  5546  146B  084C               	movf	_fround$1162+3,w
  5547  146C  00AB               	movwf	___flmul@a+3
  5548  146D  084B               	movf	_fround$1162+2,w
  5549  146E  00AA               	movwf	___flmul@a+2
  5550  146F  084A               	movf	_fround$1162+1,w
  5551  1470  00A9               	movwf	___flmul@a+1
  5552  1471  0849               	movf	_fround$1162,w
  5553  1472  00A8               	movwf	___flmul@a
  5554  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  5555  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5556  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5557  147A  0827               	movf	?___flmul+3,w
  5558  147B  00C1               	movwf	?_fround+3
  5559  147C  0826               	movf	?___flmul+2,w
  5560  147D  00C0               	movwf	?_fround+2
  5561  147E  0825               	movf	?___flmul+1,w
  5562  147F  00BF               	movwf	?_fround+1
  5563  1480  0824               	movf	?___flmul,w
  5564  1481  00BE               	movwf	?_fround
  5565  1482  2D77               	goto	l247
  5566  1483                     l2746:
  5567  1483  300B               	movlw	11
  5568  1484  0251               	subwf	fround@prec,w
  5569  1485  1C03               	skipc
  5570  1486  2C88               	goto	u4031
  5571  1487  2C89               	goto	u4030
  5572  1488                     u4031:
  5573  1488  2D34               	goto	l2752
  5574  1489                     u4030:
  5575  1489                     l2748:
  5576                           
  5577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5578  1489  303F               	movlw	63
  5579  148A  00A7               	movwf	___flmul@b+3
  5580  148B  3000               	movlw	0
  5581  148C  00A6               	movwf	___flmul@b+2
  5582  148D  3000               	movlw	0
  5583  148E  00A5               	movwf	___flmul@b+1
  5584  148F  3000               	movlw	0
  5585  1490  00A4               	movwf	___flmul@b
  5586  1491  300A               	movlw	10
  5587  1492  00F6               	movwf	___lwdiv@divisor
  5588  1493  3000               	movlw	0
  5589  1494  00F7               	movwf	___lwdiv@divisor+1
  5590  1495  0851               	movf	fround@prec,w
  5591  1496  00C2               	movwf	??_fround
  5592  1497  01C3               	clrf	??_fround+1
  5593  1498  0842               	movf	??_fround,w
  5594  1499  00F8               	movwf	___lwdiv@dividend
  5595  149A  0843               	movf	??_fround+1,w
  5596  149B  00F9               	movwf	___lwdiv@dividend+1
  5597  149C  160A  158A  2545  160A  118A  	fcall	___lwdiv
  5598  14A1  0876               	movf	?___lwdiv,w
  5599  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  5600  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  5601  14A4  00C4               	movwf	??_fround+2
  5602  14A5  3001               	movlw	1
  5603  14A6                     u4045:
  5604  14A6  1003               	clrc
  5605  14A7  0DC4               	rlf	??_fround+2,f
  5606  14A8  3EFF               	addlw	-1
  5607  14A9  1D03               	skipz
  5608  14AA  2CA6               	goto	u4045
  5609  14AB  1003               	clrc
  5610  14AC  0D44               	rlf	??_fround+2,w
  5611  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5612  14AE  0084               	movwf	4
  5613  14AF  160A  158A  2000  160A  118A  	fcall	stringdir
  5614  14B4  00C5               	movwf	??_fround+3
  5615  14B5  160A  158A  2000  160A  118A  	fcall	stringdir
  5616  14BA  00C6               	movwf	??_fround+4
  5617  14BB  160A  158A  2000  160A  118A  	fcall	stringdir
  5618  14C0  00C7               	movwf	??_fround+5
  5619  14C1  160A  158A  2000  160A  118A  	fcall	stringdir
  5620  14C6  00C8               	movwf	??_fround+6
  5621  14C7  0848               	movf	??_fround+6,w
  5622  14C8  00AB               	movwf	___flmul@a+3
  5623  14C9  0847               	movf	??_fround+5,w
  5624  14CA  00AA               	movwf	___flmul@a+2
  5625  14CB  0846               	movf	??_fround+4,w
  5626  14CC  00A9               	movwf	___flmul@a+1
  5627  14CD  0845               	movf	??_fround+3,w
  5628  14CE  00A8               	movwf	___flmul@a
  5629  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  5630  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5631  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5632  14D6  0827               	movf	?___flmul+3,w
  5633  14D7  00D0               	movwf	_fround$1161+3
  5634  14D8  0826               	movf	?___flmul+2,w
  5635  14D9  00CF               	movwf	_fround$1161+2
  5636  14DA  0825               	movf	?___flmul+1,w
  5637  14DB  00CE               	movwf	_fround$1161+1
  5638  14DC  0824               	movf	?___flmul,w
  5639  14DD  00CD               	movwf	_fround$1161
  5640                           
  5641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5642  14DE  300A               	movlw	10
  5643  14DF  00F0               	movwf	___lwmod@divisor
  5644  14E0  3000               	movlw	0
  5645  14E1  00F1               	movwf	___lwmod@divisor+1
  5646  14E2  0851               	movf	fround@prec,w
  5647  14E3  00C2               	movwf	??_fround
  5648  14E4  01C3               	clrf	??_fround+1
  5649  14E5  0842               	movf	??_fround,w
  5650  14E6  00F2               	movwf	___lwmod@dividend
  5651  14E7  0843               	movf	??_fround+1,w
  5652  14E8  00F3               	movwf	___lwmod@dividend+1
  5653  14E9  160A  158A  250B  160A  118A  	fcall	___lwmod
  5654  14EE  0870               	movf	?___lwmod,w
  5655  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5656  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5657  14F1  00C4               	movwf	??_fround+2
  5658  14F2  3001               	movlw	1
  5659  14F3                     u4055:
  5660  14F3  1003               	clrc
  5661  14F4  0DC4               	rlf	??_fround+2,f
  5662  14F5  3EFF               	addlw	-1
  5663  14F6  1D03               	skipz
  5664  14F7  2CF3               	goto	u4055
  5665  14F8  1003               	clrc
  5666  14F9  0D44               	rlf	??_fround+2,w
  5667  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5668  14FB  0084               	movwf	4
  5669  14FC  160A  158A  2000  160A  118A  	fcall	stringdir
  5670  1501  00C5               	movwf	??_fround+3
  5671  1502  160A  158A  2000  160A  118A  	fcall	stringdir
  5672  1507  00C6               	movwf	??_fround+4
  5673  1508  160A  158A  2000  160A  118A  	fcall	stringdir
  5674  150D  00C7               	movwf	??_fround+5
  5675  150E  160A  158A  2000  160A  118A  	fcall	stringdir
  5676  1513  00C8               	movwf	??_fround+6
  5677  1514  0848               	movf	??_fround+6,w
  5678  1515  00A7               	movwf	___flmul@b+3
  5679  1516  0847               	movf	??_fround+5,w
  5680  1517  00A6               	movwf	___flmul@b+2
  5681  1518  0846               	movf	??_fround+4,w
  5682  1519  00A5               	movwf	___flmul@b+1
  5683  151A  0845               	movf	??_fround+3,w
  5684  151B  00A4               	movwf	___flmul@b
  5685  151C  0850               	movf	_fround$1161+3,w
  5686  151D  00AB               	movwf	___flmul@a+3
  5687  151E  084F               	movf	_fround$1161+2,w
  5688  151F  00AA               	movwf	___flmul@a+2
  5689  1520  084E               	movf	_fround$1161+1,w
  5690  1521  00A9               	movwf	___flmul@a+1
  5691  1522  084D               	movf	_fround$1161,w
  5692  1523  00A8               	movwf	___flmul@a
  5693  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  5694  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5695  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5696  152B  0827               	movf	?___flmul+3,w
  5697  152C  00C1               	movwf	?_fround+3
  5698  152D  0826               	movf	?___flmul+2,w
  5699  152E  00C0               	movwf	?_fround+2
  5700  152F  0825               	movf	?___flmul+1,w
  5701  1530  00BF               	movwf	?_fround+1
  5702  1531  0824               	movf	?___flmul,w
  5703  1532  00BE               	movwf	?_fround
  5704  1533  2D77               	goto	l247
  5705  1534                     l2752:
  5706                           
  5707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5708  1534  303F               	movlw	63
  5709  1535  00A7               	movwf	___flmul@b+3
  5710  1536  3000               	movlw	0
  5711  1537  00A6               	movwf	___flmul@b+2
  5712  1538  3000               	movlw	0
  5713  1539  00A5               	movwf	___flmul@b+1
  5714  153A  3000               	movlw	0
  5715  153B  00A4               	movwf	___flmul@b
  5716  153C  0851               	movf	fround@prec,w
  5717  153D  00C2               	movwf	??_fround
  5718  153E  3001               	movlw	1
  5719  153F                     u4065:
  5720  153F  1003               	clrc
  5721  1540  0DC2               	rlf	??_fround,f
  5722  1541  3EFF               	addlw	-1
  5723  1542  1D03               	skipz
  5724  1543  2D3F               	goto	u4065
  5725  1544  1003               	clrc
  5726  1545  0D42               	rlf	??_fround,w
  5727  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5728  1547  0084               	movwf	4
  5729  1548  160A  158A  2000  160A  118A  	fcall	stringdir
  5730  154D  00C3               	movwf	??_fround+1
  5731  154E  160A  158A  2000  160A  118A  	fcall	stringdir
  5732  1553  00C4               	movwf	??_fround+2
  5733  1554  160A  158A  2000  160A  118A  	fcall	stringdir
  5734  1559  00C5               	movwf	??_fround+3
  5735  155A  160A  158A  2000  160A  118A  	fcall	stringdir
  5736  155F  00C6               	movwf	??_fround+4
  5737  1560  0846               	movf	??_fround+4,w
  5738  1561  00AB               	movwf	___flmul@a+3
  5739  1562  0845               	movf	??_fround+3,w
  5740  1563  00AA               	movwf	___flmul@a+2
  5741  1564  0844               	movf	??_fround+2,w
  5742  1565  00A9               	movwf	___flmul@a+1
  5743  1566  0843               	movf	??_fround+1,w
  5744  1567  00A8               	movwf	___flmul@a
  5745  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  5746  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5747  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5748  156F  0827               	movf	?___flmul+3,w
  5749  1570  00C1               	movwf	?_fround+3
  5750  1571  0826               	movf	?___flmul+2,w
  5751  1572  00C0               	movwf	?_fround+2
  5752  1573  0825               	movf	?___flmul+1,w
  5753  1574  00BF               	movwf	?_fround+1
  5754  1575  0824               	movf	?___flmul,w
  5755  1576  00BE               	movwf	?_fround
  5756  1577                     l247:
  5757  1577  0008               	return
  5758  1578                     __end_of_fround:
  5759                           
  5760                           	psect	text8
  5761  1D0B                     __ptext8:	
  5762 ;; *************** function ___lwmod *****************
  5763 ;; Defined at:
  5764 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  divisor         2    0[COMMON] unsigned int 
  5767 ;;  dividend        2    2[COMMON] unsigned int 
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;  counter         1    5[COMMON] unsigned char 
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  2    0[COMMON] unsigned int 
  5772 ;; Registers used:
  5773 ;;		wreg, status,2, status,0
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : 0/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5779 ;;      Params:         4       0       0       0       0
  5780 ;;      Locals:         1       0       0       0       0
  5781 ;;      Temps:          1       0       0       0       0
  5782 ;;      Totals:         6       0       0       0       0
  5783 ;;Total ram usage:        6 bytes
  5784 ;; Hardware stack levels used:    1
  5785 ;; This function calls:
  5786 ;;		Nothing
  5787 ;; This function is called by:
  5788 ;;		_fround
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           
  5792                           
  5793                           ;psect for function ___lwmod
  5794  1D0B                     ___lwmod:
  5795  1D0B                     l2380:	
  5796                           ;incstack = 0
  5797                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5798                           
  5799  1D0B  0870               	movf	___lwmod@divisor,w
  5800  1D0C  0471               	iorwf	___lwmod@divisor+1,w
  5801  1D0D  1903               	btfsc	3,2
  5802  1D0E  2D10               	goto	u3091
  5803  1D0F  2D11               	goto	u3090
  5804  1D10                     u3091:
  5805  1D10  2D40               	goto	l2398
  5806  1D11                     u3090:
  5807  1D11                     l2382:
  5808  1D11  01F5               	clrf	___lwmod@counter
  5809  1D12  0AF5               	incf	___lwmod@counter,f
  5810  1D13  2D1F               	goto	l2388
  5811  1D14                     l2384:
  5812  1D14  3001               	movlw	1
  5813  1D15                     u3105:
  5814  1D15  1003               	clrc
  5815  1D16  0DF0               	rlf	___lwmod@divisor,f
  5816  1D17  0DF1               	rlf	___lwmod@divisor+1,f
  5817  1D18  3EFF               	addlw	-1
  5818  1D19  1D03               	skipz
  5819  1D1A  2D15               	goto	u3105
  5820  1D1B                     l2386:
  5821  1D1B  3001               	movlw	1
  5822  1D1C  00F4               	movwf	??___lwmod
  5823  1D1D  0874               	movf	??___lwmod,w
  5824  1D1E  07F5               	addwf	___lwmod@counter,f
  5825  1D1F                     l2388:
  5826  1D1F  1FF1               	btfss	___lwmod@divisor+1,7
  5827  1D20  2D22               	goto	u3111
  5828  1D21  2D23               	goto	u3110
  5829  1D22                     u3111:
  5830  1D22  2D14               	goto	l2384
  5831  1D23                     u3110:
  5832  1D23                     l2390:
  5833  1D23  0871               	movf	___lwmod@divisor+1,w
  5834  1D24  0273               	subwf	___lwmod@dividend+1,w
  5835  1D25  1D03               	skipz
  5836  1D26  2D29               	goto	u3125
  5837  1D27  0870               	movf	___lwmod@divisor,w
  5838  1D28  0272               	subwf	___lwmod@dividend,w
  5839  1D29                     u3125:
  5840  1D29  1C03               	skipc
  5841  1D2A  2D2C               	goto	u3121
  5842  1D2B  2D2D               	goto	u3120
  5843  1D2C                     u3121:
  5844  1D2C  2D33               	goto	l2394
  5845  1D2D                     u3120:
  5846  1D2D                     l2392:
  5847  1D2D  0870               	movf	___lwmod@divisor,w
  5848  1D2E  02F2               	subwf	___lwmod@dividend,f
  5849  1D2F  0871               	movf	___lwmod@divisor+1,w
  5850  1D30  1C03               	skipc
  5851  1D31  03F3               	decf	___lwmod@dividend+1,f
  5852  1D32  02F3               	subwf	___lwmod@dividend+1,f
  5853  1D33                     l2394:
  5854  1D33  3001               	movlw	1
  5855  1D34                     u3135:
  5856  1D34  1003               	clrc
  5857  1D35  0CF1               	rrf	___lwmod@divisor+1,f
  5858  1D36  0CF0               	rrf	___lwmod@divisor,f
  5859  1D37  3EFF               	addlw	-1
  5860  1D38  1D03               	skipz
  5861  1D39  2D34               	goto	u3135
  5862  1D3A                     l2396:
  5863  1D3A  3001               	movlw	1
  5864  1D3B  02F5               	subwf	___lwmod@counter,f
  5865  1D3C  1D03               	btfss	3,2
  5866  1D3D  2D3F               	goto	u3141
  5867  1D3E  2D40               	goto	u3140
  5868  1D3F                     u3141:
  5869  1D3F  2D23               	goto	l2390
  5870  1D40                     u3140:
  5871  1D40                     l2398:
  5872  1D40  0873               	movf	___lwmod@dividend+1,w
  5873  1D41  00F1               	movwf	?___lwmod+1
  5874  1D42  0872               	movf	___lwmod@dividend,w
  5875  1D43  00F0               	movwf	?___lwmod
  5876  1D44                     l657:
  5877  1D44  0008               	return
  5878  1D45                     __end_of___lwmod:
  5879                           
  5880                           	psect	text9
  5881  1D45                     __ptext9:	
  5882 ;; *************** function ___lwdiv *****************
  5883 ;; Defined at:
  5884 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;  divisor         2    6[COMMON] unsigned int 
  5887 ;;  dividend        2    8[COMMON] unsigned int 
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;  quotient        2   11[COMMON] unsigned int 
  5890 ;;  counter         1   13[COMMON] unsigned char 
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  2    6[COMMON] unsigned int 
  5893 ;; Registers used:
  5894 ;;		wreg, status,2, status,0
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5900 ;;      Params:         4       0       0       0       0
  5901 ;;      Locals:         3       0       0       0       0
  5902 ;;      Temps:          1       0       0       0       0
  5903 ;;      Totals:         8       0       0       0       0
  5904 ;;Total ram usage:        8 bytes
  5905 ;; Hardware stack levels used:    1
  5906 ;; This function calls:
  5907 ;;		Nothing
  5908 ;; This function is called by:
  5909 ;;		_fround
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           
  5914                           ;psect for function ___lwdiv
  5915  1D45                     ___lwdiv:
  5916  1D45                     l2354:	
  5917                           ;incstack = 0
  5918                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5919                           
  5920  1D45  01FB               	clrf	___lwdiv@quotient
  5921  1D46  01FC               	clrf	___lwdiv@quotient+1
  5922  1D47                     l2356:
  5923  1D47  0876               	movf	___lwdiv@divisor,w
  5924  1D48  0477               	iorwf	___lwdiv@divisor+1,w
  5925  1D49  1903               	btfsc	3,2
  5926  1D4A  2D4C               	goto	u3021
  5927  1D4B  2D4D               	goto	u3020
  5928  1D4C                     u3021:
  5929  1D4C  2D84               	goto	l2376
  5930  1D4D                     u3020:
  5931  1D4D                     l2358:
  5932  1D4D  01FD               	clrf	___lwdiv@counter
  5933  1D4E  0AFD               	incf	___lwdiv@counter,f
  5934  1D4F  2D5B               	goto	l2364
  5935  1D50                     l2360:
  5936  1D50  3001               	movlw	1
  5937  1D51                     u3035:
  5938  1D51  1003               	clrc
  5939  1D52  0DF6               	rlf	___lwdiv@divisor,f
  5940  1D53  0DF7               	rlf	___lwdiv@divisor+1,f
  5941  1D54  3EFF               	addlw	-1
  5942  1D55  1D03               	skipz
  5943  1D56  2D51               	goto	u3035
  5944  1D57                     l2362:
  5945  1D57  3001               	movlw	1
  5946  1D58  00FA               	movwf	??___lwdiv
  5947  1D59  087A               	movf	??___lwdiv,w
  5948  1D5A  07FD               	addwf	___lwdiv@counter,f
  5949  1D5B                     l2364:
  5950  1D5B  1FF7               	btfss	___lwdiv@divisor+1,7
  5951  1D5C  2D5E               	goto	u3041
  5952  1D5D  2D5F               	goto	u3040
  5953  1D5E                     u3041:
  5954  1D5E  2D50               	goto	l2360
  5955  1D5F                     u3040:
  5956  1D5F                     l2366:
  5957  1D5F  3001               	movlw	1
  5958  1D60                     u3055:
  5959  1D60  1003               	clrc
  5960  1D61  0DFB               	rlf	___lwdiv@quotient,f
  5961  1D62  0DFC               	rlf	___lwdiv@quotient+1,f
  5962  1D63  3EFF               	addlw	-1
  5963  1D64  1D03               	skipz
  5964  1D65  2D60               	goto	u3055
  5965  1D66  0877               	movf	___lwdiv@divisor+1,w
  5966  1D67  0279               	subwf	___lwdiv@dividend+1,w
  5967  1D68  1D03               	skipz
  5968  1D69  2D6C               	goto	u3065
  5969  1D6A  0876               	movf	___lwdiv@divisor,w
  5970  1D6B  0278               	subwf	___lwdiv@dividend,w
  5971  1D6C                     u3065:
  5972  1D6C  1C03               	skipc
  5973  1D6D  2D6F               	goto	u3061
  5974  1D6E  2D70               	goto	u3060
  5975  1D6F                     u3061:
  5976  1D6F  2D77               	goto	l2372
  5977  1D70                     u3060:
  5978  1D70                     l2368:
  5979  1D70  0876               	movf	___lwdiv@divisor,w
  5980  1D71  02F8               	subwf	___lwdiv@dividend,f
  5981  1D72  0877               	movf	___lwdiv@divisor+1,w
  5982  1D73  1C03               	skipc
  5983  1D74  03F9               	decf	___lwdiv@dividend+1,f
  5984  1D75  02F9               	subwf	___lwdiv@dividend+1,f
  5985  1D76                     l2370:
  5986  1D76  147B               	bsf	___lwdiv@quotient,0
  5987  1D77                     l2372:
  5988  1D77  3001               	movlw	1
  5989  1D78                     u3075:
  5990  1D78  1003               	clrc
  5991  1D79  0CF7               	rrf	___lwdiv@divisor+1,f
  5992  1D7A  0CF6               	rrf	___lwdiv@divisor,f
  5993  1D7B  3EFF               	addlw	-1
  5994  1D7C  1D03               	skipz
  5995  1D7D  2D78               	goto	u3075
  5996  1D7E                     l2374:
  5997  1D7E  3001               	movlw	1
  5998  1D7F  02FD               	subwf	___lwdiv@counter,f
  5999  1D80  1D03               	btfss	3,2
  6000  1D81  2D83               	goto	u3081
  6001  1D82  2D84               	goto	u3080
  6002  1D83                     u3081:
  6003  1D83  2D5F               	goto	l2366
  6004  1D84                     u3080:
  6005  1D84                     l2376:
  6006  1D84  087C               	movf	___lwdiv@quotient+1,w
  6007  1D85  00F7               	movwf	?___lwdiv+1
  6008  1D86  087B               	movf	___lwdiv@quotient,w
  6009  1D87  00F6               	movwf	?___lwdiv
  6010  1D88                     l647:
  6011  1D88  0008               	return
  6012  1D89                     __end_of___lwdiv:
  6013                           
  6014                           	psect	text10
  6015  0C9F                     __ptext10:	
  6016 ;; *************** function ___flmul *****************
  6017 ;; Defined at:
  6018 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  b               4    4[BANK0 ] unsigned int 
  6021 ;;  a               4    8[BANK0 ] unsigned int 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  prod            4   24[BANK0 ] struct .
  6024 ;;  grs             4   18[BANK0 ] unsigned long 
  6025 ;;  temp            2   28[BANK0 ] struct .
  6026 ;;  bexp            1   23[BANK0 ] unsigned char 
  6027 ;;  aexp            1   22[BANK0 ] unsigned char 
  6028 ;;  sign            1   17[BANK0 ] unsigned char 
  6029 ;; Return value:  Size  Location     Type
  6030 ;;                  4    4[BANK0 ] unsigned char 
  6031 ;; Registers used:
  6032 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6033 ;; Tracked objects:
  6034 ;;		On entry : 0/0
  6035 ;;		On exit  : 0/0
  6036 ;;		Unchanged: 0/0
  6037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6038 ;;      Params:         0       8       0       0       0
  6039 ;;      Locals:         0      13       0       0       0
  6040 ;;      Temps:          0       5       0       0       0
  6041 ;;      Totals:         0      26       0       0       0
  6042 ;;Total ram usage:       26 bytes
  6043 ;; Hardware stack levels used:    1
  6044 ;; Hardware stack levels required when called:    1
  6045 ;; This function calls:
  6046 ;;		__Umul8_16
  6047 ;; This function is called by:
  6048 ;;		_main
  6049 ;;		_fround
  6050 ;;		_scale
  6051 ;;		_sprintf
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           
  6056                           ;psect for function ___flmul
  6057  0C9F                     ___flmul:
  6058  0C9F                     l2596:	
  6059                           ;incstack = 0
  6060                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6061                           
  6062  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  6063  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  6064  0CA1  0827               	movf	___flmul@b+3,w
  6065  0CA2  3980               	andlw	128
  6066  0CA3  00AC               	movwf	??___flmul
  6067  0CA4  082C               	movf	??___flmul,w
  6068  0CA5  00B1               	movwf	___flmul@sign
  6069  0CA6                     l2598:
  6070  0CA6  0827               	movf	___flmul@b+3,w
  6071  0CA7  00AC               	movwf	??___flmul
  6072  0CA8  072C               	addwf	??___flmul,w
  6073  0CA9  00AD               	movwf	??___flmul+1
  6074  0CAA  082D               	movf	??___flmul+1,w
  6075  0CAB  00B7               	movwf	___flmul@bexp
  6076  0CAC                     l2600:
  6077  0CAC  1FA6               	btfss	___flmul@b+2,7
  6078  0CAD  2CAF               	goto	u3611
  6079  0CAE  2CB0               	goto	u3610
  6080  0CAF                     u3611:
  6081  0CAF  2CB1               	goto	l2604
  6082  0CB0                     u3610:
  6083  0CB0                     l2602:
  6084  0CB0  1437               	bsf	___flmul@bexp,0
  6085  0CB1                     l2604:
  6086  0CB1  0837               	movf	___flmul@bexp,w
  6087  0CB2  1903               	btfsc	3,2
  6088  0CB3  2CB5               	goto	u3621
  6089  0CB4  2CB6               	goto	u3620
  6090  0CB5                     u3621:
  6091  0CB5  2CC5               	goto	l2612
  6092  0CB6                     u3620:
  6093  0CB6                     l2606:
  6094  0CB6  0A37               	incf	___flmul@bexp,w
  6095  0CB7  1D03               	btfss	3,2
  6096  0CB8  2CBA               	goto	u3631
  6097  0CB9  2CBB               	goto	u3630
  6098  0CBA                     u3631:
  6099  0CBA  2CC3               	goto	l2610
  6100  0CBB                     u3630:
  6101  0CBB                     l2608:
  6102  0CBB  3000               	movlw	0
  6103  0CBC  00A7               	movwf	___flmul@b+3
  6104  0CBD  3000               	movlw	0
  6105  0CBE  00A6               	movwf	___flmul@b+2
  6106  0CBF  3000               	movlw	0
  6107  0CC0  00A5               	movwf	___flmul@b+1
  6108  0CC1  3000               	movlw	0
  6109  0CC2  00A4               	movwf	___flmul@b
  6110  0CC3                     l2610:
  6111  0CC3  17A6               	bsf	___flmul@b+2,7
  6112  0CC4  2CCD               	goto	l2614
  6113  0CC5                     l2612:
  6114  0CC5  3000               	movlw	0
  6115  0CC6  00A7               	movwf	___flmul@b+3
  6116  0CC7  3000               	movlw	0
  6117  0CC8  00A6               	movwf	___flmul@b+2
  6118  0CC9  3000               	movlw	0
  6119  0CCA  00A5               	movwf	___flmul@b+1
  6120  0CCB  3000               	movlw	0
  6121  0CCC  00A4               	movwf	___flmul@b
  6122  0CCD                     l2614:
  6123  0CCD  082B               	movf	___flmul@a+3,w
  6124  0CCE  3980               	andlw	128
  6125  0CCF  00AC               	movwf	??___flmul
  6126  0CD0  082C               	movf	??___flmul,w
  6127  0CD1  06B1               	xorwf	___flmul@sign,f
  6128  0CD2                     l2616:
  6129  0CD2  082B               	movf	___flmul@a+3,w
  6130  0CD3  00AC               	movwf	??___flmul
  6131  0CD4  072C               	addwf	??___flmul,w
  6132  0CD5  00AD               	movwf	??___flmul+1
  6133  0CD6  082D               	movf	??___flmul+1,w
  6134  0CD7  00B6               	movwf	___flmul@aexp
  6135  0CD8                     l2618:
  6136  0CD8  1FAA               	btfss	___flmul@a+2,7
  6137  0CD9  2CDB               	goto	u3641
  6138  0CDA  2CDC               	goto	u3640
  6139  0CDB                     u3641:
  6140  0CDB  2CDD               	goto	l2622
  6141  0CDC                     u3640:
  6142  0CDC                     l2620:
  6143  0CDC  1436               	bsf	___flmul@aexp,0
  6144  0CDD                     l2622:
  6145  0CDD  0836               	movf	___flmul@aexp,w
  6146  0CDE  1903               	btfsc	3,2
  6147  0CDF  2CE1               	goto	u3651
  6148  0CE0  2CE2               	goto	u3650
  6149  0CE1                     u3651:
  6150  0CE1  2CF1               	goto	l2630
  6151  0CE2                     u3650:
  6152  0CE2                     l2624:
  6153  0CE2  0A36               	incf	___flmul@aexp,w
  6154  0CE3  1D03               	btfss	3,2
  6155  0CE4  2CE6               	goto	u3661
  6156  0CE5  2CE7               	goto	u3660
  6157  0CE6                     u3661:
  6158  0CE6  2CEF               	goto	l2628
  6159  0CE7                     u3660:
  6160  0CE7                     l2626:
  6161  0CE7  3000               	movlw	0
  6162  0CE8  00AB               	movwf	___flmul@a+3
  6163  0CE9  3000               	movlw	0
  6164  0CEA  00AA               	movwf	___flmul@a+2
  6165  0CEB  3000               	movlw	0
  6166  0CEC  00A9               	movwf	___flmul@a+1
  6167  0CED  3000               	movlw	0
  6168  0CEE  00A8               	movwf	___flmul@a
  6169  0CEF                     l2628:
  6170  0CEF  17AA               	bsf	___flmul@a+2,7
  6171  0CF0  2CF9               	goto	l2632
  6172  0CF1                     l2630:
  6173  0CF1  3000               	movlw	0
  6174  0CF2  00AB               	movwf	___flmul@a+3
  6175  0CF3  3000               	movlw	0
  6176  0CF4  00AA               	movwf	___flmul@a+2
  6177  0CF5  3000               	movlw	0
  6178  0CF6  00A9               	movwf	___flmul@a+1
  6179  0CF7  3000               	movlw	0
  6180  0CF8  00A8               	movwf	___flmul@a
  6181  0CF9                     l2632:
  6182  0CF9  0836               	movf	___flmul@aexp,w
  6183  0CFA  1903               	btfsc	3,2
  6184  0CFB  2CFD               	goto	u3671
  6185  0CFC  2CFE               	goto	u3670
  6186  0CFD                     u3671:
  6187  0CFD  2D03               	goto	l2636
  6188  0CFE                     u3670:
  6189  0CFE                     l2634:
  6190  0CFE  0837               	movf	___flmul@bexp,w
  6191  0CFF  1D03               	btfss	3,2
  6192  0D00  2D02               	goto	u3681
  6193  0D01  2D03               	goto	u3680
  6194  0D02                     u3681:
  6195  0D02  2D0C               	goto	l2640
  6196  0D03                     u3680:
  6197  0D03                     l2636:
  6198  0D03  3000               	movlw	0
  6199  0D04  00A7               	movwf	?___flmul+3
  6200  0D05  3000               	movlw	0
  6201  0D06  00A6               	movwf	?___flmul+2
  6202  0D07  3000               	movlw	0
  6203  0D08  00A5               	movwf	?___flmul+1
  6204  0D09  3000               	movlw	0
  6205  0D0A  00A4               	movwf	?___flmul
  6206  0D0B  2FFF               	goto	l764
  6207  0D0C                     l2640:
  6208  0D0C  0824               	movf	___flmul@b,w
  6209  0D0D  00AC               	movwf	??___flmul
  6210  0D0E  082C               	movf	??___flmul,w
  6211  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  6212  0D10  082A               	movf	___flmul@a+2,w
  6213  0D11  160A  158A  24E4  120A  158A  	fcall	__Umul8_16
  6214  0D16  0871               	movf	?__Umul8_16+1,w
  6215  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  6216  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  6217  0D19  00BD               	movwf	___flmul@temp+1
  6218  0D1A  0870               	movf	?__Umul8_16,w
  6219  0D1B  00BC               	movwf	___flmul@temp
  6220  0D1C                     l2642:
  6221  0D1C  083C               	movf	___flmul@temp,w
  6222  0D1D  00AC               	movwf	??___flmul
  6223  0D1E  01AD               	clrf	??___flmul+1
  6224  0D1F  01AE               	clrf	??___flmul+2
  6225  0D20  01AF               	clrf	??___flmul+3
  6226  0D21  082F               	movf	??___flmul+3,w
  6227  0D22  00B5               	movwf	___flmul@grs+3
  6228  0D23  082E               	movf	??___flmul+2,w
  6229  0D24  00B4               	movwf	___flmul@grs+2
  6230  0D25  082D               	movf	??___flmul+1,w
  6231  0D26  00B3               	movwf	___flmul@grs+1
  6232  0D27  082C               	movf	??___flmul,w
  6233  0D28  00B2               	movwf	___flmul@grs
  6234  0D29                     l2644:
  6235  0D29  083D               	movf	___flmul@temp+1,w
  6236  0D2A  00AC               	movwf	??___flmul
  6237  0D2B  01AD               	clrf	??___flmul+1
  6238  0D2C  01AE               	clrf	??___flmul+2
  6239  0D2D  01AF               	clrf	??___flmul+3
  6240  0D2E  082F               	movf	??___flmul+3,w
  6241  0D2F  00BB               	movwf	___flmul@prod+3
  6242  0D30  082E               	movf	??___flmul+2,w
  6243  0D31  00BA               	movwf	___flmul@prod+2
  6244  0D32  082D               	movf	??___flmul+1,w
  6245  0D33  00B9               	movwf	___flmul@prod+1
  6246  0D34  082C               	movf	??___flmul,w
  6247  0D35  00B8               	movwf	___flmul@prod
  6248  0D36  0825               	movf	___flmul@b+1,w
  6249  0D37  00AC               	movwf	??___flmul
  6250  0D38  082C               	movf	??___flmul,w
  6251  0D39  00F0               	movwf	__Umul8_16@multiplicand
  6252  0D3A  0829               	movf	___flmul@a+1,w
  6253  0D3B  160A  158A  24E4  120A  158A  	fcall	__Umul8_16
  6254  0D40  0871               	movf	?__Umul8_16+1,w
  6255  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  6256  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  6257  0D43  00BD               	movwf	___flmul@temp+1
  6258  0D44  0870               	movf	?__Umul8_16,w
  6259  0D45  00BC               	movwf	___flmul@temp
  6260  0D46                     l2646:
  6261  0D46  083C               	movf	___flmul@temp,w
  6262  0D47  00AC               	movwf	??___flmul
  6263  0D48  01AD               	clrf	??___flmul+1
  6264  0D49  01AE               	clrf	??___flmul+2
  6265  0D4A  01AF               	clrf	??___flmul+3
  6266  0D4B  082C               	movf	??___flmul,w
  6267  0D4C  07B2               	addwf	___flmul@grs,f
  6268  0D4D  082D               	movf	??___flmul+1,w
  6269  0D4E  1103               	clrz
  6270  0D4F  1803               	skipnc
  6271  0D50  3E01               	addlw	1
  6272  0D51  1903               	skipnz
  6273  0D52  2D54               	goto	u3691
  6274  0D53  07B3               	addwf	___flmul@grs+1,f
  6275  0D54                     u3691:
  6276  0D54  082E               	movf	??___flmul+2,w
  6277  0D55  1103               	clrz
  6278  0D56  1803               	skipnc
  6279  0D57  3E01               	addlw	1
  6280  0D58  1903               	skipnz
  6281  0D59  2D5B               	goto	u3692
  6282  0D5A  07B4               	addwf	___flmul@grs+2,f
  6283  0D5B                     u3692:
  6284  0D5B  082F               	movf	??___flmul+3,w
  6285  0D5C  1103               	clrz
  6286  0D5D  1803               	skipnc
  6287  0D5E  3E01               	addlw	1
  6288  0D5F  1903               	skipnz
  6289  0D60  2D62               	goto	u3693
  6290  0D61  07B5               	addwf	___flmul@grs+3,f
  6291  0D62                     u3693:
  6292  0D62                     l2648:
  6293  0D62  083D               	movf	___flmul@temp+1,w
  6294  0D63  00AC               	movwf	??___flmul
  6295  0D64  01AD               	clrf	??___flmul+1
  6296  0D65  01AE               	clrf	??___flmul+2
  6297  0D66  01AF               	clrf	??___flmul+3
  6298  0D67  082C               	movf	??___flmul,w
  6299  0D68  07B8               	addwf	___flmul@prod,f
  6300  0D69  082D               	movf	??___flmul+1,w
  6301  0D6A  1103               	clrz
  6302  0D6B  1803               	skipnc
  6303  0D6C  3E01               	addlw	1
  6304  0D6D  1903               	skipnz
  6305  0D6E  2D70               	goto	u3701
  6306  0D6F  07B9               	addwf	___flmul@prod+1,f
  6307  0D70                     u3701:
  6308  0D70  082E               	movf	??___flmul+2,w
  6309  0D71  1103               	clrz
  6310  0D72  1803               	skipnc
  6311  0D73  3E01               	addlw	1
  6312  0D74  1903               	skipnz
  6313  0D75  2D77               	goto	u3702
  6314  0D76  07BA               	addwf	___flmul@prod+2,f
  6315  0D77                     u3702:
  6316  0D77  082F               	movf	??___flmul+3,w
  6317  0D78  1103               	clrz
  6318  0D79  1803               	skipnc
  6319  0D7A  3E01               	addlw	1
  6320  0D7B  1903               	skipnz
  6321  0D7C  2D7E               	goto	u3703
  6322  0D7D  07BB               	addwf	___flmul@prod+3,f
  6323  0D7E                     u3703:
  6324  0D7E  0826               	movf	___flmul@b+2,w
  6325  0D7F  00AC               	movwf	??___flmul
  6326  0D80  082C               	movf	??___flmul,w
  6327  0D81  00F0               	movwf	__Umul8_16@multiplicand
  6328  0D82  0828               	movf	___flmul@a,w
  6329  0D83  160A  158A  24E4  120A  158A  	fcall	__Umul8_16
  6330  0D88  0871               	movf	?__Umul8_16+1,w
  6331  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  6332  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  6333  0D8B  00BD               	movwf	___flmul@temp+1
  6334  0D8C  0870               	movf	?__Umul8_16,w
  6335  0D8D  00BC               	movwf	___flmul@temp
  6336  0D8E                     l2650:
  6337  0D8E  083C               	movf	___flmul@temp,w
  6338  0D8F  00AC               	movwf	??___flmul
  6339  0D90  01AD               	clrf	??___flmul+1
  6340  0D91  01AE               	clrf	??___flmul+2
  6341  0D92  01AF               	clrf	??___flmul+3
  6342  0D93  082C               	movf	??___flmul,w
  6343  0D94  07B2               	addwf	___flmul@grs,f
  6344  0D95  082D               	movf	??___flmul+1,w
  6345  0D96  1103               	clrz
  6346  0D97  1803               	skipnc
  6347  0D98  3E01               	addlw	1
  6348  0D99  1903               	skipnz
  6349  0D9A  2D9C               	goto	u3711
  6350  0D9B  07B3               	addwf	___flmul@grs+1,f
  6351  0D9C                     u3711:
  6352  0D9C  082E               	movf	??___flmul+2,w
  6353  0D9D  1103               	clrz
  6354  0D9E  1803               	skipnc
  6355  0D9F  3E01               	addlw	1
  6356  0DA0  1903               	skipnz
  6357  0DA1  2DA3               	goto	u3712
  6358  0DA2  07B4               	addwf	___flmul@grs+2,f
  6359  0DA3                     u3712:
  6360  0DA3  082F               	movf	??___flmul+3,w
  6361  0DA4  1103               	clrz
  6362  0DA5  1803               	skipnc
  6363  0DA6  3E01               	addlw	1
  6364  0DA7  1903               	skipnz
  6365  0DA8  2DAA               	goto	u3713
  6366  0DA9  07B5               	addwf	___flmul@grs+3,f
  6367  0DAA                     u3713:
  6368  0DAA                     l2652:
  6369  0DAA  083D               	movf	___flmul@temp+1,w
  6370  0DAB  00AC               	movwf	??___flmul
  6371  0DAC  01AD               	clrf	??___flmul+1
  6372  0DAD  01AE               	clrf	??___flmul+2
  6373  0DAE  01AF               	clrf	??___flmul+3
  6374  0DAF  082C               	movf	??___flmul,w
  6375  0DB0  07B8               	addwf	___flmul@prod,f
  6376  0DB1  082D               	movf	??___flmul+1,w
  6377  0DB2  1103               	clrz
  6378  0DB3  1803               	skipnc
  6379  0DB4  3E01               	addlw	1
  6380  0DB5  1903               	skipnz
  6381  0DB6  2DB8               	goto	u3721
  6382  0DB7  07B9               	addwf	___flmul@prod+1,f
  6383  0DB8                     u3721:
  6384  0DB8  082E               	movf	??___flmul+2,w
  6385  0DB9  1103               	clrz
  6386  0DBA  1803               	skipnc
  6387  0DBB  3E01               	addlw	1
  6388  0DBC  1903               	skipnz
  6389  0DBD  2DBF               	goto	u3722
  6390  0DBE  07BA               	addwf	___flmul@prod+2,f
  6391  0DBF                     u3722:
  6392  0DBF  082F               	movf	??___flmul+3,w
  6393  0DC0  1103               	clrz
  6394  0DC1  1803               	skipnc
  6395  0DC2  3E01               	addlw	1
  6396  0DC3  1903               	skipnz
  6397  0DC4  2DC6               	goto	u3723
  6398  0DC5  07BB               	addwf	___flmul@prod+3,f
  6399  0DC6                     u3723:
  6400  0DC6                     l2654:
  6401  0DC6  3008               	movlw	8
  6402  0DC7  00AC               	movwf	??___flmul
  6403  0DC8                     u3735:
  6404  0DC8  1003               	clrc
  6405  0DC9  0DB2               	rlf	___flmul@grs,f
  6406  0DCA  0DB3               	rlf	___flmul@grs+1,f
  6407  0DCB  0DB4               	rlf	___flmul@grs+2,f
  6408  0DCC  0DB5               	rlf	___flmul@grs+3,f
  6409  0DCD  0BAC               	decfsz	??___flmul,f
  6410  0DCE  2DC8               	goto	u3735
  6411  0DCF                     l2656:
  6412  0DCF  0825               	movf	___flmul@b+1,w
  6413  0DD0  00AC               	movwf	??___flmul
  6414  0DD1  082C               	movf	??___flmul,w
  6415  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  6416  0DD3  0828               	movf	___flmul@a,w
  6417  0DD4  160A  158A  24E4  120A  158A  	fcall	__Umul8_16
  6418  0DD9  0871               	movf	?__Umul8_16+1,w
  6419  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  6420  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  6421  0DDC  00BD               	movwf	___flmul@temp+1
  6422  0DDD  0870               	movf	?__Umul8_16,w
  6423  0DDE  00BC               	movwf	___flmul@temp
  6424  0DDF                     l2658:
  6425  0DDF  083C               	movf	___flmul@temp,w
  6426  0DE0  00AC               	movwf	??___flmul
  6427  0DE1  083D               	movf	___flmul@temp+1,w
  6428  0DE2  00AD               	movwf	??___flmul+1
  6429  0DE3  01AE               	clrf	??___flmul+2
  6430  0DE4  01AF               	clrf	??___flmul+3
  6431  0DE5  082C               	movf	??___flmul,w
  6432  0DE6  07B2               	addwf	___flmul@grs,f
  6433  0DE7  082D               	movf	??___flmul+1,w
  6434  0DE8  1103               	clrz
  6435  0DE9  1803               	skipnc
  6436  0DEA  3E01               	addlw	1
  6437  0DEB  1903               	skipnz
  6438  0DEC  2DEE               	goto	u3741
  6439  0DED  07B3               	addwf	___flmul@grs+1,f
  6440  0DEE                     u3741:
  6441  0DEE  082E               	movf	??___flmul+2,w
  6442  0DEF  1103               	clrz
  6443  0DF0  1803               	skipnc
  6444  0DF1  3E01               	addlw	1
  6445  0DF2  1903               	skipnz
  6446  0DF3  2DF5               	goto	u3742
  6447  0DF4  07B4               	addwf	___flmul@grs+2,f
  6448  0DF5                     u3742:
  6449  0DF5  082F               	movf	??___flmul+3,w
  6450  0DF6  1103               	clrz
  6451  0DF7  1803               	skipnc
  6452  0DF8  3E01               	addlw	1
  6453  0DF9  1903               	skipnz
  6454  0DFA  2DFC               	goto	u3743
  6455  0DFB  07B5               	addwf	___flmul@grs+3,f
  6456  0DFC                     u3743:
  6457  0DFC                     l2660:
  6458  0DFC  0824               	movf	___flmul@b,w
  6459  0DFD  00AC               	movwf	??___flmul
  6460  0DFE  082C               	movf	??___flmul,w
  6461  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  6462  0E00  0829               	movf	___flmul@a+1,w
  6463  0E01  160A  158A  24E4  120A  158A  	fcall	__Umul8_16
  6464  0E06  0871               	movf	?__Umul8_16+1,w
  6465  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  6466  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  6467  0E09  00BD               	movwf	___flmul@temp+1
  6468  0E0A  0870               	movf	?__Umul8_16,w
  6469  0E0B  00BC               	movwf	___flmul@temp
  6470  0E0C                     l2662:
  6471  0E0C  083C               	movf	___flmul@temp,w
  6472  0E0D  00AC               	movwf	??___flmul
  6473  0E0E  083D               	movf	___flmul@temp+1,w
  6474  0E0F  00AD               	movwf	??___flmul+1
  6475  0E10  01AE               	clrf	??___flmul+2
  6476  0E11  01AF               	clrf	??___flmul+3
  6477  0E12  082C               	movf	??___flmul,w
  6478  0E13  07B2               	addwf	___flmul@grs,f
  6479  0E14  082D               	movf	??___flmul+1,w
  6480  0E15  1103               	clrz
  6481  0E16  1803               	skipnc
  6482  0E17  3E01               	addlw	1
  6483  0E18  1903               	skipnz
  6484  0E19  2E1B               	goto	u3751
  6485  0E1A  07B3               	addwf	___flmul@grs+1,f
  6486  0E1B                     u3751:
  6487  0E1B  082E               	movf	??___flmul+2,w
  6488  0E1C  1103               	clrz
  6489  0E1D  1803               	skipnc
  6490  0E1E  3E01               	addlw	1
  6491  0E1F  1903               	skipnz
  6492  0E20  2E22               	goto	u3752
  6493  0E21  07B4               	addwf	___flmul@grs+2,f
  6494  0E22                     u3752:
  6495  0E22  082F               	movf	??___flmul+3,w
  6496  0E23  1103               	clrz
  6497  0E24  1803               	skipnc
  6498  0E25  3E01               	addlw	1
  6499  0E26  1903               	skipnz
  6500  0E27  2E29               	goto	u3753
  6501  0E28  07B5               	addwf	___flmul@grs+3,f
  6502  0E29                     u3753:
  6503  0E29                     l2664:
  6504  0E29  3008               	movlw	8
  6505  0E2A  00AC               	movwf	??___flmul
  6506  0E2B                     u3765:
  6507  0E2B  1003               	clrc
  6508  0E2C  0DB2               	rlf	___flmul@grs,f
  6509  0E2D  0DB3               	rlf	___flmul@grs+1,f
  6510  0E2E  0DB4               	rlf	___flmul@grs+2,f
  6511  0E2F  0DB5               	rlf	___flmul@grs+3,f
  6512  0E30  0BAC               	decfsz	??___flmul,f
  6513  0E31  2E2B               	goto	u3765
  6514  0E32  0824               	movf	___flmul@b,w
  6515  0E33  00AC               	movwf	??___flmul
  6516  0E34  082C               	movf	??___flmul,w
  6517  0E35  00F0               	movwf	__Umul8_16@multiplicand
  6518  0E36  0828               	movf	___flmul@a,w
  6519  0E37  160A  158A  24E4  120A  158A  	fcall	__Umul8_16
  6520  0E3C  0871               	movf	?__Umul8_16+1,w
  6521  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  6522  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  6523  0E3F  00BD               	movwf	___flmul@temp+1
  6524  0E40  0870               	movf	?__Umul8_16,w
  6525  0E41  00BC               	movwf	___flmul@temp
  6526  0E42                     l2666:
  6527  0E42  083C               	movf	___flmul@temp,w
  6528  0E43  00AC               	movwf	??___flmul
  6529  0E44  083D               	movf	___flmul@temp+1,w
  6530  0E45  00AD               	movwf	??___flmul+1
  6531  0E46  01AE               	clrf	??___flmul+2
  6532  0E47  01AF               	clrf	??___flmul+3
  6533  0E48  082C               	movf	??___flmul,w
  6534  0E49  07B2               	addwf	___flmul@grs,f
  6535  0E4A  082D               	movf	??___flmul+1,w
  6536  0E4B  1103               	clrz
  6537  0E4C  1803               	skipnc
  6538  0E4D  3E01               	addlw	1
  6539  0E4E  1903               	skipnz
  6540  0E4F  2E51               	goto	u3771
  6541  0E50  07B3               	addwf	___flmul@grs+1,f
  6542  0E51                     u3771:
  6543  0E51  082E               	movf	??___flmul+2,w
  6544  0E52  1103               	clrz
  6545  0E53  1803               	skipnc
  6546  0E54  3E01               	addlw	1
  6547  0E55  1903               	skipnz
  6548  0E56  2E58               	goto	u3772
  6549  0E57  07B4               	addwf	___flmul@grs+2,f
  6550  0E58                     u3772:
  6551  0E58  082F               	movf	??___flmul+3,w
  6552  0E59  1103               	clrz
  6553  0E5A  1803               	skipnc
  6554  0E5B  3E01               	addlw	1
  6555  0E5C  1903               	skipnz
  6556  0E5D  2E5F               	goto	u3773
  6557  0E5E  07B5               	addwf	___flmul@grs+3,f
  6558  0E5F                     u3773:
  6559  0E5F                     l2668:
  6560  0E5F  0825               	movf	___flmul@b+1,w
  6561  0E60  00AC               	movwf	??___flmul
  6562  0E61  082C               	movf	??___flmul,w
  6563  0E62  00F0               	movwf	__Umul8_16@multiplicand
  6564  0E63  082A               	movf	___flmul@a+2,w
  6565  0E64  160A  158A  24E4  120A  158A  	fcall	__Umul8_16
  6566  0E69  0871               	movf	?__Umul8_16+1,w
  6567  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  6568  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  6569  0E6C  00BD               	movwf	___flmul@temp+1
  6570  0E6D  0870               	movf	?__Umul8_16,w
  6571  0E6E  00BC               	movwf	___flmul@temp
  6572  0E6F  083C               	movf	___flmul@temp,w
  6573  0E70  00AC               	movwf	??___flmul
  6574  0E71  083D               	movf	___flmul@temp+1,w
  6575  0E72  00AD               	movwf	??___flmul+1
  6576  0E73  01AE               	clrf	??___flmul+2
  6577  0E74  01AF               	clrf	??___flmul+3
  6578  0E75  082C               	movf	??___flmul,w
  6579  0E76  07B8               	addwf	___flmul@prod,f
  6580  0E77  082D               	movf	??___flmul+1,w
  6581  0E78  1103               	clrz
  6582  0E79  1803               	skipnc
  6583  0E7A  3E01               	addlw	1
  6584  0E7B  1903               	skipnz
  6585  0E7C  2E7E               	goto	u3781
  6586  0E7D  07B9               	addwf	___flmul@prod+1,f
  6587  0E7E                     u3781:
  6588  0E7E  082E               	movf	??___flmul+2,w
  6589  0E7F  1103               	clrz
  6590  0E80  1803               	skipnc
  6591  0E81  3E01               	addlw	1
  6592  0E82  1903               	skipnz
  6593  0E83  2E85               	goto	u3782
  6594  0E84  07BA               	addwf	___flmul@prod+2,f
  6595  0E85                     u3782:
  6596  0E85  082F               	movf	??___flmul+3,w
  6597  0E86  1103               	clrz
  6598  0E87  1803               	skipnc
  6599  0E88  3E01               	addlw	1
  6600  0E89  1903               	skipnz
  6601  0E8A  2E8C               	goto	u3783
  6602  0E8B  07BB               	addwf	___flmul@prod+3,f
  6603  0E8C                     u3783:
  6604  0E8C                     l2670:
  6605  0E8C  0826               	movf	___flmul@b+2,w
  6606  0E8D  00AC               	movwf	??___flmul
  6607  0E8E  082C               	movf	??___flmul,w
  6608  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  6609  0E90  0829               	movf	___flmul@a+1,w
  6610  0E91  160A  158A  24E4  120A  158A  	fcall	__Umul8_16
  6611  0E96  0871               	movf	?__Umul8_16+1,w
  6612  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  6613  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  6614  0E99  00BD               	movwf	___flmul@temp+1
  6615  0E9A  0870               	movf	?__Umul8_16,w
  6616  0E9B  00BC               	movwf	___flmul@temp
  6617  0E9C                     l2672:
  6618  0E9C  083C               	movf	___flmul@temp,w
  6619  0E9D  00AC               	movwf	??___flmul
  6620  0E9E  083D               	movf	___flmul@temp+1,w
  6621  0E9F  00AD               	movwf	??___flmul+1
  6622  0EA0  01AE               	clrf	??___flmul+2
  6623  0EA1  01AF               	clrf	??___flmul+3
  6624  0EA2  082C               	movf	??___flmul,w
  6625  0EA3  07B8               	addwf	___flmul@prod,f
  6626  0EA4  082D               	movf	??___flmul+1,w
  6627  0EA5  1103               	clrz
  6628  0EA6  1803               	skipnc
  6629  0EA7  3E01               	addlw	1
  6630  0EA8  1903               	skipnz
  6631  0EA9  2EAB               	goto	u3791
  6632  0EAA  07B9               	addwf	___flmul@prod+1,f
  6633  0EAB                     u3791:
  6634  0EAB  082E               	movf	??___flmul+2,w
  6635  0EAC  1103               	clrz
  6636  0EAD  1803               	skipnc
  6637  0EAE  3E01               	addlw	1
  6638  0EAF  1903               	skipnz
  6639  0EB0  2EB2               	goto	u3792
  6640  0EB1  07BA               	addwf	___flmul@prod+2,f
  6641  0EB2                     u3792:
  6642  0EB2  082F               	movf	??___flmul+3,w
  6643  0EB3  1103               	clrz
  6644  0EB4  1803               	skipnc
  6645  0EB5  3E01               	addlw	1
  6646  0EB6  1903               	skipnz
  6647  0EB7  2EB9               	goto	u3793
  6648  0EB8  07BB               	addwf	___flmul@prod+3,f
  6649  0EB9                     u3793:
  6650  0EB9  0826               	movf	___flmul@b+2,w
  6651  0EBA  00AC               	movwf	??___flmul
  6652  0EBB  082C               	movf	??___flmul,w
  6653  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  6654  0EBD  082A               	movf	___flmul@a+2,w
  6655  0EBE  160A  158A  24E4  120A  158A  	fcall	__Umul8_16
  6656  0EC3  0871               	movf	?__Umul8_16+1,w
  6657  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  6658  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  6659  0EC6  00BD               	movwf	___flmul@temp+1
  6660  0EC7  0870               	movf	?__Umul8_16,w
  6661  0EC8  00BC               	movwf	___flmul@temp
  6662  0EC9                     l2674:
  6663  0EC9  083C               	movf	___flmul@temp,w
  6664  0ECA  00AC               	movwf	??___flmul
  6665  0ECB  083D               	movf	___flmul@temp+1,w
  6666  0ECC  00AD               	movwf	??___flmul+1
  6667  0ECD  01AE               	clrf	??___flmul+2
  6668  0ECE  01AF               	clrf	??___flmul+3
  6669  0ECF  3008               	movlw	8
  6670  0ED0                     u3805:
  6671  0ED0  1003               	clrc
  6672  0ED1  0DAC               	rlf	??___flmul,f
  6673  0ED2  0DAD               	rlf	??___flmul+1,f
  6674  0ED3  0DAE               	rlf	??___flmul+2,f
  6675  0ED4  0DAF               	rlf	??___flmul+3,f
  6676  0ED5                     u3800:
  6677  0ED5  3EFF               	addlw	-1
  6678  0ED6  1D03               	skipz
  6679  0ED7  2ED0               	goto	u3805
  6680  0ED8  082C               	movf	??___flmul,w
  6681  0ED9  07B8               	addwf	___flmul@prod,f
  6682  0EDA  082D               	movf	??___flmul+1,w
  6683  0EDB  1103               	clrz
  6684  0EDC  1803               	skipnc
  6685  0EDD  3E01               	addlw	1
  6686  0EDE  1903               	skipnz
  6687  0EDF  2EE1               	goto	u3811
  6688  0EE0  07B9               	addwf	___flmul@prod+1,f
  6689  0EE1                     u3811:
  6690  0EE1  082E               	movf	??___flmul+2,w
  6691  0EE2  1103               	clrz
  6692  0EE3  1803               	skipnc
  6693  0EE4  3E01               	addlw	1
  6694  0EE5  1903               	skipnz
  6695  0EE6  2EE8               	goto	u3812
  6696  0EE7  07BA               	addwf	___flmul@prod+2,f
  6697  0EE8                     u3812:
  6698  0EE8  082F               	movf	??___flmul+3,w
  6699  0EE9  1103               	clrz
  6700  0EEA  1803               	skipnc
  6701  0EEB  3E01               	addlw	1
  6702  0EEC  1903               	skipnz
  6703  0EED  2EEF               	goto	u3813
  6704  0EEE  07BB               	addwf	___flmul@prod+3,f
  6705  0EEF                     u3813:
  6706  0EEF                     l2676:
  6707  0EEF  0832               	movf	___flmul@grs,w
  6708  0EF0  00AC               	movwf	??___flmul
  6709  0EF1  0833               	movf	___flmul@grs+1,w
  6710  0EF2  00AD               	movwf	??___flmul+1
  6711  0EF3  0834               	movf	___flmul@grs+2,w
  6712  0EF4  00AE               	movwf	??___flmul+2
  6713  0EF5  0835               	movf	___flmul@grs+3,w
  6714  0EF6  00AF               	movwf	??___flmul+3
  6715  0EF7  3018               	movlw	24
  6716  0EF8                     u3825:
  6717  0EF8  1003               	clrc
  6718  0EF9  0CAF               	rrf	??___flmul+3,f
  6719  0EFA  0CAE               	rrf	??___flmul+2,f
  6720  0EFB  0CAD               	rrf	??___flmul+1,f
  6721  0EFC  0CAC               	rrf	??___flmul,f
  6722  0EFD                     u3820:
  6723  0EFD  3EFF               	addlw	-1
  6724  0EFE  1D03               	skipz
  6725  0EFF  2EF8               	goto	u3825
  6726  0F00  082C               	movf	??___flmul,w
  6727  0F01  07B8               	addwf	___flmul@prod,f
  6728  0F02  082D               	movf	??___flmul+1,w
  6729  0F03  1103               	clrz
  6730  0F04  1803               	skipnc
  6731  0F05  3E01               	addlw	1
  6732  0F06  1903               	skipnz
  6733  0F07  2F09               	goto	u3831
  6734  0F08  07B9               	addwf	___flmul@prod+1,f
  6735  0F09                     u3831:
  6736  0F09  082E               	movf	??___flmul+2,w
  6737  0F0A  1103               	clrz
  6738  0F0B  1803               	skipnc
  6739  0F0C  3E01               	addlw	1
  6740  0F0D  1903               	skipnz
  6741  0F0E  2F10               	goto	u3832
  6742  0F0F  07BA               	addwf	___flmul@prod+2,f
  6743  0F10                     u3832:
  6744  0F10  082F               	movf	??___flmul+3,w
  6745  0F11  1103               	clrz
  6746  0F12  1803               	skipnc
  6747  0F13  3E01               	addlw	1
  6748  0F14  1903               	skipnz
  6749  0F15  2F17               	goto	u3833
  6750  0F16  07BB               	addwf	___flmul@prod+3,f
  6751  0F17                     u3833:
  6752  0F17                     l2678:
  6753  0F17  3008               	movlw	8
  6754  0F18  00AC               	movwf	??___flmul
  6755  0F19                     u3845:
  6756  0F19  1003               	clrc
  6757  0F1A  0DB2               	rlf	___flmul@grs,f
  6758  0F1B  0DB3               	rlf	___flmul@grs+1,f
  6759  0F1C  0DB4               	rlf	___flmul@grs+2,f
  6760  0F1D  0DB5               	rlf	___flmul@grs+3,f
  6761  0F1E  0BAC               	decfsz	??___flmul,f
  6762  0F1F  2F19               	goto	u3845
  6763  0F20                     l2680:
  6764  0F20  0837               	movf	___flmul@bexp,w
  6765  0F21  0736               	addwf	___flmul@aexp,w
  6766  0F22  00AC               	movwf	??___flmul
  6767  0F23  01AD               	clrf	??___flmul+1
  6768  0F24  0DAD               	rlf	??___flmul+1,f
  6769  0F25  082C               	movf	??___flmul,w
  6770  0F26  3E82               	addlw	130
  6771  0F27  00BC               	movwf	___flmul@temp
  6772  0F28  082D               	movf	??___flmul+1,w
  6773  0F29  1803               	skipnc
  6774  0F2A  3E01               	addlw	1
  6775  0F2B  3EFF               	addlw	255
  6776  0F2C  00BD               	movwf	___flmul@temp+1
  6777  0F2D  2F4B               	goto	l2692
  6778  0F2E                     l2682:
  6779  0F2E  3001               	movlw	1
  6780  0F2F  00AC               	movwf	??___flmul
  6781  0F30                     u3855:
  6782  0F30  1003               	clrc
  6783  0F31  0DB8               	rlf	___flmul@prod,f
  6784  0F32  0DB9               	rlf	___flmul@prod+1,f
  6785  0F33  0DBA               	rlf	___flmul@prod+2,f
  6786  0F34  0DBB               	rlf	___flmul@prod+3,f
  6787  0F35  0BAC               	decfsz	??___flmul,f
  6788  0F36  2F30               	goto	u3855
  6789  0F37                     l2684:
  6790  0F37  1FB5               	btfss	___flmul@grs+3,7
  6791  0F38  2F3A               	goto	u3861
  6792  0F39  2F3B               	goto	u3860
  6793  0F3A                     u3861:
  6794  0F3A  2F3C               	goto	l2688
  6795  0F3B                     u3860:
  6796  0F3B                     l2686:
  6797  0F3B  1438               	bsf	___flmul@prod,0
  6798  0F3C                     l2688:
  6799  0F3C  3001               	movlw	1
  6800  0F3D  00AC               	movwf	??___flmul
  6801  0F3E                     u3875:
  6802  0F3E  1003               	clrc
  6803  0F3F  0DB2               	rlf	___flmul@grs,f
  6804  0F40  0DB3               	rlf	___flmul@grs+1,f
  6805  0F41  0DB4               	rlf	___flmul@grs+2,f
  6806  0F42  0DB5               	rlf	___flmul@grs+3,f
  6807  0F43  0BAC               	decfsz	??___flmul,f
  6808  0F44  2F3E               	goto	u3875
  6809  0F45                     l2690:
  6810  0F45  30FF               	movlw	255
  6811  0F46  07BC               	addwf	___flmul@temp,f
  6812  0F47  1803               	skipnc
  6813  0F48  0ABD               	incf	___flmul@temp+1,f
  6814  0F49  30FF               	movlw	255
  6815  0F4A  07BD               	addwf	___flmul@temp+1,f
  6816  0F4B                     l2692:
  6817  0F4B  1FBA               	btfss	___flmul@prod+2,7
  6818  0F4C  2F4E               	goto	u3881
  6819  0F4D  2F4F               	goto	u3880
  6820  0F4E                     u3881:
  6821  0F4E  2F2E               	goto	l2682
  6822  0F4F                     u3880:
  6823  0F4F                     l2694:
  6824  0F4F  01B6               	clrf	___flmul@aexp
  6825  0F50                     l2696:
  6826  0F50  1FB5               	btfss	___flmul@grs+3,7
  6827  0F51  2F53               	goto	u3891
  6828  0F52  2F54               	goto	u3890
  6829  0F53                     u3891:
  6830  0F53  2F70               	goto	l2704
  6831  0F54                     u3890:
  6832  0F54                     l2698:
  6833  0F54  30FF               	movlw	255
  6834  0F55  0532               	andwf	___flmul@grs,w
  6835  0F56  00AC               	movwf	??___flmul
  6836  0F57  30FF               	movlw	255
  6837  0F58  0533               	andwf	___flmul@grs+1,w
  6838  0F59  00AD               	movwf	??___flmul+1
  6839  0F5A  30FF               	movlw	255
  6840  0F5B  0534               	andwf	___flmul@grs+2,w
  6841  0F5C  00AE               	movwf	??___flmul+2
  6842  0F5D  307F               	movlw	127
  6843  0F5E  0535               	andwf	___flmul@grs+3,w
  6844  0F5F  00AF               	movwf	??___flmul+3
  6845  0F60  082F               	movf	??___flmul+3,w
  6846  0F61  042E               	iorwf	??___flmul+2,w
  6847  0F62  042D               	iorwf	??___flmul+1,w
  6848  0F63  042C               	iorwf	??___flmul,w
  6849  0F64  1903               	skipnz
  6850  0F65  2F67               	goto	u3901
  6851  0F66  2F68               	goto	u3900
  6852  0F67                     u3901:
  6853  0F67  2F6B               	goto	l770
  6854  0F68                     u3900:
  6855  0F68                     l2700:
  6856  0F68  01B6               	clrf	___flmul@aexp
  6857  0F69  0AB6               	incf	___flmul@aexp,f
  6858  0F6A  2F70               	goto	l2704
  6859  0F6B                     l770:
  6860  0F6B  1C38               	btfss	___flmul@prod,0
  6861  0F6C  2F6E               	goto	u3911
  6862  0F6D  2F6F               	goto	u3910
  6863  0F6E                     u3911:
  6864  0F6E  2F70               	goto	l2704
  6865  0F6F                     u3910:
  6866  0F6F  2F68               	goto	l2700
  6867  0F70                     l2704:
  6868  0F70  0836               	movf	___flmul@aexp,w
  6869  0F71  1903               	btfsc	3,2
  6870  0F72  2F74               	goto	u3921
  6871  0F73  2F75               	goto	u3920
  6872  0F74                     u3921:
  6873  0F74  2FA6               	goto	l2714
  6874  0F75                     u3920:
  6875  0F75                     l2706:
  6876  0F75  3001               	movlw	1
  6877  0F76  07B8               	addwf	___flmul@prod,f
  6878  0F77  3000               	movlw	0
  6879  0F78  1803               	skipnc
  6880  0F79  3001               	movlw	1
  6881  0F7A  07B9               	addwf	___flmul@prod+1,f
  6882  0F7B  3000               	movlw	0
  6883  0F7C  1803               	skipnc
  6884  0F7D  3001               	movlw	1
  6885  0F7E  07BA               	addwf	___flmul@prod+2,f
  6886  0F7F  3000               	movlw	0
  6887  0F80  1803               	skipnc
  6888  0F81  3001               	movlw	1
  6889  0F82  07BB               	addwf	___flmul@prod+3,f
  6890  0F83                     l2708:
  6891  0F83  1C3B               	btfss	___flmul@prod+3,0
  6892  0F84  2F86               	goto	u3931
  6893  0F85  2F87               	goto	u3930
  6894  0F86                     u3931:
  6895  0F86  2FA6               	goto	l2714
  6896  0F87                     u3930:
  6897  0F87                     l2710:
  6898  0F87  0838               	movf	___flmul@prod,w
  6899  0F88  00AC               	movwf	??___flmul
  6900  0F89  0839               	movf	___flmul@prod+1,w
  6901  0F8A  00AD               	movwf	??___flmul+1
  6902  0F8B  083A               	movf	___flmul@prod+2,w
  6903  0F8C  00AE               	movwf	??___flmul+2
  6904  0F8D  083B               	movf	___flmul@prod+3,w
  6905  0F8E  00AF               	movwf	??___flmul+3
  6906  0F8F  3001               	movlw	1
  6907  0F90  00B0               	movwf	??___flmul+4
  6908  0F91                     u3945:
  6909  0F91  0D2F               	rlf	??___flmul+3,w
  6910  0F92  0CAF               	rrf	??___flmul+3,f
  6911  0F93  0CAE               	rrf	??___flmul+2,f
  6912  0F94  0CAD               	rrf	??___flmul+1,f
  6913  0F95  0CAC               	rrf	??___flmul,f
  6914  0F96                     u3940:
  6915  0F96  0BB0               	decfsz	??___flmul+4,f
  6916  0F97  2F91               	goto	u3945
  6917  0F98  082F               	movf	??___flmul+3,w
  6918  0F99  00BB               	movwf	___flmul@prod+3
  6919  0F9A  082E               	movf	??___flmul+2,w
  6920  0F9B  00BA               	movwf	___flmul@prod+2
  6921  0F9C  082D               	movf	??___flmul+1,w
  6922  0F9D  00B9               	movwf	___flmul@prod+1
  6923  0F9E  082C               	movf	??___flmul,w
  6924  0F9F  00B8               	movwf	___flmul@prod
  6925  0FA0                     l2712:
  6926  0FA0  3001               	movlw	1
  6927  0FA1  07BC               	addwf	___flmul@temp,f
  6928  0FA2  1803               	skipnc
  6929  0FA3  0ABD               	incf	___flmul@temp+1,f
  6930  0FA4  3000               	movlw	0
  6931  0FA5  07BD               	addwf	___flmul@temp+1,f
  6932  0FA6                     l2714:
  6933  0FA6  083D               	movf	___flmul@temp+1,w
  6934  0FA7  3A80               	xorlw	128
  6935  0FA8  00FF               	movwf	btemp+1
  6936  0FA9  3080               	movlw	128
  6937  0FAA  027F               	subwf	btemp+1,w
  6938  0FAB  1D03               	skipz
  6939  0FAC  2FAF               	goto	u3955
  6940  0FAD  30FF               	movlw	255
  6941  0FAE  023C               	subwf	___flmul@temp,w
  6942  0FAF                     u3955:
  6943  0FAF  1C03               	skipc
  6944  0FB0  2FB2               	goto	u3951
  6945  0FB1  2FB3               	goto	u3950
  6946  0FB2                     u3951:
  6947  0FB2  2FBE               	goto	l2718
  6948  0FB3                     u3950:
  6949  0FB3                     l2716:
  6950  0FB3  307F               	movlw	127
  6951  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  6952  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  6953  0FB6  00BB               	movwf	___flmul@prod+3
  6954  0FB7  3080               	movlw	128
  6955  0FB8  00BA               	movwf	___flmul@prod+2
  6956  0FB9  3000               	movlw	0
  6957  0FBA  00B9               	movwf	___flmul@prod+1
  6958  0FBB  3000               	movlw	0
  6959  0FBC  00B8               	movwf	___flmul@prod
  6960  0FBD  2FF3               	goto	l776
  6961  0FBE                     l2718:
  6962  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  6963  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  6964  0FC0  083D               	movf	___flmul@temp+1,w
  6965  0FC1  3A80               	xorlw	128
  6966  0FC2  00FF               	movwf	btemp+1
  6967  0FC3  3080               	movlw	128
  6968  0FC4  027F               	subwf	btemp+1,w
  6969  0FC5  1D03               	skipz
  6970  0FC6  2FC9               	goto	u3965
  6971  0FC7  3001               	movlw	1
  6972  0FC8  023C               	subwf	___flmul@temp,w
  6973  0FC9                     u3965:
  6974  0FC9  1803               	skipnc
  6975  0FCA  2FCC               	goto	u3961
  6976  0FCB  2FCD               	goto	u3960
  6977  0FCC                     u3961:
  6978  0FCC  2FD9               	goto	l2724
  6979  0FCD                     u3960:
  6980  0FCD                     l2720:
  6981  0FCD  3000               	movlw	0
  6982  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  6983  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  6984  0FD0  00BB               	movwf	___flmul@prod+3
  6985  0FD1  3000               	movlw	0
  6986  0FD2  00BA               	movwf	___flmul@prod+2
  6987  0FD3  3000               	movlw	0
  6988  0FD4  00B9               	movwf	___flmul@prod+1
  6989  0FD5  3000               	movlw	0
  6990  0FD6  00B8               	movwf	___flmul@prod
  6991  0FD7                     l2722:
  6992  0FD7  01B1               	clrf	___flmul@sign
  6993  0FD8  2FF3               	goto	l776
  6994  0FD9                     l2724:
  6995  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  6996  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  6997  0FDB  083C               	movf	___flmul@temp,w
  6998  0FDC  00AC               	movwf	??___flmul
  6999  0FDD  082C               	movf	??___flmul,w
  7000  0FDE  00B7               	movwf	___flmul@bexp
  7001  0FDF  30FF               	movlw	255
  7002  0FE0  05B8               	andwf	___flmul@prod,f
  7003  0FE1  30FF               	movlw	255
  7004  0FE2  05B9               	andwf	___flmul@prod+1,f
  7005  0FE3  307F               	movlw	127
  7006  0FE4  05BA               	andwf	___flmul@prod+2,f
  7007  0FE5  3000               	movlw	0
  7008  0FE6  05BB               	andwf	___flmul@prod+3,f
  7009  0FE7                     l2726:
  7010  0FE7  1C37               	btfss	___flmul@bexp,0
  7011  0FE8  2FEA               	goto	u3971
  7012  0FE9  2FEB               	goto	u3970
  7013  0FEA                     u3971:
  7014  0FEA  2FEC               	goto	l2730
  7015  0FEB                     u3970:
  7016  0FEB                     l2728:
  7017  0FEB  17BA               	bsf	___flmul@prod+2,7
  7018  0FEC                     l2730:
  7019  0FEC  0837               	movf	___flmul@bexp,w
  7020  0FED  00AC               	movwf	??___flmul
  7021  0FEE  1003               	clrc
  7022  0FEF  0C2C               	rrf	??___flmul,w
  7023  0FF0  00AD               	movwf	??___flmul+1
  7024  0FF1  082D               	movf	??___flmul+1,w
  7025  0FF2  00BB               	movwf	___flmul@prod+3
  7026  0FF3                     l776:
  7027  0FF3  0831               	movf	___flmul@sign,w
  7028  0FF4  00AC               	movwf	??___flmul
  7029  0FF5  082C               	movf	??___flmul,w
  7030  0FF6  04BB               	iorwf	___flmul@prod+3,f
  7031  0FF7                     l2732:
  7032  0FF7  083B               	movf	___flmul@prod+3,w
  7033  0FF8  00A7               	movwf	?___flmul+3
  7034  0FF9  083A               	movf	___flmul@prod+2,w
  7035  0FFA  00A6               	movwf	?___flmul+2
  7036  0FFB  0839               	movf	___flmul@prod+1,w
  7037  0FFC  00A5               	movwf	?___flmul+1
  7038  0FFD  0838               	movf	___flmul@prod,w
  7039  0FFE  00A4               	movwf	?___flmul
  7040  0FFF                     l764:
  7041  0FFF  0008               	return
  7042  1000                     __end_of___flmul:
  7043                           
  7044                           	psect	text11
  7045  1CE4                     __ptext11:	
  7046 ;; *************** function __Umul8_16 *****************
  7047 ;; Defined at:
  7048 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;  multiplier      1    wreg     unsigned char 
  7051 ;;  multiplicand    1    0[COMMON] unsigned char 
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;  multiplier      1    8[COMMON] unsigned char 
  7054 ;;  word_mpld       2    6[COMMON] unsigned int 
  7055 ;;  product         2    4[COMMON] unsigned int 
  7056 ;; Return value:  Size  Location     Type
  7057 ;;                  2    0[COMMON] unsigned int 
  7058 ;; Registers used:
  7059 ;;		wreg, status,2, status,0
  7060 ;; Tracked objects:
  7061 ;;		On entry : 0/0
  7062 ;;		On exit  : 0/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7065 ;;      Params:         2       0       0       0       0
  7066 ;;      Locals:         5       0       0       0       0
  7067 ;;      Temps:          2       0       0       0       0
  7068 ;;      Totals:         9       0       0       0       0
  7069 ;;Total ram usage:        9 bytes
  7070 ;; Hardware stack levels used:    1
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		___flmul
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           
  7079                           ;psect for function __Umul8_16
  7080  1CE4                     __Umul8_16:
  7081                           
  7082                           ;incstack = 0
  7083                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7084                           ;__Umul8_16@multiplier stored from wreg
  7085  1CE4  00F8               	movwf	__Umul8_16@multiplier
  7086  1CE5                     l2258:
  7087  1CE5  01F4               	clrf	__Umul8_16@product
  7088  1CE6  01F5               	clrf	__Umul8_16@product+1
  7089  1CE7                     l2260:
  7090  1CE7  0870               	movf	__Umul8_16@multiplicand,w
  7091  1CE8  00F2               	movwf	??__Umul8_16
  7092  1CE9  01F3               	clrf	??__Umul8_16+1
  7093  1CEA  0872               	movf	??__Umul8_16,w
  7094  1CEB  00F6               	movwf	__Umul8_16@word_mpld
  7095  1CEC  0873               	movf	??__Umul8_16+1,w
  7096  1CED  00F7               	movwf	__Umul8_16@word_mpld+1
  7097  1CEE                     l2262:
  7098  1CEE  1C78               	btfss	__Umul8_16@multiplier,0
  7099  1CEF  2CF1               	goto	u2801
  7100  1CF0  2CF2               	goto	u2800
  7101  1CF1                     u2801:
  7102  1CF1  2CF8               	goto	l783
  7103  1CF2                     u2800:
  7104  1CF2                     l2264:
  7105  1CF2  0876               	movf	__Umul8_16@word_mpld,w
  7106  1CF3  07F4               	addwf	__Umul8_16@product,f
  7107  1CF4  1803               	skipnc
  7108  1CF5  0AF5               	incf	__Umul8_16@product+1,f
  7109  1CF6  0877               	movf	__Umul8_16@word_mpld+1,w
  7110  1CF7  07F5               	addwf	__Umul8_16@product+1,f
  7111  1CF8                     l783:
  7112  1CF8  3001               	movlw	1
  7113  1CF9                     u2815:
  7114  1CF9  1003               	clrc
  7115  1CFA  0DF6               	rlf	__Umul8_16@word_mpld,f
  7116  1CFB  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7117  1CFC  3EFF               	addlw	-1
  7118  1CFD  1D03               	skipz
  7119  1CFE  2CF9               	goto	u2815
  7120  1CFF  1003               	clrc
  7121  1D00  0CF8               	rrf	__Umul8_16@multiplier,f
  7122  1D01                     l2266:
  7123  1D01  0878               	movf	__Umul8_16@multiplier,w
  7124  1D02  1D03               	btfss	3,2
  7125  1D03  2D05               	goto	u2821
  7126  1D04  2D06               	goto	u2820
  7127  1D05                     u2821:
  7128  1D05  2CEE               	goto	l2262
  7129  1D06                     u2820:
  7130  1D06                     l2268:
  7131  1D06  0875               	movf	__Umul8_16@product+1,w
  7132  1D07  00F1               	movwf	?__Umul8_16+1
  7133  1D08  0874               	movf	__Umul8_16@product,w
  7134  1D09  00F0               	movwf	?__Umul8_16
  7135  1D0A                     l785:
  7136  1D0A  0008               	return
  7137  1D0B                     __end_of__Umul8_16:
  7138                           
  7139                           	psect	text12
  7140  10AC                     __ptext12:	
  7141 ;; *************** function __tdiv_to_l_ *****************
  7142 ;; Defined at:
  7143 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;  f1              4    0[COMMON] float 
  7146 ;;  f2              4    4[COMMON] float 
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;  quot            4    0[BANK0 ] unsigned long 
  7149 ;;  exp1            1    5[BANK0 ] unsigned char 
  7150 ;;  cntr            1    4[BANK0 ] unsigned char 
  7151 ;; Return value:  Size  Location     Type
  7152 ;;                  4    0[COMMON] unsigned long 
  7153 ;; Registers used:
  7154 ;;		wreg, status,2, status,0
  7155 ;; Tracked objects:
  7156 ;;		On entry : 0/0
  7157 ;;		On exit  : 0/0
  7158 ;;		Unchanged: 0/0
  7159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7160 ;;      Params:         8       0       0       0       0
  7161 ;;      Locals:         0       6       0       0       0
  7162 ;;      Temps:          4       0       0       0       0
  7163 ;;      Totals:        12       6       0       0       0
  7164 ;;Total ram usage:       18 bytes
  7165 ;; Hardware stack levels used:    1
  7166 ;; This function calls:
  7167 ;;		Nothing
  7168 ;; This function is called by:
  7169 ;;		_sprintf
  7170 ;; This function uses a non-reentrant model
  7171 ;;
  7172                           
  7173                           
  7174                           ;psect for function __tdiv_to_l_
  7175  10AC                     __tdiv_to_l_:
  7176  10AC                     l2808:	
  7177                           ;incstack = 0
  7178                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7179                           
  7180  10AC  0870               	movf	__tdiv_to_l_@f1,w
  7181  10AD  00F8               	movwf	??__tdiv_to_l_
  7182  10AE  0871               	movf	__tdiv_to_l_@f1+1,w
  7183  10AF  00F9               	movwf	??__tdiv_to_l_+1
  7184  10B0  0872               	movf	__tdiv_to_l_@f1+2,w
  7185  10B1  00FA               	movwf	??__tdiv_to_l_+2
  7186  10B2  1003               	clrc
  7187  10B3  0D79               	rlf	??__tdiv_to_l_+1,w
  7188  10B4  0D7A               	rlf	??__tdiv_to_l_+2,w
  7189  10B5  00FB               	movwf	??__tdiv_to_l_+3
  7190  10B6  087B               	movf	??__tdiv_to_l_+3,w
  7191  10B7  1283               	bcf	3,5	;RP0=0, select bank0
  7192  10B8  1303               	bcf	3,6	;RP1=0, select bank0
  7193  10B9  00A5               	movwf	__tdiv_to_l_@exp1
  7194  10BA  0825               	movf	__tdiv_to_l_@exp1,w
  7195  10BB  1D03               	btfss	3,2
  7196  10BC  28BE               	goto	u4261
  7197  10BD  28BF               	goto	u4260
  7198  10BE                     u4261:
  7199  10BE  28C8               	goto	l2814
  7200  10BF                     u4260:
  7201  10BF                     l2810:
  7202  10BF  3000               	movlw	0
  7203  10C0  00F3               	movwf	?__tdiv_to_l_+3
  7204  10C1  3000               	movlw	0
  7205  10C2  00F2               	movwf	?__tdiv_to_l_+2
  7206  10C3  3000               	movlw	0
  7207  10C4  00F1               	movwf	?__tdiv_to_l_+1
  7208  10C5  3000               	movlw	0
  7209  10C6  00F0               	movwf	?__tdiv_to_l_
  7210  10C7  2968               	goto	l558
  7211  10C8                     l2814:
  7212  10C8  0874               	movf	__tdiv_to_l_@f2,w
  7213  10C9  00F8               	movwf	??__tdiv_to_l_
  7214  10CA  0875               	movf	__tdiv_to_l_@f2+1,w
  7215  10CB  00F9               	movwf	??__tdiv_to_l_+1
  7216  10CC  0876               	movf	__tdiv_to_l_@f2+2,w
  7217  10CD  00FA               	movwf	??__tdiv_to_l_+2
  7218  10CE  1003               	clrc
  7219  10CF  0D79               	rlf	??__tdiv_to_l_+1,w
  7220  10D0  0D7A               	rlf	??__tdiv_to_l_+2,w
  7221  10D1  00FB               	movwf	??__tdiv_to_l_+3
  7222  10D2  087B               	movf	??__tdiv_to_l_+3,w
  7223  10D3  00A4               	movwf	__tdiv_to_l_@cntr
  7224  10D4  0824               	movf	__tdiv_to_l_@cntr,w
  7225  10D5  1D03               	btfss	3,2
  7226  10D6  28D8               	goto	u4271
  7227  10D7  28D9               	goto	u4270
  7228  10D8                     u4271:
  7229  10D8  28DA               	goto	l559
  7230  10D9                     u4270:
  7231  10D9  28BF               	goto	l2810
  7232  10DA                     l559:
  7233  10DA  17F1               	bsf	__tdiv_to_l_@f1+1,7
  7234  10DB                     l2820:
  7235  10DB  30FF               	movlw	255
  7236  10DC  05F0               	andwf	__tdiv_to_l_@f1,f
  7237  10DD  30FF               	movlw	255
  7238  10DE  05F1               	andwf	__tdiv_to_l_@f1+1,f
  7239  10DF  3000               	movlw	0
  7240  10E0  05F2               	andwf	__tdiv_to_l_@f1+2,f
  7241  10E1                     l2822:
  7242  10E1  17F5               	bsf	__tdiv_to_l_@f2+1,7
  7243  10E2  30FF               	movlw	255
  7244  10E3  05F4               	andwf	__tdiv_to_l_@f2,f
  7245  10E4  30FF               	movlw	255
  7246  10E5  05F5               	andwf	__tdiv_to_l_@f2+1,f
  7247  10E6  3000               	movlw	0
  7248  10E7  05F6               	andwf	__tdiv_to_l_@f2+2,f
  7249  10E8  3000               	movlw	0
  7250  10E9  00A3               	movwf	__tdiv_to_l_@quot+3
  7251  10EA  3000               	movlw	0
  7252  10EB  00A2               	movwf	__tdiv_to_l_@quot+2
  7253  10EC  3000               	movlw	0
  7254  10ED  00A1               	movwf	__tdiv_to_l_@quot+1
  7255  10EE  3000               	movlw	0
  7256  10EF  00A0               	movwf	__tdiv_to_l_@quot
  7257  10F0                     l2824:
  7258  10F0  307F               	movlw	127
  7259  10F1  02A5               	subwf	__tdiv_to_l_@exp1,f
  7260  10F2                     l2826:
  7261  10F2  3098               	movlw	152
  7262  10F3  0724               	addwf	__tdiv_to_l_@cntr,w
  7263  10F4  00F8               	movwf	??__tdiv_to_l_
  7264  10F5  0878               	movf	??__tdiv_to_l_,w
  7265  10F6  02A5               	subwf	__tdiv_to_l_@exp1,f
  7266  10F7  3018               	movlw	24
  7267  10F8  00F8               	movwf	??__tdiv_to_l_
  7268  10F9  0878               	movf	??__tdiv_to_l_,w
  7269  10FA  00A4               	movwf	__tdiv_to_l_@cntr
  7270  10FB                     l2828:
  7271  10FB  3001               	movlw	1
  7272  10FC  00F8               	movwf	??__tdiv_to_l_
  7273  10FD                     u4285:
  7274  10FD  1003               	clrc
  7275  10FE  0DA0               	rlf	__tdiv_to_l_@quot,f
  7276  10FF  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7277  1100  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7278  1101  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7279  1102  0BF8               	decfsz	??__tdiv_to_l_,f
  7280  1103  28FD               	goto	u4285
  7281  1104                     l2830:
  7282  1104  0876               	movf	__tdiv_to_l_@f2+2,w
  7283  1105  0272               	subwf	__tdiv_to_l_@f1+2,w
  7284  1106  1D03               	skipz
  7285  1107  290E               	goto	u4295
  7286  1108  0875               	movf	__tdiv_to_l_@f2+1,w
  7287  1109  0271               	subwf	__tdiv_to_l_@f1+1,w
  7288  110A  1D03               	skipz
  7289  110B  290E               	goto	u4295
  7290  110C  0874               	movf	__tdiv_to_l_@f2,w
  7291  110D  0270               	subwf	__tdiv_to_l_@f1,w
  7292  110E                     u4295:
  7293  110E  1C03               	skipc
  7294  110F  2911               	goto	u4291
  7295  1110  2912               	goto	u4290
  7296  1111                     u4291:
  7297  1111  291D               	goto	l2836
  7298  1112                     u4290:
  7299  1112                     l2832:
  7300  1112  0874               	movf	__tdiv_to_l_@f2,w
  7301  1113  02F0               	subwf	__tdiv_to_l_@f1,f
  7302  1114  0875               	movf	__tdiv_to_l_@f2+1,w
  7303  1115  1C03               	skipc
  7304  1116  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  7305  1117  02F1               	subwf	__tdiv_to_l_@f1+1,f
  7306  1118  0876               	movf	__tdiv_to_l_@f2+2,w
  7307  1119  1C03               	skipc
  7308  111A  0A76               	incf	__tdiv_to_l_@f2+2,w
  7309  111B  02F2               	subwf	__tdiv_to_l_@f1+2,f
  7310  111C                     l2834:
  7311  111C  1420               	bsf	__tdiv_to_l_@quot,0
  7312  111D                     l2836:
  7313  111D  3001               	movlw	1
  7314  111E                     u4305:
  7315  111E  1003               	clrc
  7316  111F  0DF0               	rlf	__tdiv_to_l_@f1,f
  7317  1120  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  7318  1121  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  7319  1122  3EFF               	addlw	-1
  7320  1123  1D03               	skipz
  7321  1124  291E               	goto	u4305
  7322  1125                     l2838:
  7323  1125  3001               	movlw	1
  7324  1126  02A4               	subwf	__tdiv_to_l_@cntr,f
  7325  1127  1D03               	btfss	3,2
  7326  1128  292A               	goto	u4311
  7327  1129  292B               	goto	u4310
  7328  112A                     u4311:
  7329  112A  28FB               	goto	l2828
  7330  112B                     u4310:
  7331  112B                     l562:
  7332  112B  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7333  112C  292E               	goto	u4321
  7334  112D  292F               	goto	u4320
  7335  112E                     u4321:
  7336  112E  2949               	goto	l2848
  7337  112F                     u4320:
  7338  112F                     l2840:
  7339  112F  0825               	movf	__tdiv_to_l_@exp1,w
  7340  1130  3A80               	xorlw	128
  7341  1131  3E97               	addlw	151
  7342  1132  1803               	skipnc
  7343  1133  2935               	goto	u4331
  7344  1134  2936               	goto	u4330
  7345  1135                     u4331:
  7346  1135  2937               	goto	l2846
  7347  1136                     u4330:
  7348  1136  28BF               	goto	l2810
  7349  1137                     l2846:
  7350  1137  3001               	movlw	1
  7351  1138                     u4345:
  7352  1138  1003               	clrc
  7353  1139  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  7354  113A  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7355  113B  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7356  113C  0CA0               	rrf	__tdiv_to_l_@quot,f
  7357  113D  3EFF               	addlw	-1
  7358  113E  1D03               	skipz
  7359  113F  2938               	goto	u4345
  7360  1140  3001               	movlw	1
  7361  1141  00F8               	movwf	??__tdiv_to_l_
  7362  1142  0878               	movf	??__tdiv_to_l_,w
  7363  1143  07A5               	addwf	__tdiv_to_l_@exp1,f
  7364  1144  1D03               	btfss	3,2
  7365  1145  2947               	goto	u4351
  7366  1146  2948               	goto	u4350
  7367  1147                     u4351:
  7368  1147  2937               	goto	l2846
  7369  1148                     u4350:
  7370  1148  2960               	goto	l2856
  7371  1149                     l2848:
  7372  1149  3018               	movlw	24
  7373  114A  0225               	subwf	__tdiv_to_l_@exp1,w
  7374  114B  1C03               	skipc
  7375  114C  294E               	goto	u4361
  7376  114D  294F               	goto	u4360
  7377  114E                     u4361:
  7378  114E  295B               	goto	l569
  7379  114F                     u4360:
  7380  114F  28BF               	goto	l2810
  7381  1150                     l2854:
  7382  1150  3001               	movlw	1
  7383  1151  00F8               	movwf	??__tdiv_to_l_
  7384  1152                     u4375:
  7385  1152  1003               	clrc
  7386  1153  0DA0               	rlf	__tdiv_to_l_@quot,f
  7387  1154  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7388  1155  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7389  1156  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7390  1157  0BF8               	decfsz	??__tdiv_to_l_,f
  7391  1158  2952               	goto	u4375
  7392  1159  3001               	movlw	1
  7393  115A  02A5               	subwf	__tdiv_to_l_@exp1,f
  7394  115B                     l569:
  7395  115B  0825               	movf	__tdiv_to_l_@exp1,w
  7396  115C  1D03               	btfss	3,2
  7397  115D  295F               	goto	u4381
  7398  115E  2960               	goto	u4380
  7399  115F                     u4381:
  7400  115F  2950               	goto	l2854
  7401  1160                     u4380:
  7402  1160                     l2856:
  7403  1160  0823               	movf	__tdiv_to_l_@quot+3,w
  7404  1161  00F3               	movwf	?__tdiv_to_l_+3
  7405  1162  0822               	movf	__tdiv_to_l_@quot+2,w
  7406  1163  00F2               	movwf	?__tdiv_to_l_+2
  7407  1164  0821               	movf	__tdiv_to_l_@quot+1,w
  7408  1165  00F1               	movwf	?__tdiv_to_l_+1
  7409  1166  0820               	movf	__tdiv_to_l_@quot,w
  7410  1167  00F0               	movwf	?__tdiv_to_l_
  7411  1168                     l558:
  7412  1168  0008               	return
  7413  1169                     __end_of__tdiv_to_l_:
  7414                           
  7415                           	psect	text13
  7416  0882                     __ptext13:	
  7417 ;; *************** function __div_to_l_ *****************
  7418 ;; Defined at:
  7419 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  7420 ;; Parameters:    Size  Location     Type
  7421 ;;  f1              4    0[COMMON] unsigned long 
  7422 ;;  f2              4    4[COMMON] unsigned long 
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;  quot            4    0[BANK0 ] unsigned long 
  7425 ;;  exp1            1    5[BANK0 ] unsigned char 
  7426 ;;  cntr            1    4[BANK0 ] unsigned char 
  7427 ;; Return value:  Size  Location     Type
  7428 ;;                  4    0[COMMON] unsigned long 
  7429 ;; Registers used:
  7430 ;;		wreg, status,2, status,0
  7431 ;; Tracked objects:
  7432 ;;		On entry : 0/0
  7433 ;;		On exit  : 0/0
  7434 ;;		Unchanged: 0/0
  7435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7436 ;;      Params:         8       0       0       0       0
  7437 ;;      Locals:         0       6       0       0       0
  7438 ;;      Temps:          1       0       0       0       0
  7439 ;;      Totals:         9       6       0       0       0
  7440 ;;Total ram usage:       15 bytes
  7441 ;; Hardware stack levels used:    1
  7442 ;; This function calls:
  7443 ;;		Nothing
  7444 ;; This function is called by:
  7445 ;;		_sprintf
  7446 ;; This function uses a non-reentrant model
  7447 ;;
  7448                           
  7449                           
  7450                           ;psect for function __div_to_l_
  7451  0882                     __div_to_l_:
  7452  0882                     l2860:	
  7453                           ;incstack = 0
  7454                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7455                           
  7456  0882  1003               	clrc
  7457  0883  0D72               	rlf	__div_to_l_@f1+2,w
  7458  0884  0D73               	rlf	__div_to_l_@f1+3,w
  7459  0885  00F8               	movwf	??__div_to_l_
  7460  0886  0878               	movf	??__div_to_l_,w
  7461  0887  1283               	bcf	3,5	;RP0=0, select bank0
  7462  0888  1303               	bcf	3,6	;RP1=0, select bank0
  7463  0889  00A5               	movwf	__div_to_l_@exp1
  7464  088A  0825               	movf	__div_to_l_@exp1,w
  7465  088B  1D03               	btfss	3,2
  7466  088C  288E               	goto	u4391
  7467  088D  288F               	goto	u4390
  7468  088E                     u4391:
  7469  088E  2898               	goto	l2866
  7470  088F                     u4390:
  7471  088F                     l2862:
  7472  088F  3000               	movlw	0
  7473  0890  00F3               	movwf	?__div_to_l_+3
  7474  0891  3000               	movlw	0
  7475  0892  00F2               	movwf	?__div_to_l_+2
  7476  0893  3000               	movlw	0
  7477  0894  00F1               	movwf	?__div_to_l_+1
  7478  0895  3000               	movlw	0
  7479  0896  00F0               	movwf	?__div_to_l_
  7480  0897  293F               	goto	l511
  7481  0898                     l2866:
  7482  0898  1003               	clrc
  7483  0899  0D76               	rlf	__div_to_l_@f2+2,w
  7484  089A  0D77               	rlf	__div_to_l_@f2+3,w
  7485  089B  00F8               	movwf	??__div_to_l_
  7486  089C  0878               	movf	??__div_to_l_,w
  7487  089D  00A4               	movwf	__div_to_l_@cntr
  7488  089E  0824               	movf	__div_to_l_@cntr,w
  7489  089F  1D03               	btfss	3,2
  7490  08A0  28A2               	goto	u4401
  7491  08A1  28A3               	goto	u4400
  7492  08A2                     u4401:
  7493  08A2  28A4               	goto	l512
  7494  08A3                     u4400:
  7495  08A3  288F               	goto	l2862
  7496  08A4                     l512:
  7497  08A4  17F2               	bsf	__div_to_l_@f1+2,7
  7498  08A5                     l2872:
  7499  08A5  30FF               	movlw	255
  7500  08A6  05F0               	andwf	__div_to_l_@f1,f
  7501  08A7  30FF               	movlw	255
  7502  08A8  05F1               	andwf	__div_to_l_@f1+1,f
  7503  08A9  30FF               	movlw	255
  7504  08AA  05F2               	andwf	__div_to_l_@f1+2,f
  7505  08AB  3000               	movlw	0
  7506  08AC  05F3               	andwf	__div_to_l_@f1+3,f
  7507  08AD                     l2874:
  7508  08AD  17F6               	bsf	__div_to_l_@f2+2,7
  7509  08AE  30FF               	movlw	255
  7510  08AF  05F4               	andwf	__div_to_l_@f2,f
  7511  08B0  30FF               	movlw	255
  7512  08B1  05F5               	andwf	__div_to_l_@f2+1,f
  7513  08B2  30FF               	movlw	255
  7514  08B3  05F6               	andwf	__div_to_l_@f2+2,f
  7515  08B4  3000               	movlw	0
  7516  08B5  05F7               	andwf	__div_to_l_@f2+3,f
  7517  08B6  3000               	movlw	0
  7518  08B7  00A3               	movwf	__div_to_l_@quot+3
  7519  08B8  3000               	movlw	0
  7520  08B9  00A2               	movwf	__div_to_l_@quot+2
  7521  08BA  3000               	movlw	0
  7522  08BB  00A1               	movwf	__div_to_l_@quot+1
  7523  08BC  3000               	movlw	0
  7524  08BD  00A0               	movwf	__div_to_l_@quot
  7525  08BE                     l2876:
  7526  08BE  307F               	movlw	127
  7527  08BF  02A5               	subwf	__div_to_l_@exp1,f
  7528  08C0                     l2878:
  7529  08C0  30A0               	movlw	160
  7530  08C1  0724               	addwf	__div_to_l_@cntr,w
  7531  08C2  00F8               	movwf	??__div_to_l_
  7532  08C3  0878               	movf	??__div_to_l_,w
  7533  08C4  02A5               	subwf	__div_to_l_@exp1,f
  7534  08C5  3020               	movlw	32
  7535  08C6  00F8               	movwf	??__div_to_l_
  7536  08C7  0878               	movf	??__div_to_l_,w
  7537  08C8  00A4               	movwf	__div_to_l_@cntr
  7538  08C9                     l2880:
  7539  08C9  3001               	movlw	1
  7540  08CA  00F8               	movwf	??__div_to_l_
  7541  08CB                     u4415:
  7542  08CB  1003               	clrc
  7543  08CC  0DA0               	rlf	__div_to_l_@quot,f
  7544  08CD  0DA1               	rlf	__div_to_l_@quot+1,f
  7545  08CE  0DA2               	rlf	__div_to_l_@quot+2,f
  7546  08CF  0DA3               	rlf	__div_to_l_@quot+3,f
  7547  08D0  0BF8               	decfsz	??__div_to_l_,f
  7548  08D1  28CB               	goto	u4415
  7549  08D2                     l2882:
  7550  08D2  0877               	movf	__div_to_l_@f2+3,w
  7551  08D3  0273               	subwf	__div_to_l_@f1+3,w
  7552  08D4  1D03               	skipz
  7553  08D5  28E0               	goto	u4425
  7554  08D6  0876               	movf	__div_to_l_@f2+2,w
  7555  08D7  0272               	subwf	__div_to_l_@f1+2,w
  7556  08D8  1D03               	skipz
  7557  08D9  28E0               	goto	u4425
  7558  08DA  0875               	movf	__div_to_l_@f2+1,w
  7559  08DB  0271               	subwf	__div_to_l_@f1+1,w
  7560  08DC  1D03               	skipz
  7561  08DD  28E0               	goto	u4425
  7562  08DE  0874               	movf	__div_to_l_@f2,w
  7563  08DF  0270               	subwf	__div_to_l_@f1,w
  7564  08E0                     u4425:
  7565  08E0  1C03               	skipc
  7566  08E1  28E3               	goto	u4421
  7567  08E2  28E4               	goto	u4420
  7568  08E3                     u4421:
  7569  08E3  28F3               	goto	l2888
  7570  08E4                     u4420:
  7571  08E4                     l2884:
  7572  08E4  0874               	movf	__div_to_l_@f2,w
  7573  08E5  02F0               	subwf	__div_to_l_@f1,f
  7574  08E6  0875               	movf	__div_to_l_@f2+1,w
  7575  08E7  1C03               	skipc
  7576  08E8  0F75               	incfsz	__div_to_l_@f2+1,w
  7577  08E9  02F1               	subwf	__div_to_l_@f1+1,f
  7578  08EA  0876               	movf	__div_to_l_@f2+2,w
  7579  08EB  1C03               	skipc
  7580  08EC  0F76               	incfsz	__div_to_l_@f2+2,w
  7581  08ED  02F2               	subwf	__div_to_l_@f1+2,f
  7582  08EE  0877               	movf	__div_to_l_@f2+3,w
  7583  08EF  1C03               	skipc
  7584  08F0  0F77               	incfsz	__div_to_l_@f2+3,w
  7585  08F1  02F3               	subwf	__div_to_l_@f1+3,f
  7586  08F2                     l2886:
  7587  08F2  1420               	bsf	__div_to_l_@quot,0
  7588  08F3                     l2888:
  7589  08F3  3001               	movlw	1
  7590  08F4  00F8               	movwf	??__div_to_l_
  7591  08F5                     u4435:
  7592  08F5  1003               	clrc
  7593  08F6  0DF0               	rlf	__div_to_l_@f1,f
  7594  08F7  0DF1               	rlf	__div_to_l_@f1+1,f
  7595  08F8  0DF2               	rlf	__div_to_l_@f1+2,f
  7596  08F9  0DF3               	rlf	__div_to_l_@f1+3,f
  7597  08FA  0BF8               	decfsz	??__div_to_l_,f
  7598  08FB  28F5               	goto	u4435
  7599  08FC                     l2890:
  7600  08FC  3001               	movlw	1
  7601  08FD  02A4               	subwf	__div_to_l_@cntr,f
  7602  08FE  1D03               	btfss	3,2
  7603  08FF  2901               	goto	u4441
  7604  0900  2902               	goto	u4440
  7605  0901                     u4441:
  7606  0901  28C9               	goto	l2880
  7607  0902                     u4440:
  7608  0902                     l515:
  7609  0902  1FA5               	btfss	__div_to_l_@exp1,7
  7610  0903  2905               	goto	u4451
  7611  0904  2906               	goto	u4450
  7612  0905                     u4451:
  7613  0905  2920               	goto	l2900
  7614  0906                     u4450:
  7615  0906                     l2892:
  7616  0906  0825               	movf	__div_to_l_@exp1,w
  7617  0907  3A80               	xorlw	128
  7618  0908  3E9F               	addlw	159
  7619  0909  1803               	skipnc
  7620  090A  290C               	goto	u4461
  7621  090B  290D               	goto	u4460
  7622  090C                     u4461:
  7623  090C  290E               	goto	l2898
  7624  090D                     u4460:
  7625  090D  288F               	goto	l2862
  7626  090E                     l2898:
  7627  090E  3001               	movlw	1
  7628  090F                     u4475:
  7629  090F  1003               	clrc
  7630  0910  0CA3               	rrf	__div_to_l_@quot+3,f
  7631  0911  0CA2               	rrf	__div_to_l_@quot+2,f
  7632  0912  0CA1               	rrf	__div_to_l_@quot+1,f
  7633  0913  0CA0               	rrf	__div_to_l_@quot,f
  7634  0914  3EFF               	addlw	-1
  7635  0915  1D03               	skipz
  7636  0916  290F               	goto	u4475
  7637  0917  3001               	movlw	1
  7638  0918  00F8               	movwf	??__div_to_l_
  7639  0919  0878               	movf	??__div_to_l_,w
  7640  091A  07A5               	addwf	__div_to_l_@exp1,f
  7641  091B  1D03               	btfss	3,2
  7642  091C  291E               	goto	u4481
  7643  091D  291F               	goto	u4480
  7644  091E                     u4481:
  7645  091E  290E               	goto	l2898
  7646  091F                     u4480:
  7647  091F  2937               	goto	l2908
  7648  0920                     l2900:
  7649  0920  3020               	movlw	32
  7650  0921  0225               	subwf	__div_to_l_@exp1,w
  7651  0922  1C03               	skipc
  7652  0923  2925               	goto	u4491
  7653  0924  2926               	goto	u4490
  7654  0925                     u4491:
  7655  0925  2932               	goto	l522
  7656  0926                     u4490:
  7657  0926  288F               	goto	l2862
  7658  0927                     l2906:
  7659  0927  3001               	movlw	1
  7660  0928  00F8               	movwf	??__div_to_l_
  7661  0929                     u4505:
  7662  0929  1003               	clrc
  7663  092A  0DA0               	rlf	__div_to_l_@quot,f
  7664  092B  0DA1               	rlf	__div_to_l_@quot+1,f
  7665  092C  0DA2               	rlf	__div_to_l_@quot+2,f
  7666  092D  0DA3               	rlf	__div_to_l_@quot+3,f
  7667  092E  0BF8               	decfsz	??__div_to_l_,f
  7668  092F  2929               	goto	u4505
  7669  0930  3001               	movlw	1
  7670  0931  02A5               	subwf	__div_to_l_@exp1,f
  7671  0932                     l522:
  7672  0932  0825               	movf	__div_to_l_@exp1,w
  7673  0933  1D03               	btfss	3,2
  7674  0934  2936               	goto	u4511
  7675  0935  2937               	goto	u4510
  7676  0936                     u4511:
  7677  0936  2927               	goto	l2906
  7678  0937                     u4510:
  7679  0937                     l2908:
  7680  0937  0823               	movf	__div_to_l_@quot+3,w
  7681  0938  00F3               	movwf	?__div_to_l_+3
  7682  0939  0822               	movf	__div_to_l_@quot+2,w
  7683  093A  00F2               	movwf	?__div_to_l_+2
  7684  093B  0821               	movf	__div_to_l_@quot+1,w
  7685  093C  00F1               	movwf	?__div_to_l_+1
  7686  093D  0820               	movf	__div_to_l_@quot,w
  7687  093E  00F0               	movwf	?__div_to_l_
  7688  093F                     l511:
  7689  093F  0008               	return
  7690  0940                     __end_of__div_to_l_:
  7691                           
  7692                           	psect	text14
  7693  1F46                     __ptext14:	
  7694 ;; *************** function ___xxtofl *****************
  7695 ;; Defined at:
  7696 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7697 ;; Parameters:    Size  Location     Type
  7698 ;;  sign            1    wreg     unsigned char 
  7699 ;;  val             4    0[COMMON] long 
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;  sign            1    8[COMMON] unsigned char 
  7702 ;;  arg             4   10[COMMON] unsigned long 
  7703 ;;  exp             1    9[COMMON] unsigned char 
  7704 ;; Return value:  Size  Location     Type
  7705 ;;                  4    0[COMMON] unsigned char 
  7706 ;; Registers used:
  7707 ;;		wreg, status,2, status,0
  7708 ;; Tracked objects:
  7709 ;;		On entry : 0/0
  7710 ;;		On exit  : 0/0
  7711 ;;		Unchanged: 0/0
  7712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7713 ;;      Params:         4       0       0       0       0
  7714 ;;      Locals:         6       0       0       0       0
  7715 ;;      Temps:          4       0       0       0       0
  7716 ;;      Totals:        14       0       0       0       0
  7717 ;;Total ram usage:       14 bytes
  7718 ;; Hardware stack levels used:    1
  7719 ;; This function calls:
  7720 ;;		Nothing
  7721 ;; This function is called by:
  7722 ;;		_main
  7723 ;;		_sprintf
  7724 ;; This function uses a non-reentrant model
  7725 ;;
  7726                           
  7727                           
  7728                           ;psect for function ___xxtofl
  7729  1F46                     ___xxtofl:
  7730                           
  7731                           ;incstack = 0
  7732                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7733                           ;___xxtofl@sign stored from wreg
  7734  1F46  00F8               	movwf	___xxtofl@sign
  7735  1F47                     l3052:
  7736  1F47  0878               	movf	___xxtofl@sign,w
  7737  1F48  1903               	btfsc	3,2
  7738  1F49  2F4B               	goto	u4901
  7739  1F4A  2F4C               	goto	u4900
  7740  1F4B                     u4901:
  7741  1F4B  2F60               	goto	l3058
  7742  1F4C                     u4900:
  7743  1F4C                     l3054:
  7744  1F4C  1FF3               	btfss	___xxtofl@val+3,7
  7745  1F4D  2F4F               	goto	u4911
  7746  1F4E  2F50               	goto	u4910
  7747  1F4F                     u4911:
  7748  1F4F  2F60               	goto	l3058
  7749  1F50                     u4910:
  7750  1F50                     l3056:
  7751  1F50  0970               	comf	___xxtofl@val,w
  7752  1F51  00FA               	movwf	___xxtofl@arg
  7753  1F52  0971               	comf	___xxtofl@val+1,w
  7754  1F53  00FB               	movwf	___xxtofl@arg+1
  7755  1F54  0972               	comf	___xxtofl@val+2,w
  7756  1F55  00FC               	movwf	___xxtofl@arg+2
  7757  1F56  0973               	comf	___xxtofl@val+3,w
  7758  1F57  00FD               	movwf	___xxtofl@arg+3
  7759  1F58  0AFA               	incf	___xxtofl@arg,f
  7760  1F59  1903               	skipnz
  7761  1F5A  0AFB               	incf	___xxtofl@arg+1,f
  7762  1F5B  1903               	skipnz
  7763  1F5C  0AFC               	incf	___xxtofl@arg+2,f
  7764  1F5D  1903               	skipnz
  7765  1F5E  0AFD               	incf	___xxtofl@arg+3,f
  7766  1F5F  2F68               	goto	l808
  7767  1F60                     l3058:
  7768  1F60  0873               	movf	___xxtofl@val+3,w
  7769  1F61  00FD               	movwf	___xxtofl@arg+3
  7770  1F62  0872               	movf	___xxtofl@val+2,w
  7771  1F63  00FC               	movwf	___xxtofl@arg+2
  7772  1F64  0871               	movf	___xxtofl@val+1,w
  7773  1F65  00FB               	movwf	___xxtofl@arg+1
  7774  1F66  0870               	movf	___xxtofl@val,w
  7775  1F67  00FA               	movwf	___xxtofl@arg
  7776  1F68                     l808:
  7777  1F68  0873               	movf	___xxtofl@val+3,w
  7778  1F69  0472               	iorwf	___xxtofl@val+2,w
  7779  1F6A  0471               	iorwf	___xxtofl@val+1,w
  7780  1F6B  0470               	iorwf	___xxtofl@val,w
  7781  1F6C  1D03               	skipz
  7782  1F6D  2F6F               	goto	u4921
  7783  1F6E  2F70               	goto	u4920
  7784  1F6F                     u4921:
  7785  1F6F  2F79               	goto	l3064
  7786  1F70                     u4920:
  7787  1F70                     l3060:
  7788  1F70  3000               	movlw	0
  7789  1F71  00F3               	movwf	?___xxtofl+3
  7790  1F72  3000               	movlw	0
  7791  1F73  00F2               	movwf	?___xxtofl+2
  7792  1F74  3000               	movlw	0
  7793  1F75  00F1               	movwf	?___xxtofl+1
  7794  1F76  3000               	movlw	0
  7795  1F77  00F0               	movwf	?___xxtofl
  7796  1F78  2FFF               	goto	l810
  7797  1F79                     l3064:
  7798  1F79  3096               	movlw	150
  7799  1F7A  00F4               	movwf	??___xxtofl
  7800  1F7B  0874               	movf	??___xxtofl,w
  7801  1F7C  00F9               	movwf	___xxtofl@exp
  7802  1F7D  2F8B               	goto	l3068
  7803  1F7E                     l3066:
  7804  1F7E  3001               	movlw	1
  7805  1F7F  00F4               	movwf	??___xxtofl
  7806  1F80  0874               	movf	??___xxtofl,w
  7807  1F81  07F9               	addwf	___xxtofl@exp,f
  7808  1F82  3001               	movlw	1
  7809  1F83                     u4935:
  7810  1F83  1003               	clrc
  7811  1F84  0CFD               	rrf	___xxtofl@arg+3,f
  7812  1F85  0CFC               	rrf	___xxtofl@arg+2,f
  7813  1F86  0CFB               	rrf	___xxtofl@arg+1,f
  7814  1F87  0CFA               	rrf	___xxtofl@arg,f
  7815  1F88  3EFF               	addlw	-1
  7816  1F89  1D03               	skipz
  7817  1F8A  2F83               	goto	u4935
  7818  1F8B                     l3068:
  7819  1F8B  30FE               	movlw	254
  7820  1F8C  057D               	andwf	___xxtofl@arg+3,w
  7821  1F8D  1D03               	btfss	3,2
  7822  1F8E  2F90               	goto	u4941
  7823  1F8F  2F91               	goto	u4940
  7824  1F90                     u4941:
  7825  1F90  2F7E               	goto	l3066
  7826  1F91                     u4940:
  7827  1F91  2FAD               	goto	l814
  7828  1F92                     l3070:
  7829  1F92  3001               	movlw	1
  7830  1F93  00F4               	movwf	??___xxtofl
  7831  1F94  0874               	movf	??___xxtofl,w
  7832  1F95  07F9               	addwf	___xxtofl@exp,f
  7833  1F96                     l3072:
  7834  1F96  3001               	movlw	1
  7835  1F97  07FA               	addwf	___xxtofl@arg,f
  7836  1F98  3000               	movlw	0
  7837  1F99  1803               	skipnc
  7838  1F9A  3001               	movlw	1
  7839  1F9B  07FB               	addwf	___xxtofl@arg+1,f
  7840  1F9C  3000               	movlw	0
  7841  1F9D  1803               	skipnc
  7842  1F9E  3001               	movlw	1
  7843  1F9F  07FC               	addwf	___xxtofl@arg+2,f
  7844  1FA0  3000               	movlw	0
  7845  1FA1  1803               	skipnc
  7846  1FA2  3001               	movlw	1
  7847  1FA3  07FD               	addwf	___xxtofl@arg+3,f
  7848  1FA4                     l3074:
  7849  1FA4  3001               	movlw	1
  7850  1FA5                     u4955:
  7851  1FA5  1003               	clrc
  7852  1FA6  0CFD               	rrf	___xxtofl@arg+3,f
  7853  1FA7  0CFC               	rrf	___xxtofl@arg+2,f
  7854  1FA8  0CFB               	rrf	___xxtofl@arg+1,f
  7855  1FA9  0CFA               	rrf	___xxtofl@arg,f
  7856  1FAA  3EFF               	addlw	-1
  7857  1FAB  1D03               	skipz
  7858  1FAC  2FA5               	goto	u4955
  7859  1FAD                     l814:
  7860  1FAD  30FF               	movlw	255
  7861  1FAE  057D               	andwf	___xxtofl@arg+3,w
  7862  1FAF  1D03               	btfss	3,2
  7863  1FB0  2FB2               	goto	u4961
  7864  1FB1  2FB3               	goto	u4960
  7865  1FB2                     u4961:
  7866  1FB2  2F92               	goto	l3070
  7867  1FB3                     u4960:
  7868  1FB3  2FBF               	goto	l3078
  7869  1FB4                     l3076:
  7870  1FB4  3001               	movlw	1
  7871  1FB5  02F9               	subwf	___xxtofl@exp,f
  7872  1FB6  3001               	movlw	1
  7873  1FB7  00F4               	movwf	??___xxtofl
  7874  1FB8                     u4975:
  7875  1FB8  1003               	clrc
  7876  1FB9  0DFA               	rlf	___xxtofl@arg,f
  7877  1FBA  0DFB               	rlf	___xxtofl@arg+1,f
  7878  1FBB  0DFC               	rlf	___xxtofl@arg+2,f
  7879  1FBC  0DFD               	rlf	___xxtofl@arg+3,f
  7880  1FBD  0BF4               	decfsz	??___xxtofl,f
  7881  1FBE  2FB8               	goto	u4975
  7882  1FBF                     l3078:
  7883  1FBF  1BFC               	btfsc	___xxtofl@arg+2,7
  7884  1FC0  2FC2               	goto	u4981
  7885  1FC1  2FC3               	goto	u4980
  7886  1FC2                     u4981:
  7887  1FC2  2FC9               	goto	l821
  7888  1FC3                     u4980:
  7889  1FC3                     l3080:
  7890  1FC3  3002               	movlw	2
  7891  1FC4  0279               	subwf	___xxtofl@exp,w
  7892  1FC5  1803               	skipnc
  7893  1FC6  2FC8               	goto	u4991
  7894  1FC7  2FC9               	goto	u4990
  7895  1FC8                     u4991:
  7896  1FC8  2FB4               	goto	l3076
  7897  1FC9                     u4990:
  7898  1FC9                     l821:
  7899  1FC9  1879               	btfsc	___xxtofl@exp,0
  7900  1FCA  2FCC               	goto	u5001
  7901  1FCB  2FCD               	goto	u5000
  7902  1FCC                     u5001:
  7903  1FCC  2FD5               	goto	l822
  7904  1FCD                     u5000:
  7905  1FCD                     l3082:
  7906  1FCD  30FF               	movlw	255
  7907  1FCE  05FA               	andwf	___xxtofl@arg,f
  7908  1FCF  30FF               	movlw	255
  7909  1FD0  05FB               	andwf	___xxtofl@arg+1,f
  7910  1FD1  307F               	movlw	127
  7911  1FD2  05FC               	andwf	___xxtofl@arg+2,f
  7912  1FD3  30FF               	movlw	255
  7913  1FD4  05FD               	andwf	___xxtofl@arg+3,f
  7914  1FD5                     l822:
  7915  1FD5  1003               	clrc
  7916  1FD6  0CF9               	rrf	___xxtofl@exp,f
  7917  1FD7                     l3084:
  7918  1FD7  0879               	movf	___xxtofl@exp,w
  7919  1FD8  00F4               	movwf	??___xxtofl
  7920  1FD9  01F5               	clrf	??___xxtofl+1
  7921  1FDA  01F6               	clrf	??___xxtofl+2
  7922  1FDB  01F7               	clrf	??___xxtofl+3
  7923  1FDC  3018               	movlw	24
  7924  1FDD                     u5015:
  7925  1FDD  1003               	clrc
  7926  1FDE  0DF4               	rlf	??___xxtofl,f
  7927  1FDF  0DF5               	rlf	??___xxtofl+1,f
  7928  1FE0  0DF6               	rlf	??___xxtofl+2,f
  7929  1FE1  0DF7               	rlf	??___xxtofl+3,f
  7930  1FE2                     u5010:
  7931  1FE2  3EFF               	addlw	-1
  7932  1FE3  1D03               	skipz
  7933  1FE4  2FDD               	goto	u5015
  7934  1FE5  0874               	movf	??___xxtofl,w
  7935  1FE6  04FA               	iorwf	___xxtofl@arg,f
  7936  1FE7  0875               	movf	??___xxtofl+1,w
  7937  1FE8  04FB               	iorwf	___xxtofl@arg+1,f
  7938  1FE9  0876               	movf	??___xxtofl+2,w
  7939  1FEA  04FC               	iorwf	___xxtofl@arg+2,f
  7940  1FEB  0877               	movf	??___xxtofl+3,w
  7941  1FEC  04FD               	iorwf	___xxtofl@arg+3,f
  7942  1FED                     l3086:
  7943  1FED  0878               	movf	___xxtofl@sign,w
  7944  1FEE  1903               	btfsc	3,2
  7945  1FEF  2FF1               	goto	u5021
  7946  1FF0  2FF2               	goto	u5020
  7947  1FF1                     u5021:
  7948  1FF1  2FF7               	goto	l3092
  7949  1FF2                     u5020:
  7950  1FF2                     l3088:
  7951  1FF2  1FF3               	btfss	___xxtofl@val+3,7
  7952  1FF3  2FF5               	goto	u5031
  7953  1FF4  2FF6               	goto	u5030
  7954  1FF5                     u5031:
  7955  1FF5  2FF7               	goto	l3092
  7956  1FF6                     u5030:
  7957  1FF6                     l3090:
  7958  1FF6  17FD               	bsf	___xxtofl@arg+3,7
  7959  1FF7                     l3092:
  7960  1FF7  087D               	movf	___xxtofl@arg+3,w
  7961  1FF8  00F3               	movwf	?___xxtofl+3
  7962  1FF9  087C               	movf	___xxtofl@arg+2,w
  7963  1FFA  00F2               	movwf	?___xxtofl+2
  7964  1FFB  087B               	movf	___xxtofl@arg+1,w
  7965  1FFC  00F1               	movwf	?___xxtofl+1
  7966  1FFD  087A               	movf	___xxtofl@arg,w
  7967  1FFE  00F0               	movwf	?___xxtofl
  7968  1FFF                     l810:
  7969  1FFF  0008               	return
  7970  2000                     __end_of___xxtofl:
  7971                           
  7972                           	psect	text15
  7973  1CBF                     __ptext15:	
  7974 ;; *************** function ___wmul *****************
  7975 ;; Defined at:
  7976 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  7977 ;; Parameters:    Size  Location     Type
  7978 ;;  multiplier      2    0[COMMON] unsigned int 
  7979 ;;  multiplicand    2    2[COMMON] unsigned int 
  7980 ;; Auto vars:     Size  Location     Type
  7981 ;;  product         2    4[COMMON] unsigned int 
  7982 ;; Return value:  Size  Location     Type
  7983 ;;                  2    0[COMMON] unsigned int 
  7984 ;; Registers used:
  7985 ;;		wreg, status,2, status,0
  7986 ;; Tracked objects:
  7987 ;;		On entry : 0/0
  7988 ;;		On exit  : 0/0
  7989 ;;		Unchanged: 0/0
  7990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7991 ;;      Params:         4       0       0       0       0
  7992 ;;      Locals:         2       0       0       0       0
  7993 ;;      Temps:          0       0       0       0       0
  7994 ;;      Totals:         6       0       0       0       0
  7995 ;;Total ram usage:        6 bytes
  7996 ;; Hardware stack levels used:    1
  7997 ;; This function calls:
  7998 ;;		Nothing
  7999 ;; This function is called by:
  8000 ;;		_sprintf
  8001 ;; This function uses a non-reentrant model
  8002 ;;
  8003                           
  8004                           
  8005                           ;psect for function ___wmul
  8006  1CBF                     ___wmul:
  8007  1CBF                     l2912:	
  8008                           ;incstack = 0
  8009                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8010                           
  8011  1CBF  01F4               	clrf	___wmul@product
  8012  1CC0  01F5               	clrf	___wmul@product+1
  8013  1CC1                     l2914:
  8014  1CC1  1C70               	btfss	___wmul@multiplier,0
  8015  1CC2  2CC4               	goto	u4521
  8016  1CC3  2CC5               	goto	u4520
  8017  1CC4                     u4521:
  8018  1CC4  2CCB               	goto	l341
  8019  1CC5                     u4520:
  8020  1CC5                     l2916:
  8021  1CC5  0872               	movf	___wmul@multiplicand,w
  8022  1CC6  07F4               	addwf	___wmul@product,f
  8023  1CC7  1803               	skipnc
  8024  1CC8  0AF5               	incf	___wmul@product+1,f
  8025  1CC9  0873               	movf	___wmul@multiplicand+1,w
  8026  1CCA  07F5               	addwf	___wmul@product+1,f
  8027  1CCB                     l341:
  8028  1CCB  3001               	movlw	1
  8029  1CCC                     u4535:
  8030  1CCC  1003               	clrc
  8031  1CCD  0DF2               	rlf	___wmul@multiplicand,f
  8032  1CCE  0DF3               	rlf	___wmul@multiplicand+1,f
  8033  1CCF  3EFF               	addlw	-1
  8034  1CD0  1D03               	skipz
  8035  1CD1  2CCC               	goto	u4535
  8036  1CD2                     l2918:
  8037  1CD2  3001               	movlw	1
  8038  1CD3                     u4545:
  8039  1CD3  1003               	clrc
  8040  1CD4  0CF1               	rrf	___wmul@multiplier+1,f
  8041  1CD5  0CF0               	rrf	___wmul@multiplier,f
  8042  1CD6  3EFF               	addlw	-1
  8043  1CD7  1D03               	skipz
  8044  1CD8  2CD3               	goto	u4545
  8045  1CD9                     l2920:
  8046  1CD9  0870               	movf	___wmul@multiplier,w
  8047  1CDA  0471               	iorwf	___wmul@multiplier+1,w
  8048  1CDB  1D03               	btfss	3,2
  8049  1CDC  2CDE               	goto	u4551
  8050  1CDD  2CDF               	goto	u4550
  8051  1CDE                     u4551:
  8052  1CDE  2CC1               	goto	l2914
  8053  1CDF                     u4550:
  8054  1CDF                     l2922:
  8055  1CDF  0875               	movf	___wmul@product+1,w
  8056  1CE0  00F1               	movwf	?___wmul+1
  8057  1CE1  0874               	movf	___wmul@product,w
  8058  1CE2  00F0               	movwf	?___wmul
  8059  1CE3                     l343:
  8060  1CE3  0008               	return
  8061  1CE4                     __end_of___wmul:
  8062                           
  8063                           	psect	text16
  8064  1DD7                     __ptext16:	
  8065 ;; *************** function ___llmod *****************
  8066 ;; Defined at:
  8067 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  8068 ;; Parameters:    Size  Location     Type
  8069 ;;  divisor         4    0[COMMON] unsigned long 
  8070 ;;  dividend        4    4[COMMON] unsigned long 
  8071 ;; Auto vars:     Size  Location     Type
  8072 ;;  counter         1    9[COMMON] unsigned char 
  8073 ;; Return value:  Size  Location     Type
  8074 ;;                  4    0[COMMON] unsigned long 
  8075 ;; Registers used:
  8076 ;;		wreg, status,2, status,0
  8077 ;; Tracked objects:
  8078 ;;		On entry : 0/0
  8079 ;;		On exit  : 0/0
  8080 ;;		Unchanged: 0/0
  8081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8082 ;;      Params:         8       0       0       0       0
  8083 ;;      Locals:         1       0       0       0       0
  8084 ;;      Temps:          1       0       0       0       0
  8085 ;;      Totals:        10       0       0       0       0
  8086 ;;Total ram usage:       10 bytes
  8087 ;; Hardware stack levels used:    1
  8088 ;; This function calls:
  8089 ;;		Nothing
  8090 ;; This function is called by:
  8091 ;;		_sprintf
  8092 ;; This function uses a non-reentrant model
  8093 ;;
  8094                           
  8095                           
  8096                           ;psect for function ___llmod
  8097  1DD7                     ___llmod:
  8098  1DD7                     l3026:	
  8099                           ;incstack = 0
  8100                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  8101                           
  8102  1DD7  0873               	movf	___llmod@divisor+3,w
  8103  1DD8  0472               	iorwf	___llmod@divisor+2,w
  8104  1DD9  0471               	iorwf	___llmod@divisor+1,w
  8105  1DDA  0470               	iorwf	___llmod@divisor,w
  8106  1DDB  1903               	skipnz
  8107  1DDC  2DDE               	goto	u4841
  8108  1DDD  2DDF               	goto	u4840
  8109  1DDE                     u4841:
  8110  1DDE  2E22               	goto	l3042
  8111  1DDF                     u4840:
  8112  1DDF                     l3028:
  8113  1DDF  01F9               	clrf	___llmod@counter
  8114  1DE0  0AF9               	incf	___llmod@counter,f
  8115  1DE1  2DEF               	goto	l3032
  8116  1DE2                     l3030:
  8117  1DE2  3001               	movlw	1
  8118  1DE3  00F8               	movwf	??___llmod
  8119  1DE4                     u4855:
  8120  1DE4  1003               	clrc
  8121  1DE5  0DF0               	rlf	___llmod@divisor,f
  8122  1DE6  0DF1               	rlf	___llmod@divisor+1,f
  8123  1DE7  0DF2               	rlf	___llmod@divisor+2,f
  8124  1DE8  0DF3               	rlf	___llmod@divisor+3,f
  8125  1DE9  0BF8               	decfsz	??___llmod,f
  8126  1DEA  2DE4               	goto	u4855
  8127  1DEB  3001               	movlw	1
  8128  1DEC  00F8               	movwf	??___llmod
  8129  1DED  0878               	movf	??___llmod,w
  8130  1DEE  07F9               	addwf	___llmod@counter,f
  8131  1DEF                     l3032:
  8132  1DEF  1FF3               	btfss	___llmod@divisor+3,7
  8133  1DF0  2DF2               	goto	u4861
  8134  1DF1  2DF3               	goto	u4860
  8135  1DF2                     u4861:
  8136  1DF2  2DE2               	goto	l3030
  8137  1DF3                     u4860:
  8138  1DF3                     l3034:
  8139  1DF3  0873               	movf	___llmod@divisor+3,w
  8140  1DF4  0277               	subwf	___llmod@dividend+3,w
  8141  1DF5  1D03               	skipz
  8142  1DF6  2E01               	goto	u4875
  8143  1DF7  0872               	movf	___llmod@divisor+2,w
  8144  1DF8  0276               	subwf	___llmod@dividend+2,w
  8145  1DF9  1D03               	skipz
  8146  1DFA  2E01               	goto	u4875
  8147  1DFB  0871               	movf	___llmod@divisor+1,w
  8148  1DFC  0275               	subwf	___llmod@dividend+1,w
  8149  1DFD  1D03               	skipz
  8150  1DFE  2E01               	goto	u4875
  8151  1DFF  0870               	movf	___llmod@divisor,w
  8152  1E00  0274               	subwf	___llmod@dividend,w
  8153  1E01                     u4875:
  8154  1E01  1C03               	skipc
  8155  1E02  2E04               	goto	u4871
  8156  1E03  2E05               	goto	u4870
  8157  1E04                     u4871:
  8158  1E04  2E13               	goto	l3038
  8159  1E05                     u4870:
  8160  1E05                     l3036:
  8161  1E05  0870               	movf	___llmod@divisor,w
  8162  1E06  02F4               	subwf	___llmod@dividend,f
  8163  1E07  0871               	movf	___llmod@divisor+1,w
  8164  1E08  1C03               	skipc
  8165  1E09  0F71               	incfsz	___llmod@divisor+1,w
  8166  1E0A  02F5               	subwf	___llmod@dividend+1,f
  8167  1E0B  0872               	movf	___llmod@divisor+2,w
  8168  1E0C  1C03               	skipc
  8169  1E0D  0F72               	incfsz	___llmod@divisor+2,w
  8170  1E0E  02F6               	subwf	___llmod@dividend+2,f
  8171  1E0F  0873               	movf	___llmod@divisor+3,w
  8172  1E10  1C03               	skipc
  8173  1E11  0F73               	incfsz	___llmod@divisor+3,w
  8174  1E12  02F7               	subwf	___llmod@dividend+3,f
  8175  1E13                     l3038:
  8176  1E13  3001               	movlw	1
  8177  1E14                     u4885:
  8178  1E14  1003               	clrc
  8179  1E15  0CF3               	rrf	___llmod@divisor+3,f
  8180  1E16  0CF2               	rrf	___llmod@divisor+2,f
  8181  1E17  0CF1               	rrf	___llmod@divisor+1,f
  8182  1E18  0CF0               	rrf	___llmod@divisor,f
  8183  1E19  3EFF               	addlw	-1
  8184  1E1A  1D03               	skipz
  8185  1E1B  2E14               	goto	u4885
  8186  1E1C                     l3040:
  8187  1E1C  3001               	movlw	1
  8188  1E1D  02F9               	subwf	___llmod@counter,f
  8189  1E1E  1D03               	btfss	3,2
  8190  1E1F  2E21               	goto	u4891
  8191  1E20  2E22               	goto	u4890
  8192  1E21                     u4891:
  8193  1E21  2DF3               	goto	l3034
  8194  1E22                     u4890:
  8195  1E22                     l3042:
  8196  1E22  0877               	movf	___llmod@dividend+3,w
  8197  1E23  00F3               	movwf	?___llmod+3
  8198  1E24  0876               	movf	___llmod@dividend+2,w
  8199  1E25  00F2               	movwf	?___llmod+2
  8200  1E26  0875               	movf	___llmod@dividend+1,w
  8201  1E27  00F1               	movwf	?___llmod+1
  8202  1E28  0874               	movf	___llmod@dividend,w
  8203  1E29  00F0               	movwf	?___llmod
  8204  1E2A                     l597:
  8205  1E2A  0008               	return
  8206  1E2B                     __end_of___llmod:
  8207                           
  8208                           	psect	text17
  8209  1EE0                     __ptext17:	
  8210 ;; *************** function ___lldiv *****************
  8211 ;; Defined at:
  8212 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  8213 ;; Parameters:    Size  Location     Type
  8214 ;;  divisor         4    0[COMMON] unsigned long 
  8215 ;;  dividend        4    4[COMMON] unsigned long 
  8216 ;; Auto vars:     Size  Location     Type
  8217 ;;  quotient        4    9[COMMON] unsigned long 
  8218 ;;  counter         1   13[COMMON] unsigned char 
  8219 ;; Return value:  Size  Location     Type
  8220 ;;                  4    0[COMMON] unsigned long 
  8221 ;; Registers used:
  8222 ;;		wreg, status,2, status,0
  8223 ;; Tracked objects:
  8224 ;;		On entry : 0/0
  8225 ;;		On exit  : 0/0
  8226 ;;		Unchanged: 0/0
  8227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8228 ;;      Params:         8       0       0       0       0
  8229 ;;      Locals:         5       0       0       0       0
  8230 ;;      Temps:          1       0       0       0       0
  8231 ;;      Totals:        14       0       0       0       0
  8232 ;;Total ram usage:       14 bytes
  8233 ;; Hardware stack levels used:    1
  8234 ;; This function calls:
  8235 ;;		Nothing
  8236 ;; This function is called by:
  8237 ;;		_sprintf
  8238 ;; This function uses a non-reentrant model
  8239 ;;
  8240                           
  8241                           
  8242                           ;psect for function ___lldiv
  8243  1EE0                     ___lldiv:
  8244  1EE0                     l2926:	
  8245                           ;incstack = 0
  8246                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8247                           
  8248  1EE0  3000               	movlw	0
  8249  1EE1  00FC               	movwf	___lldiv@quotient+3
  8250  1EE2  3000               	movlw	0
  8251  1EE3  00FB               	movwf	___lldiv@quotient+2
  8252  1EE4  3000               	movlw	0
  8253  1EE5  00FA               	movwf	___lldiv@quotient+1
  8254  1EE6  3000               	movlw	0
  8255  1EE7  00F9               	movwf	___lldiv@quotient
  8256  1EE8  0873               	movf	___lldiv@divisor+3,w
  8257  1EE9  0472               	iorwf	___lldiv@divisor+2,w
  8258  1EEA  0471               	iorwf	___lldiv@divisor+1,w
  8259  1EEB  0470               	iorwf	___lldiv@divisor,w
  8260  1EEC  1903               	skipnz
  8261  1EED  2EEF               	goto	u4561
  8262  1EEE  2EF0               	goto	u4560
  8263  1EEF                     u4561:
  8264  1EEF  2F3D               	goto	l2946
  8265  1EF0                     u4560:
  8266  1EF0                     l2928:
  8267  1EF0  01FD               	clrf	___lldiv@counter
  8268  1EF1  0AFD               	incf	___lldiv@counter,f
  8269  1EF2  2F00               	goto	l2932
  8270  1EF3                     l2930:
  8271  1EF3  3001               	movlw	1
  8272  1EF4  00F8               	movwf	??___lldiv
  8273  1EF5                     u4575:
  8274  1EF5  1003               	clrc
  8275  1EF6  0DF0               	rlf	___lldiv@divisor,f
  8276  1EF7  0DF1               	rlf	___lldiv@divisor+1,f
  8277  1EF8  0DF2               	rlf	___lldiv@divisor+2,f
  8278  1EF9  0DF3               	rlf	___lldiv@divisor+3,f
  8279  1EFA  0BF8               	decfsz	??___lldiv,f
  8280  1EFB  2EF5               	goto	u4575
  8281  1EFC  3001               	movlw	1
  8282  1EFD  00F8               	movwf	??___lldiv
  8283  1EFE  0878               	movf	??___lldiv,w
  8284  1EFF  07FD               	addwf	___lldiv@counter,f
  8285  1F00                     l2932:
  8286  1F00  1FF3               	btfss	___lldiv@divisor+3,7
  8287  1F01  2F03               	goto	u4581
  8288  1F02  2F04               	goto	u4580
  8289  1F03                     u4581:
  8290  1F03  2EF3               	goto	l2930
  8291  1F04                     u4580:
  8292  1F04                     l2934:
  8293  1F04  3001               	movlw	1
  8294  1F05  00F8               	movwf	??___lldiv
  8295  1F06                     u4595:
  8296  1F06  1003               	clrc
  8297  1F07  0DF9               	rlf	___lldiv@quotient,f
  8298  1F08  0DFA               	rlf	___lldiv@quotient+1,f
  8299  1F09  0DFB               	rlf	___lldiv@quotient+2,f
  8300  1F0A  0DFC               	rlf	___lldiv@quotient+3,f
  8301  1F0B  0BF8               	decfsz	??___lldiv,f
  8302  1F0C  2F06               	goto	u4595
  8303  1F0D                     l2936:
  8304  1F0D  0873               	movf	___lldiv@divisor+3,w
  8305  1F0E  0277               	subwf	___lldiv@dividend+3,w
  8306  1F0F  1D03               	skipz
  8307  1F10  2F1B               	goto	u4605
  8308  1F11  0872               	movf	___lldiv@divisor+2,w
  8309  1F12  0276               	subwf	___lldiv@dividend+2,w
  8310  1F13  1D03               	skipz
  8311  1F14  2F1B               	goto	u4605
  8312  1F15  0871               	movf	___lldiv@divisor+1,w
  8313  1F16  0275               	subwf	___lldiv@dividend+1,w
  8314  1F17  1D03               	skipz
  8315  1F18  2F1B               	goto	u4605
  8316  1F19  0870               	movf	___lldiv@divisor,w
  8317  1F1A  0274               	subwf	___lldiv@dividend,w
  8318  1F1B                     u4605:
  8319  1F1B  1C03               	skipc
  8320  1F1C  2F1E               	goto	u4601
  8321  1F1D  2F1F               	goto	u4600
  8322  1F1E                     u4601:
  8323  1F1E  2F2E               	goto	l2942
  8324  1F1F                     u4600:
  8325  1F1F                     l2938:
  8326  1F1F  0870               	movf	___lldiv@divisor,w
  8327  1F20  02F4               	subwf	___lldiv@dividend,f
  8328  1F21  0871               	movf	___lldiv@divisor+1,w
  8329  1F22  1C03               	skipc
  8330  1F23  0F71               	incfsz	___lldiv@divisor+1,w
  8331  1F24  02F5               	subwf	___lldiv@dividend+1,f
  8332  1F25  0872               	movf	___lldiv@divisor+2,w
  8333  1F26  1C03               	skipc
  8334  1F27  0F72               	incfsz	___lldiv@divisor+2,w
  8335  1F28  02F6               	subwf	___lldiv@dividend+2,f
  8336  1F29  0873               	movf	___lldiv@divisor+3,w
  8337  1F2A  1C03               	skipc
  8338  1F2B  0F73               	incfsz	___lldiv@divisor+3,w
  8339  1F2C  02F7               	subwf	___lldiv@dividend+3,f
  8340  1F2D                     l2940:
  8341  1F2D  1479               	bsf	___lldiv@quotient,0
  8342  1F2E                     l2942:
  8343  1F2E  3001               	movlw	1
  8344  1F2F                     u4615:
  8345  1F2F  1003               	clrc
  8346  1F30  0CF3               	rrf	___lldiv@divisor+3,f
  8347  1F31  0CF2               	rrf	___lldiv@divisor+2,f
  8348  1F32  0CF1               	rrf	___lldiv@divisor+1,f
  8349  1F33  0CF0               	rrf	___lldiv@divisor,f
  8350  1F34  3EFF               	addlw	-1
  8351  1F35  1D03               	skipz
  8352  1F36  2F2F               	goto	u4615
  8353  1F37                     l2944:
  8354  1F37  3001               	movlw	1
  8355  1F38  02FD               	subwf	___lldiv@counter,f
  8356  1F39  1D03               	btfss	3,2
  8357  1F3A  2F3C               	goto	u4621
  8358  1F3B  2F3D               	goto	u4620
  8359  1F3C                     u4621:
  8360  1F3C  2F04               	goto	l2934
  8361  1F3D                     u4620:
  8362  1F3D                     l2946:
  8363  1F3D  087C               	movf	___lldiv@quotient+3,w
  8364  1F3E  00F3               	movwf	?___lldiv+3
  8365  1F3F  087B               	movf	___lldiv@quotient+2,w
  8366  1F40  00F2               	movwf	?___lldiv+2
  8367  1F41  087A               	movf	___lldiv@quotient+1,w
  8368  1F42  00F1               	movwf	?___lldiv+1
  8369  1F43  0879               	movf	___lldiv@quotient,w
  8370  1F44  00F0               	movwf	?___lldiv
  8371  1F45                     l377:
  8372  1F45  0008               	return
  8373  1F46                     __end_of___lldiv:
  8374                           
  8375                           	psect	text18
  8376  0806                     __ptext18:	
  8377 ;; *************** function ___fltol *****************
  8378 ;; Defined at:
  8379 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  8380 ;; Parameters:    Size  Location     Type
  8381 ;;  f1              4   49[BANK0 ] unsigned long 
  8382 ;; Auto vars:     Size  Location     Type
  8383 ;;  exp1            1   59[BANK0 ] unsigned char 
  8384 ;;  sign1           1   58[BANK0 ] unsigned char 
  8385 ;; Return value:  Size  Location     Type
  8386 ;;                  4   49[BANK0 ] long 
  8387 ;; Registers used:
  8388 ;;		wreg, status,2, status,0
  8389 ;; Tracked objects:
  8390 ;;		On entry : 0/0
  8391 ;;		On exit  : 0/0
  8392 ;;		Unchanged: 0/0
  8393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8394 ;;      Params:         0       4       0       0       0
  8395 ;;      Locals:         0       2       0       0       0
  8396 ;;      Temps:          0       5       0       0       0
  8397 ;;      Totals:         0      11       0       0       0
  8398 ;;Total ram usage:       11 bytes
  8399 ;; Hardware stack levels used:    1
  8400 ;; This function calls:
  8401 ;;		Nothing
  8402 ;; This function is called by:
  8403 ;;		_sprintf
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           
  8407                           
  8408                           ;psect for function ___fltol
  8409  0806                     ___fltol:
  8410  0806                     l2990:	
  8411                           ;incstack = 0
  8412                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8413                           
  8414  0806  1003               	clrc
  8415  0807  1283               	bcf	3,5	;RP0=0, select bank0
  8416  0808  1303               	bcf	3,6	;RP1=0, select bank0
  8417  0809  0D53               	rlf	___fltol@f1+2,w
  8418  080A  0D54               	rlf	___fltol@f1+3,w
  8419  080B  00D5               	movwf	??___fltol
  8420  080C  0855               	movf	??___fltol,w
  8421  080D  00DB               	movwf	___fltol@exp1
  8422  080E  085B               	movf	___fltol@exp1,w
  8423  080F  1D03               	btfss	3,2
  8424  0810  2812               	goto	u4741
  8425  0811  2813               	goto	u4740
  8426  0812                     u4741:
  8427  0812  281C               	goto	l2996
  8428  0813                     u4740:
  8429  0813                     l2992:
  8430  0813  3000               	movlw	0
  8431  0814  00D4               	movwf	?___fltol+3
  8432  0815  3000               	movlw	0
  8433  0816  00D3               	movwf	?___fltol+2
  8434  0817  3000               	movlw	0
  8435  0818  00D2               	movwf	?___fltol+1
  8436  0819  3000               	movlw	0
  8437  081A  00D1               	movwf	?___fltol
  8438  081B  2881               	goto	l544
  8439  081C                     l2996:
  8440  081C  0851               	movf	___fltol@f1,w
  8441  081D  00D5               	movwf	??___fltol
  8442  081E  0852               	movf	___fltol@f1+1,w
  8443  081F  00D6               	movwf	??___fltol+1
  8444  0820  0853               	movf	___fltol@f1+2,w
  8445  0821  00D7               	movwf	??___fltol+2
  8446  0822  0854               	movf	___fltol@f1+3,w
  8447  0823  00D8               	movwf	??___fltol+3
  8448  0824  301F               	movlw	31
  8449  0825                     u4755:
  8450  0825  1003               	clrc
  8451  0826  0CD8               	rrf	??___fltol+3,f
  8452  0827  0CD7               	rrf	??___fltol+2,f
  8453  0828  0CD6               	rrf	??___fltol+1,f
  8454  0829  0CD5               	rrf	??___fltol,f
  8455  082A                     u4750:
  8456  082A  3EFF               	addlw	-1
  8457  082B  1D03               	skipz
  8458  082C  2825               	goto	u4755
  8459  082D  0855               	movf	??___fltol,w
  8460  082E  00D9               	movwf	??___fltol+4
  8461  082F  0859               	movf	??___fltol+4,w
  8462  0830  00DA               	movwf	___fltol@sign1
  8463  0831                     l2998:
  8464  0831  17D3               	bsf	___fltol@f1+2,7
  8465  0832                     l3000:
  8466  0832  30FF               	movlw	255
  8467  0833  05D1               	andwf	___fltol@f1,f
  8468  0834  30FF               	movlw	255
  8469  0835  05D2               	andwf	___fltol@f1+1,f
  8470  0836  30FF               	movlw	255
  8471  0837  05D3               	andwf	___fltol@f1+2,f
  8472  0838  3000               	movlw	0
  8473  0839  05D4               	andwf	___fltol@f1+3,f
  8474  083A                     l3002:
  8475  083A  3096               	movlw	150
  8476  083B  02DB               	subwf	___fltol@exp1,f
  8477  083C                     l3004:
  8478  083C  1FDB               	btfss	___fltol@exp1,7
  8479  083D  283F               	goto	u4761
  8480  083E  2840               	goto	u4760
  8481  083F                     u4761:
  8482  083F  285A               	goto	l3014
  8483  0840                     u4760:
  8484  0840                     l3006:
  8485  0840  085B               	movf	___fltol@exp1,w
  8486  0841  3A80               	xorlw	128
  8487  0842  3E97               	addlw	151
  8488  0843  1803               	skipnc
  8489  0844  2846               	goto	u4771
  8490  0845  2847               	goto	u4770
  8491  0846                     u4771:
  8492  0846  2848               	goto	l3012
  8493  0847                     u4770:
  8494  0847  2813               	goto	l2992
  8495  0848                     l3012:
  8496  0848  3001               	movlw	1
  8497  0849                     u4785:
  8498  0849  1003               	clrc
  8499  084A  0CD4               	rrf	___fltol@f1+3,f
  8500  084B  0CD3               	rrf	___fltol@f1+2,f
  8501  084C  0CD2               	rrf	___fltol@f1+1,f
  8502  084D  0CD1               	rrf	___fltol@f1,f
  8503  084E  3EFF               	addlw	-1
  8504  084F  1D03               	skipz
  8505  0850  2849               	goto	u4785
  8506  0851  3001               	movlw	1
  8507  0852  00D5               	movwf	??___fltol
  8508  0853  0855               	movf	??___fltol,w
  8509  0854  07DB               	addwf	___fltol@exp1,f
  8510  0855  1D03               	btfss	3,2
  8511  0856  2858               	goto	u4791
  8512  0857  2859               	goto	u4790
  8513  0858                     u4791:
  8514  0858  2848               	goto	l3012
  8515  0859                     u4790:
  8516  0859  2871               	goto	l3022
  8517  085A                     l3014:
  8518  085A  3020               	movlw	32
  8519  085B  025B               	subwf	___fltol@exp1,w
  8520  085C  1C03               	skipc
  8521  085D  285F               	goto	u4801
  8522  085E  2860               	goto	u4800
  8523  085F                     u4801:
  8524  085F  286C               	goto	l551
  8525  0860                     u4800:
  8526  0860  2813               	goto	l2992
  8527  0861                     l3020:
  8528  0861  3001               	movlw	1
  8529  0862  00D5               	movwf	??___fltol
  8530  0863                     u4815:
  8531  0863  1003               	clrc
  8532  0864  0DD1               	rlf	___fltol@f1,f
  8533  0865  0DD2               	rlf	___fltol@f1+1,f
  8534  0866  0DD3               	rlf	___fltol@f1+2,f
  8535  0867  0DD4               	rlf	___fltol@f1+3,f
  8536  0868  0BD5               	decfsz	??___fltol,f
  8537  0869  2863               	goto	u4815
  8538  086A  3001               	movlw	1
  8539  086B  02DB               	subwf	___fltol@exp1,f
  8540  086C                     l551:
  8541  086C  085B               	movf	___fltol@exp1,w
  8542  086D  1D03               	btfss	3,2
  8543  086E  2870               	goto	u4821
  8544  086F  2871               	goto	u4820
  8545  0870                     u4821:
  8546  0870  2861               	goto	l3020
  8547  0871                     u4820:
  8548  0871                     l3022:
  8549  0871  085A               	movf	___fltol@sign1,w
  8550  0872  1903               	btfsc	3,2
  8551  0873  2875               	goto	u4831
  8552  0874  2876               	goto	u4830
  8553  0875                     u4831:
  8554  0875  2881               	goto	l554
  8555  0876                     u4830:
  8556  0876                     l3024:
  8557  0876  09D1               	comf	___fltol@f1,f
  8558  0877  09D2               	comf	___fltol@f1+1,f
  8559  0878  09D3               	comf	___fltol@f1+2,f
  8560  0879  09D4               	comf	___fltol@f1+3,f
  8561  087A  0AD1               	incf	___fltol@f1,f
  8562  087B  1903               	skipnz
  8563  087C  0AD2               	incf	___fltol@f1+1,f
  8564  087D  1903               	skipnz
  8565  087E  0AD3               	incf	___fltol@f1+2,f
  8566  087F  1903               	skipnz
  8567  0880  0AD4               	incf	___fltol@f1+3,f
  8568  0881                     l554:
  8569  0881                     l544:
  8570  0881  0008               	return
  8571  0882                     __end_of___fltol:
  8572                           
  8573                           	psect	text19
  8574  1C9B                     __ptext19:	
  8575 ;; *************** function ___flsub *****************
  8576 ;; Defined at:
  8577 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;  a               4   70[BANK0 ] long 
  8580 ;;  b               4   74[BANK0 ] long 
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;		None
  8583 ;; Return value:  Size  Location     Type
  8584 ;;                  4   70[BANK0 ] long 
  8585 ;; Registers used:
  8586 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8587 ;; Tracked objects:
  8588 ;;		On entry : 0/0
  8589 ;;		On exit  : 0/0
  8590 ;;		Unchanged: 0/0
  8591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8592 ;;      Params:         0       8       0       0       0
  8593 ;;      Locals:         0       0       0       0       0
  8594 ;;      Temps:          0       0       0       0       0
  8595 ;;      Totals:         0       8       0       0       0
  8596 ;;Total ram usage:        8 bytes
  8597 ;; Hardware stack levels used:    1
  8598 ;; Hardware stack levels required when called:    1
  8599 ;; This function calls:
  8600 ;;		___fladd
  8601 ;; This function is called by:
  8602 ;;		_sprintf
  8603 ;; This function uses a non-reentrant model
  8604 ;;
  8605                           
  8606                           
  8607                           ;psect for function ___flsub
  8608  1C9B                     ___flsub:
  8609  1C9B                     l3046:	
  8610                           ;incstack = 0
  8611                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8612                           
  8613  1C9B  3080               	movlw	128
  8614  1C9C  1283               	bcf	3,5	;RP0=0, select bank0
  8615  1C9D  1303               	bcf	3,6	;RP1=0, select bank0
  8616  1C9E  06E9               	xorwf	___flsub@a+3,f
  8617  1C9F                     l3048:
  8618  1C9F  086D               	movf	___flsub@b+3,w
  8619  1CA0  00D5               	movwf	___fladd@b+3
  8620  1CA1  086C               	movf	___flsub@b+2,w
  8621  1CA2  00D4               	movwf	___fladd@b+2
  8622  1CA3  086B               	movf	___flsub@b+1,w
  8623  1CA4  00D3               	movwf	___fladd@b+1
  8624  1CA5  086A               	movf	___flsub@b,w
  8625  1CA6  00D2               	movwf	___fladd@b
  8626  1CA7  0869               	movf	___flsub@a+3,w
  8627  1CA8  00D9               	movwf	___fladd@a+3
  8628  1CA9  0868               	movf	___flsub@a+2,w
  8629  1CAA  00D8               	movwf	___fladd@a+2
  8630  1CAB  0867               	movf	___flsub@a+1,w
  8631  1CAC  00D7               	movwf	___fladd@a+1
  8632  1CAD  0866               	movf	___flsub@a,w
  8633  1CAE  00D6               	movwf	___fladd@a
  8634  1CAF  160A  118A  2578  160A  158A  	fcall	___fladd
  8635  1CB4  1283               	bcf	3,5	;RP0=0, select bank0
  8636  1CB5  1303               	bcf	3,6	;RP1=0, select bank0
  8637  1CB6  0855               	movf	?___fladd+3,w
  8638  1CB7  00E9               	movwf	?___flsub+3
  8639  1CB8  0854               	movf	?___fladd+2,w
  8640  1CB9  00E8               	movwf	?___flsub+2
  8641  1CBA  0853               	movf	?___fladd+1,w
  8642  1CBB  00E7               	movwf	?___flsub+1
  8643  1CBC  0852               	movf	?___fladd,w
  8644  1CBD  00E6               	movwf	?___flsub
  8645  1CBE                     l714:
  8646  1CBE  0008               	return
  8647  1CBF                     __end_of___flsub:
  8648                           
  8649                           	psect	text20
  8650  1578                     __ptext20:	
  8651 ;; *************** function ___fladd *****************
  8652 ;; Defined at:
  8653 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8654 ;; Parameters:    Size  Location     Type
  8655 ;;  b               4   50[BANK0 ] long 
  8656 ;;  a               4   54[BANK0 ] long 
  8657 ;; Auto vars:     Size  Location     Type
  8658 ;;  grs             1   69[BANK0 ] unsigned char 
  8659 ;;  bexp            1   68[BANK0 ] unsigned char 
  8660 ;;  aexp            1   67[BANK0 ] unsigned char 
  8661 ;;  signs           1   66[BANK0 ] unsigned char 
  8662 ;; Return value:  Size  Location     Type
  8663 ;;                  4   50[BANK0 ] unsigned char 
  8664 ;; Registers used:
  8665 ;;		wreg, status,2, status,0, btemp+1
  8666 ;; Tracked objects:
  8667 ;;		On entry : 0/0
  8668 ;;		On exit  : 0/0
  8669 ;;		Unchanged: 0/0
  8670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8671 ;;      Params:         0       8       0       0       0
  8672 ;;      Locals:         0       4       0       0       0
  8673 ;;      Temps:          0       8       0       0       0
  8674 ;;      Totals:         0      20       0       0       0
  8675 ;;Total ram usage:       20 bytes
  8676 ;; Hardware stack levels used:    1
  8677 ;; This function calls:
  8678 ;;		Nothing
  8679 ;; This function is called by:
  8680 ;;		_sprintf
  8681 ;;		___flsub
  8682 ;; This function uses a non-reentrant model
  8683 ;;
  8684                           
  8685                           
  8686                           ;psect for function ___fladd
  8687  1578                     ___fladd:
  8688  1578                     l2402:	
  8689                           ;incstack = 0
  8690                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8691                           
  8692  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8693  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8694  157A  0855               	movf	___fladd@b+3,w
  8695  157B  3980               	andlw	128
  8696  157C  00DA               	movwf	??___fladd
  8697  157D  085A               	movf	??___fladd,w
  8698  157E  00E2               	movwf	___fladd@signs
  8699  157F                     l2404:
  8700  157F  0855               	movf	___fladd@b+3,w
  8701  1580  00DA               	movwf	??___fladd
  8702  1581  075A               	addwf	??___fladd,w
  8703  1582  00DB               	movwf	??___fladd+1
  8704  1583  085B               	movf	??___fladd+1,w
  8705  1584  00E4               	movwf	___fladd@bexp
  8706  1585                     l2406:
  8707  1585  1FD4               	btfss	___fladd@b+2,7
  8708  1586  2D88               	goto	u3151
  8709  1587  2D89               	goto	u3150
  8710  1588                     u3151:
  8711  1588  2D8A               	goto	l2410
  8712  1589                     u3150:
  8713  1589                     l2408:
  8714  1589  1464               	bsf	___fladd@bexp,0
  8715  158A                     l2410:
  8716  158A  0864               	movf	___fladd@bexp,w
  8717  158B  1903               	btfsc	3,2
  8718  158C  2D8E               	goto	u3161
  8719  158D  2D8F               	goto	u3160
  8720  158E                     u3161:
  8721  158E  2D9F               	goto	l2420
  8722  158F                     u3160:
  8723  158F                     l2412:
  8724  158F  0A64               	incf	___fladd@bexp,w
  8725  1590  1D03               	btfss	3,2
  8726  1591  2D93               	goto	u3171
  8727  1592  2D94               	goto	u3170
  8728  1593                     u3171:
  8729  1593  2D9C               	goto	l2416
  8730  1594                     u3170:
  8731  1594                     l2414:
  8732  1594  3000               	movlw	0
  8733  1595  00D5               	movwf	___fladd@b+3
  8734  1596  3000               	movlw	0
  8735  1597  00D4               	movwf	___fladd@b+2
  8736  1598  3000               	movlw	0
  8737  1599  00D3               	movwf	___fladd@b+1
  8738  159A  3000               	movlw	0
  8739  159B  00D2               	movwf	___fladd@b
  8740  159C                     l2416:
  8741  159C  17D4               	bsf	___fladd@b+2,7
  8742  159D                     l2418:
  8743  159D  01D5               	clrf	___fladd@b+3
  8744  159E  2DA7               	goto	l2422
  8745  159F                     l2420:
  8746  159F  3000               	movlw	0
  8747  15A0  00D5               	movwf	___fladd@b+3
  8748  15A1  3000               	movlw	0
  8749  15A2  00D4               	movwf	___fladd@b+2
  8750  15A3  3000               	movlw	0
  8751  15A4  00D3               	movwf	___fladd@b+1
  8752  15A5  3000               	movlw	0
  8753  15A6  00D2               	movwf	___fladd@b
  8754  15A7                     l2422:
  8755  15A7  0859               	movf	___fladd@a+3,w
  8756  15A8  3980               	andlw	128
  8757  15A9  00DA               	movwf	??___fladd
  8758  15AA  085A               	movf	??___fladd,w
  8759  15AB  00E3               	movwf	___fladd@aexp
  8760  15AC                     l2424:
  8761  15AC  0863               	movf	___fladd@aexp,w
  8762  15AD  0662               	xorwf	___fladd@signs,w
  8763  15AE  1903               	skipnz
  8764  15AF  2DB1               	goto	u3181
  8765  15B0  2DB2               	goto	u3180
  8766  15B1                     u3181:
  8767  15B1  2DB3               	goto	l2428
  8768  15B2                     u3180:
  8769  15B2                     l2426:
  8770  15B2  1762               	bsf	___fladd@signs,6
  8771  15B3                     l2428:
  8772  15B3  0859               	movf	___fladd@a+3,w
  8773  15B4  00DA               	movwf	??___fladd
  8774  15B5  075A               	addwf	??___fladd,w
  8775  15B6  00DB               	movwf	??___fladd+1
  8776  15B7  085B               	movf	??___fladd+1,w
  8777  15B8  00E3               	movwf	___fladd@aexp
  8778  15B9                     l2430:
  8779  15B9  1FD8               	btfss	___fladd@a+2,7
  8780  15BA  2DBC               	goto	u3191
  8781  15BB  2DBD               	goto	u3190
  8782  15BC                     u3191:
  8783  15BC  2DBE               	goto	l2434
  8784  15BD                     u3190:
  8785  15BD                     l2432:
  8786  15BD  1463               	bsf	___fladd@aexp,0
  8787  15BE                     l2434:
  8788  15BE  0863               	movf	___fladd@aexp,w
  8789  15BF  1903               	btfsc	3,2
  8790  15C0  2DC2               	goto	u3201
  8791  15C1  2DC3               	goto	u3200
  8792  15C2                     u3201:
  8793  15C2  2DD3               	goto	l2444
  8794  15C3                     u3200:
  8795  15C3                     l2436:
  8796  15C3  0A63               	incf	___fladd@aexp,w
  8797  15C4  1D03               	btfss	3,2
  8798  15C5  2DC7               	goto	u3211
  8799  15C6  2DC8               	goto	u3210
  8800  15C7                     u3211:
  8801  15C7  2DD0               	goto	l2440
  8802  15C8                     u3210:
  8803  15C8                     l2438:
  8804  15C8  3000               	movlw	0
  8805  15C9  00D9               	movwf	___fladd@a+3
  8806  15CA  3000               	movlw	0
  8807  15CB  00D8               	movwf	___fladd@a+2
  8808  15CC  3000               	movlw	0
  8809  15CD  00D7               	movwf	___fladd@a+1
  8810  15CE  3000               	movlw	0
  8811  15CF  00D6               	movwf	___fladd@a
  8812  15D0                     l2440:
  8813  15D0  17D8               	bsf	___fladd@a+2,7
  8814  15D1                     l2442:
  8815  15D1  01D9               	clrf	___fladd@a+3
  8816  15D2  2DDB               	goto	l668
  8817  15D3                     l2444:
  8818  15D3  3000               	movlw	0
  8819  15D4  00D9               	movwf	___fladd@a+3
  8820  15D5  3000               	movlw	0
  8821  15D6  00D8               	movwf	___fladd@a+2
  8822  15D7  3000               	movlw	0
  8823  15D8  00D7               	movwf	___fladd@a+1
  8824  15D9  3000               	movlw	0
  8825  15DA  00D6               	movwf	___fladd@a
  8826  15DB                     l668:
  8827  15DB  0864               	movf	___fladd@bexp,w
  8828  15DC  0263               	subwf	___fladd@aexp,w
  8829  15DD  1803               	skipnc
  8830  15DE  2DE0               	goto	u3221
  8831  15DF  2DE1               	goto	u3220
  8832  15E0                     u3221:
  8833  15E0  2E25               	goto	l2480
  8834  15E1                     u3220:
  8835  15E1                     l2446:
  8836  15E1  1F62               	btfss	___fladd@signs,6
  8837  15E2  2DE4               	goto	u3231
  8838  15E3  2DE5               	goto	u3230
  8839  15E4                     u3231:
  8840  15E4  2DE9               	goto	l2450
  8841  15E5                     u3230:
  8842  15E5                     l2448:
  8843  15E5  3080               	movlw	128
  8844  15E6  00DA               	movwf	??___fladd
  8845  15E7  085A               	movf	??___fladd,w
  8846  15E8  06E2               	xorwf	___fladd@signs,f
  8847  15E9                     l2450:
  8848  15E9  0864               	movf	___fladd@bexp,w
  8849  15EA  00DA               	movwf	??___fladd
  8850  15EB  085A               	movf	??___fladd,w
  8851  15EC  00E5               	movwf	___fladd@grs
  8852  15ED                     l2452:
  8853  15ED  0863               	movf	___fladd@aexp,w
  8854  15EE  00DA               	movwf	??___fladd
  8855  15EF  085A               	movf	??___fladd,w
  8856  15F0  00E4               	movwf	___fladd@bexp
  8857  15F1                     l2454:
  8858  15F1  0865               	movf	___fladd@grs,w
  8859  15F2  00DA               	movwf	??___fladd
  8860  15F3  085A               	movf	??___fladd,w
  8861  15F4  00E3               	movwf	___fladd@aexp
  8862  15F5                     l2456:
  8863  15F5  0852               	movf	___fladd@b,w
  8864  15F6  00DA               	movwf	??___fladd
  8865  15F7  085A               	movf	??___fladd,w
  8866  15F8  00E5               	movwf	___fladd@grs
  8867  15F9                     l2458:
  8868  15F9  0856               	movf	___fladd@a,w
  8869  15FA  00DA               	movwf	??___fladd
  8870  15FB  085A               	movf	??___fladd,w
  8871  15FC  00D2               	movwf	___fladd@b
  8872  15FD                     l2460:
  8873  15FD  0865               	movf	___fladd@grs,w
  8874  15FE  00DA               	movwf	??___fladd
  8875  15FF  085A               	movf	??___fladd,w
  8876  1600  00D6               	movwf	___fladd@a
  8877  1601                     l2462:
  8878  1601  0853               	movf	___fladd@b+1,w
  8879  1602  00DA               	movwf	??___fladd
  8880  1603  085A               	movf	??___fladd,w
  8881  1604  00E5               	movwf	___fladd@grs
  8882  1605                     l2464:
  8883  1605  0857               	movf	___fladd@a+1,w
  8884  1606  00DA               	movwf	??___fladd
  8885  1607  085A               	movf	??___fladd,w
  8886  1608  00D3               	movwf	___fladd@b+1
  8887  1609                     l2466:
  8888  1609  0865               	movf	___fladd@grs,w
  8889  160A  00DA               	movwf	??___fladd
  8890  160B  085A               	movf	??___fladd,w
  8891  160C  00D7               	movwf	___fladd@a+1
  8892  160D                     l2468:
  8893  160D  0854               	movf	___fladd@b+2,w
  8894  160E  00DA               	movwf	??___fladd
  8895  160F  085A               	movf	??___fladd,w
  8896  1610  00E5               	movwf	___fladd@grs
  8897  1611                     l2470:
  8898  1611  0858               	movf	___fladd@a+2,w
  8899  1612  00DA               	movwf	??___fladd
  8900  1613  085A               	movf	??___fladd,w
  8901  1614  00D4               	movwf	___fladd@b+2
  8902  1615                     l2472:
  8903  1615  0865               	movf	___fladd@grs,w
  8904  1616  00DA               	movwf	??___fladd
  8905  1617  085A               	movf	??___fladd,w
  8906  1618  00D8               	movwf	___fladd@a+2
  8907  1619                     l2474:
  8908  1619  0855               	movf	___fladd@b+3,w
  8909  161A  00DA               	movwf	??___fladd
  8910  161B  085A               	movf	??___fladd,w
  8911  161C  00E5               	movwf	___fladd@grs
  8912  161D                     l2476:
  8913  161D  0859               	movf	___fladd@a+3,w
  8914  161E  00DA               	movwf	??___fladd
  8915  161F  085A               	movf	??___fladd,w
  8916  1620  00D5               	movwf	___fladd@b+3
  8917  1621                     l2478:
  8918  1621  0865               	movf	___fladd@grs,w
  8919  1622  00DA               	movwf	??___fladd
  8920  1623  085A               	movf	??___fladd,w
  8921  1624  00D9               	movwf	___fladd@a+3
  8922  1625                     l2480:
  8923  1625  01E5               	clrf	___fladd@grs
  8924  1626                     l2482:
  8925  1626  0863               	movf	___fladd@aexp,w
  8926  1627  00DA               	movwf	??___fladd
  8927  1628  01DB               	clrf	??___fladd+1
  8928  1629  085B               	movf	??___fladd+1,w
  8929  162A  00DD               	movwf	??___fladd+3
  8930  162B  0864               	movf	___fladd@bexp,w
  8931  162C  025A               	subwf	??___fladd,w
  8932  162D  00DC               	movwf	??___fladd+2
  8933  162E  1C03               	skipc
  8934  162F  03DD               	decf	??___fladd+3,f
  8935  1630  085D               	movf	??___fladd+3,w
  8936  1631  3A80               	xorlw	128
  8937  1632  00FF               	movwf	btemp+1
  8938  1633  3080               	movlw	128
  8939  1634  027F               	subwf	btemp+1,w
  8940  1635  1D03               	skipz
  8941  1636  2E39               	goto	u3245
  8942  1637  301A               	movlw	26
  8943  1638  025C               	subwf	??___fladd+2,w
  8944  1639                     u3245:
  8945  1639  1C03               	skipc
  8946  163A  2E3C               	goto	u3241
  8947  163B  2E3D               	goto	u3240
  8948  163C                     u3241:
  8949  163C  2E7A               	goto	l2498
  8950  163D                     u3240:
  8951  163D                     l2484:
  8952  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8953  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8954  163F  0855               	movf	___fladd@b+3,w
  8955  1640  0454               	iorwf	___fladd@b+2,w
  8956  1641  0453               	iorwf	___fladd@b+1,w
  8957  1642  0452               	iorwf	___fladd@b,w
  8958  1643  1D03               	skipz
  8959  1644  2E46               	goto	u3251
  8960  1645  2E48               	goto	u3250
  8961  1646                     u3251:
  8962  1646  3001               	movlw	1
  8963  1647  2E49               	goto	u3260
  8964  1648                     u3250:
  8965  1648  3000               	movlw	0
  8966  1649                     u3260:
  8967  1649  00DA               	movwf	??___fladd
  8968  164A  085A               	movf	??___fladd,w
  8969  164B  00E5               	movwf	___fladd@grs
  8970  164C  3000               	movlw	0
  8971  164D  00D5               	movwf	___fladd@b+3
  8972  164E  3000               	movlw	0
  8973  164F  00D4               	movwf	___fladd@b+2
  8974  1650  3000               	movlw	0
  8975  1651  00D3               	movwf	___fladd@b+1
  8976  1652  3000               	movlw	0
  8977  1653  00D2               	movwf	___fladd@b
  8978  1654  0863               	movf	___fladd@aexp,w
  8979  1655  00DA               	movwf	??___fladd
  8980  1656  085A               	movf	??___fladd,w
  8981  1657  00E4               	movwf	___fladd@bexp
  8982  1658  2E82               	goto	l672
  8983  1659                     l674:
  8984  1659  1C65               	btfss	___fladd@grs,0
  8985  165A  2E5C               	goto	u3271
  8986  165B  2E5D               	goto	u3270
  8987  165C                     u3271:
  8988  165C  2E66               	goto	l2488
  8989  165D                     u3270:
  8990  165D                     l2486:
  8991  165D  0865               	movf	___fladd@grs,w
  8992  165E  00DA               	movwf	??___fladd
  8993  165F  1003               	clrc
  8994  1660  0C5A               	rrf	??___fladd,w
  8995  1661  3801               	iorlw	1
  8996  1662  00DB               	movwf	??___fladd+1
  8997  1663  085B               	movf	??___fladd+1,w
  8998  1664  00E5               	movwf	___fladd@grs
  8999  1665  2E68               	goto	l2490
  9000  1666                     l2488:
  9001  1666  1003               	clrc
  9002  1667  0CE5               	rrf	___fladd@grs,f
  9003  1668                     l2490:
  9004  1668  1C52               	btfss	___fladd@b,0
  9005  1669  2E6B               	goto	u3281
  9006  166A  2E6C               	goto	u3280
  9007  166B                     u3281:
  9008  166B  2E6D               	goto	l2494
  9009  166C                     u3280:
  9010  166C                     l2492:
  9011  166C  17E5               	bsf	___fladd@grs,7
  9012  166D                     l2494:
  9013  166D  3001               	movlw	1
  9014  166E  00DA               	movwf	??___fladd
  9015  166F                     u3295:
  9016  166F  0D55               	rlf	___fladd@b+3,w
  9017  1670  0CD5               	rrf	___fladd@b+3,f
  9018  1671  0CD4               	rrf	___fladd@b+2,f
  9019  1672  0CD3               	rrf	___fladd@b+1,f
  9020  1673  0CD2               	rrf	___fladd@b,f
  9021  1674  0BDA               	decfsz	??___fladd& (0+127),f
  9022  1675  2E6F               	goto	u3295
  9023  1676                     l2496:
  9024  1676  3001               	movlw	1
  9025  1677  00DA               	movwf	??___fladd
  9026  1678  085A               	movf	??___fladd,w
  9027  1679  07E4               	addwf	___fladd@bexp,f
  9028  167A                     l2498:
  9029  167A  1283               	bcf	3,5	;RP0=0, select bank0
  9030  167B  1303               	bcf	3,6	;RP1=0, select bank0
  9031  167C  0863               	movf	___fladd@aexp,w
  9032  167D  0264               	subwf	___fladd@bexp,w
  9033  167E  1C03               	skipc
  9034  167F  2E81               	goto	u3301
  9035  1680  2E82               	goto	u3300
  9036  1681                     u3301:
  9037  1681  2E59               	goto	l674
  9038  1682                     u3300:
  9039  1682                     l672:
  9040  1682  1B62               	btfsc	___fladd@signs,6
  9041  1683  2E85               	goto	u3311
  9042  1684  2E86               	goto	u3310
  9043  1685                     u3311:
  9044  1685  2ED1               	goto	l2524
  9045  1686                     u3310:
  9046  1686                     l2500:
  9047  1686  0864               	movf	___fladd@bexp,w
  9048  1687  1D03               	btfss	3,2
  9049  1688  2E8A               	goto	u3321
  9050  1689  2E8B               	goto	u3320
  9051  168A                     u3321:
  9052  168A  2E94               	goto	l2506
  9053  168B                     u3320:
  9054  168B                     l2502:
  9055  168B  3000               	movlw	0
  9056  168C  00D5               	movwf	?___fladd+3
  9057  168D  3000               	movlw	0
  9058  168E  00D4               	movwf	?___fladd+2
  9059  168F  3000               	movlw	0
  9060  1690  00D3               	movwf	?___fladd+1
  9061  1691  3000               	movlw	0
  9062  1692  00D2               	movwf	?___fladd
  9063  1693  2FFF               	goto	l681
  9064  1694                     l2506:
  9065  1694  0856               	movf	___fladd@a,w
  9066  1695  07D2               	addwf	___fladd@b,f
  9067  1696  0857               	movf	___fladd@a+1,w
  9068  1697  1103               	clrz
  9069  1698  1803               	skipnc
  9070  1699  3E01               	addlw	1
  9071  169A  1903               	skipnz
  9072  169B  2E9D               	goto	u3331
  9073  169C  07D3               	addwf	___fladd@b+1,f
  9074  169D                     u3331:
  9075  169D  0858               	movf	___fladd@a+2,w
  9076  169E  1103               	clrz
  9077  169F  1803               	skipnc
  9078  16A0  3E01               	addlw	1
  9079  16A1  1903               	skipnz
  9080  16A2  2EA4               	goto	u3332
  9081  16A3  07D4               	addwf	___fladd@b+2,f
  9082  16A4                     u3332:
  9083  16A4  0859               	movf	___fladd@a+3,w
  9084  16A5  1103               	clrz
  9085  16A6  1803               	skipnc
  9086  16A7  3E01               	addlw	1
  9087  16A8  1903               	skipnz
  9088  16A9  2EAB               	goto	u3333
  9089  16AA  07D5               	addwf	___fladd@b+3,f
  9090  16AB                     u3333:
  9091  16AB                     l2508:
  9092  16AB  1C55               	btfss	___fladd@b+3,0
  9093  16AC  2EAE               	goto	u3341
  9094  16AD  2EAF               	goto	u3340
  9095  16AE                     u3341:
  9096  16AE  2F85               	goto	l2558
  9097  16AF                     u3340:
  9098  16AF                     l2510:
  9099  16AF  1C65               	btfss	___fladd@grs,0
  9100  16B0  2EB2               	goto	u3351
  9101  16B1  2EB3               	goto	u3350
  9102  16B2                     u3351:
  9103  16B2  2EBC               	goto	l2514
  9104  16B3                     u3350:
  9105  16B3                     l2512:
  9106  16B3  0865               	movf	___fladd@grs,w
  9107  16B4  00DA               	movwf	??___fladd
  9108  16B5  1003               	clrc
  9109  16B6  0C5A               	rrf	??___fladd,w
  9110  16B7  3801               	iorlw	1
  9111  16B8  00DB               	movwf	??___fladd+1
  9112  16B9  085B               	movf	??___fladd+1,w
  9113  16BA  00E5               	movwf	___fladd@grs
  9114  16BB  2EBE               	goto	l2516
  9115  16BC                     l2514:
  9116  16BC  1003               	clrc
  9117  16BD  0CE5               	rrf	___fladd@grs,f
  9118  16BE                     l2516:
  9119  16BE  1C52               	btfss	___fladd@b,0
  9120  16BF  2EC1               	goto	u3361
  9121  16C0  2EC2               	goto	u3360
  9122  16C1                     u3361:
  9123  16C1  2EC3               	goto	l2520
  9124  16C2                     u3360:
  9125  16C2                     l2518:
  9126  16C2  17E5               	bsf	___fladd@grs,7
  9127  16C3                     l2520:
  9128  16C3  3001               	movlw	1
  9129  16C4  00DA               	movwf	??___fladd
  9130  16C5                     u3375:
  9131  16C5  0D55               	rlf	___fladd@b+3,w
  9132  16C6  0CD5               	rrf	___fladd@b+3,f
  9133  16C7  0CD4               	rrf	___fladd@b+2,f
  9134  16C8  0CD3               	rrf	___fladd@b+1,f
  9135  16C9  0CD2               	rrf	___fladd@b,f
  9136  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  9137  16CB  2EC5               	goto	u3375
  9138  16CC                     l2522:
  9139  16CC  3001               	movlw	1
  9140  16CD  00DA               	movwf	??___fladd
  9141  16CE  085A               	movf	??___fladd,w
  9142  16CF  07E4               	addwf	___fladd@bexp,f
  9143  16D0  2F85               	goto	l2558
  9144  16D1                     l2524:
  9145  16D1  0855               	movf	___fladd@b+3,w
  9146  16D2  3A80               	xorlw	128
  9147  16D3  00FF               	movwf	btemp+1
  9148  16D4  0859               	movf	___fladd@a+3,w
  9149  16D5  3A80               	xorlw	128
  9150  16D6  027F               	subwf	btemp+1,w
  9151  16D7  1D03               	skipz
  9152  16D8  2EE3               	goto	u3383
  9153  16D9  0858               	movf	___fladd@a+2,w
  9154  16DA  0254               	subwf	___fladd@b+2,w
  9155  16DB  1D03               	skipz
  9156  16DC  2EE3               	goto	u3383
  9157  16DD  0857               	movf	___fladd@a+1,w
  9158  16DE  0253               	subwf	___fladd@b+1,w
  9159  16DF  1D03               	skipz
  9160  16E0  2EE3               	goto	u3383
  9161  16E1  0856               	movf	___fladd@a,w
  9162  16E2  0252               	subwf	___fladd@b,w
  9163  16E3                     u3383:
  9164  16E3  1803               	skipnc
  9165  16E4  2EE6               	goto	u3381
  9166  16E5  2EE7               	goto	u3380
  9167  16E6                     u3381:
  9168  16E6  2F3F               	goto	l2534
  9169  16E7                     u3380:
  9170  16E7                     l2526:
  9171  16E7  30FF               	movlw	255
  9172  16E8  00DA               	movwf	??___fladd
  9173  16E9  30FF               	movlw	255
  9174  16EA  00DB               	movwf	??___fladd+1
  9175  16EB  30FF               	movlw	255
  9176  16EC  00DC               	movwf	??___fladd+2
  9177  16ED  30FF               	movlw	255
  9178  16EE  00DD               	movwf	??___fladd+3
  9179  16EF  0856               	movf	___fladd@a,w
  9180  16F0  00DE               	movwf	??___fladd+4
  9181  16F1  0857               	movf	___fladd@a+1,w
  9182  16F2  00DF               	movwf	??___fladd+5
  9183  16F3  0858               	movf	___fladd@a+2,w
  9184  16F4  00E0               	movwf	??___fladd+6
  9185  16F5  0859               	movf	___fladd@a+3,w
  9186  16F6  00E1               	movwf	??___fladd+7
  9187  16F7  0852               	movf	___fladd@b,w
  9188  16F8  02DE               	subwf	??___fladd+4,f
  9189  16F9  0853               	movf	___fladd@b+1,w
  9190  16FA  1C03               	skipc
  9191  16FB  0F53               	incfsz	___fladd@b+1,w
  9192  16FC  2EFE               	goto	u3391
  9193  16FD  2EFF               	goto	u3392
  9194  16FE                     u3391:
  9195  16FE  02DF               	subwf	??___fladd+5,f
  9196  16FF                     u3392:
  9197  16FF  0854               	movf	___fladd@b+2,w
  9198  1700  1C03               	skipc
  9199  1701  0F54               	incfsz	___fladd@b+2,w
  9200  1702  2F04               	goto	u3393
  9201  1703  2F05               	goto	u3394
  9202  1704                     u3393:
  9203  1704  02E0               	subwf	??___fladd+6,f
  9204  1705                     u3394:
  9205  1705  0855               	movf	___fladd@b+3,w
  9206  1706  1C03               	skipc
  9207  1707  0F55               	incfsz	___fladd@b+3,w
  9208  1708  2F0A               	goto	u3395
  9209  1709  2F0B               	goto	u3396
  9210  170A                     u3395:
  9211  170A  02E1               	subwf	??___fladd+7,f
  9212  170B                     u3396:
  9213  170B  085E               	movf	??___fladd+4,w
  9214  170C  07DA               	addwf	??___fladd,f
  9215  170D  085F               	movf	??___fladd+5,w
  9216  170E  1803               	skipnc
  9217  170F  0F5F               	incfsz	??___fladd+5,w
  9218  1710  2F12               	goto	u3400
  9219  1711  2F13               	goto	u3401
  9220  1712                     u3400:
  9221  1712  07DB               	addwf	??___fladd+1,f
  9222  1713                     u3401:
  9223  1713  0860               	movf	??___fladd+6,w
  9224  1714  1803               	skipnc
  9225  1715  0F60               	incfsz	??___fladd+6,w
  9226  1716  2F18               	goto	u3402
  9227  1717  2F19               	goto	u3403
  9228  1718                     u3402:
  9229  1718  07DC               	addwf	??___fladd+2,f
  9230  1719                     u3403:
  9231  1719  0861               	movf	??___fladd+7,w
  9232  171A  1803               	skipnc
  9233  171B  0A61               	incf	??___fladd+7,w
  9234  171C  07DD               	addwf	??___fladd+3,f
  9235  171D  085D               	movf	??___fladd+3,w
  9236  171E  00D5               	movwf	___fladd@b+3
  9237  171F  085C               	movf	??___fladd+2,w
  9238  1720  00D4               	movwf	___fladd@b+2
  9239  1721  085B               	movf	??___fladd+1,w
  9240  1722  00D3               	movwf	___fladd@b+1
  9241  1723  085A               	movf	??___fladd,w
  9242  1724  00D2               	movwf	___fladd@b
  9243  1725                     l2528:
  9244  1725  3080               	movlw	128
  9245  1726  00DA               	movwf	??___fladd
  9246  1727  085A               	movf	??___fladd,w
  9247  1728  06E2               	xorwf	___fladd@signs,f
  9248  1729  09E5               	comf	___fladd@grs,f
  9249  172A  0AE5               	incf	___fladd@grs,f
  9250  172B                     l2530:
  9251  172B  0865               	movf	___fladd@grs,w
  9252  172C  1D03               	btfss	3,2
  9253  172D  2F2F               	goto	u3411
  9254  172E  2F30               	goto	u3410
  9255  172F                     u3411:
  9256  172F  2F4D               	goto	l689
  9257  1730                     u3410:
  9258  1730                     l2532:
  9259  1730  3001               	movlw	1
  9260  1731  07D2               	addwf	___fladd@b,f
  9261  1732  3000               	movlw	0
  9262  1733  1803               	skipnc
  9263  1734  3001               	movlw	1
  9264  1735  07D3               	addwf	___fladd@b+1,f
  9265  1736  3000               	movlw	0
  9266  1737  1803               	skipnc
  9267  1738  3001               	movlw	1
  9268  1739  07D4               	addwf	___fladd@b+2,f
  9269  173A  3000               	movlw	0
  9270  173B  1803               	skipnc
  9271  173C  3001               	movlw	1
  9272  173D  07D5               	addwf	___fladd@b+3,f
  9273  173E  2F4D               	goto	l689
  9274  173F                     l2534:
  9275  173F  0856               	movf	___fladd@a,w
  9276  1740  02D2               	subwf	___fladd@b,f
  9277  1741  0857               	movf	___fladd@a+1,w
  9278  1742  1C03               	skipc
  9279  1743  0F57               	incfsz	___fladd@a+1,w
  9280  1744  02D3               	subwf	___fladd@b+1,f
  9281  1745  0858               	movf	___fladd@a+2,w
  9282  1746  1C03               	skipc
  9283  1747  0F58               	incfsz	___fladd@a+2,w
  9284  1748  02D4               	subwf	___fladd@b+2,f
  9285  1749  0859               	movf	___fladd@a+3,w
  9286  174A  1C03               	skipc
  9287  174B  0F59               	incfsz	___fladd@a+3,w
  9288  174C  02D5               	subwf	___fladd@b+3,f
  9289  174D                     l689:
  9290  174D  0855               	movf	___fladd@b+3,w
  9291  174E  0454               	iorwf	___fladd@b+2,w
  9292  174F  0453               	iorwf	___fladd@b+1,w
  9293  1750  0452               	iorwf	___fladd@b,w
  9294  1751  1D03               	skipz
  9295  1752  2F54               	goto	u3421
  9296  1753  2F55               	goto	u3420
  9297  1754                     u3421:
  9298  1754  2F81               	goto	l2556
  9299  1755                     u3420:
  9300  1755                     l2536:
  9301  1755  0865               	movf	___fladd@grs,w
  9302  1756  1D03               	btfss	3,2
  9303  1757  2F59               	goto	u3431
  9304  1758  2F5A               	goto	u3430
  9305  1759                     u3431:
  9306  1759  2F81               	goto	l2556
  9307  175A                     u3430:
  9308  175A                     l2538:
  9309  175A  3000               	movlw	0
  9310  175B  00D5               	movwf	?___fladd+3
  9311  175C  3000               	movlw	0
  9312  175D  00D4               	movwf	?___fladd+2
  9313  175E  3000               	movlw	0
  9314  175F  00D3               	movwf	?___fladd+1
  9315  1760  3000               	movlw	0
  9316  1761  00D2               	movwf	?___fladd
  9317  1762  2FFF               	goto	l681
  9318  1763                     l2542:
  9319  1763  3001               	movlw	1
  9320  1764  00DA               	movwf	??___fladd
  9321  1765                     u3445:
  9322  1765  1003               	clrc
  9323  1766  0DD2               	rlf	___fladd@b,f
  9324  1767  0DD3               	rlf	___fladd@b+1,f
  9325  1768  0DD4               	rlf	___fladd@b+2,f
  9326  1769  0DD5               	rlf	___fladd@b+3,f
  9327  176A  0BDA               	decfsz	??___fladd,f
  9328  176B  2F65               	goto	u3445
  9329  176C                     l2544:
  9330  176C  1FE5               	btfss	___fladd@grs,7
  9331  176D  2F6F               	goto	u3451
  9332  176E  2F70               	goto	u3450
  9333  176F                     u3451:
  9334  176F  2F71               	goto	l693
  9335  1770                     u3450:
  9336  1770                     l2546:
  9337  1770  1452               	bsf	___fladd@b,0
  9338  1771                     l693:
  9339  1771  1C65               	btfss	___fladd@grs,0
  9340  1772  2F74               	goto	u3461
  9341  1773  2F75               	goto	u3460
  9342  1774                     u3461:
  9343  1774  2F78               	goto	l2550
  9344  1775                     u3460:
  9345  1775                     l2548:
  9346  1775  1403               	setc
  9347  1776  0DE5               	rlf	___fladd@grs,f
  9348  1777  2F7A               	goto	l2552
  9349  1778                     l2550:
  9350  1778  1003               	clrc
  9351  1779  0DE5               	rlf	___fladd@grs,f
  9352  177A                     l2552:
  9353  177A  0864               	movf	___fladd@bexp,w
  9354  177B  1903               	btfsc	3,2
  9355  177C  2F7E               	goto	u3471
  9356  177D  2F7F               	goto	u3470
  9357  177E                     u3471:
  9358  177E  2F81               	goto	l2556
  9359  177F                     u3470:
  9360  177F                     l2554:
  9361  177F  3001               	movlw	1
  9362  1780  02E4               	subwf	___fladd@bexp,f
  9363  1781                     l2556:
  9364  1781  1FD4               	btfss	___fladd@b+2,7
  9365  1782  2F84               	goto	u3481
  9366  1783  2F85               	goto	u3480
  9367  1784                     u3481:
  9368  1784  2F63               	goto	l2542
  9369  1785                     u3480:
  9370  1785                     l2558:
  9371  1785  01E3               	clrf	___fladd@aexp
  9372  1786                     l2560:
  9373  1786  1FE5               	btfss	___fladd@grs,7
  9374  1787  2F89               	goto	u3491
  9375  1788  2F8A               	goto	u3490
  9376  1789                     u3491:
  9377  1789  2F98               	goto	l2568
  9378  178A                     u3490:
  9379  178A                     l2562:
  9380  178A  0865               	movf	___fladd@grs,w
  9381  178B  397F               	andlw	127
  9382  178C  1903               	btfsc	3,2
  9383  178D  2F8F               	goto	u3501
  9384  178E  2F90               	goto	u3500
  9385  178F                     u3501:
  9386  178F  2F93               	goto	l699
  9387  1790                     u3500:
  9388  1790                     l2564:
  9389  1790  01E3               	clrf	___fladd@aexp
  9390  1791  0AE3               	incf	___fladd@aexp,f
  9391  1792  2F98               	goto	l2568
  9392  1793                     l699:
  9393  1793  1C52               	btfss	___fladd@b,0
  9394  1794  2F96               	goto	u3511
  9395  1795  2F97               	goto	u3510
  9396  1796                     u3511:
  9397  1796  2F98               	goto	l2568
  9398  1797                     u3510:
  9399  1797  2F90               	goto	l2564
  9400  1798                     l2568:
  9401  1798  0863               	movf	___fladd@aexp,w
  9402  1799  1903               	btfsc	3,2
  9403  179A  2F9C               	goto	u3521
  9404  179B  2F9D               	goto	u3520
  9405  179C                     u3521:
  9406  179C  2FD1               	goto	l702
  9407  179D                     u3520:
  9408  179D                     l2570:
  9409  179D  3001               	movlw	1
  9410  179E  07D2               	addwf	___fladd@b,f
  9411  179F  3000               	movlw	0
  9412  17A0  1803               	skipnc
  9413  17A1  3001               	movlw	1
  9414  17A2  07D3               	addwf	___fladd@b+1,f
  9415  17A3  3000               	movlw	0
  9416  17A4  1803               	skipnc
  9417  17A5  3001               	movlw	1
  9418  17A6  07D4               	addwf	___fladd@b+2,f
  9419  17A7  3000               	movlw	0
  9420  17A8  1803               	skipnc
  9421  17A9  3001               	movlw	1
  9422  17AA  07D5               	addwf	___fladd@b+3,f
  9423  17AB                     l2572:
  9424  17AB  1C55               	btfss	___fladd@b+3,0
  9425  17AC  2FAE               	goto	u3531
  9426  17AD  2FAF               	goto	u3530
  9427  17AE                     u3531:
  9428  17AE  2FD1               	goto	l702
  9429  17AF                     u3530:
  9430  17AF                     l2574:
  9431  17AF  0852               	movf	___fladd@b,w
  9432  17B0  00DA               	movwf	??___fladd
  9433  17B1  0853               	movf	___fladd@b+1,w
  9434  17B2  00DB               	movwf	??___fladd+1
  9435  17B3  0854               	movf	___fladd@b+2,w
  9436  17B4  00DC               	movwf	??___fladd+2
  9437  17B5  0855               	movf	___fladd@b+3,w
  9438  17B6  00DD               	movwf	??___fladd+3
  9439  17B7  3001               	movlw	1
  9440  17B8  00DE               	movwf	??___fladd+4
  9441  17B9                     u3545:
  9442  17B9  0D5D               	rlf	??___fladd+3,w
  9443  17BA  0CDD               	rrf	??___fladd+3,f
  9444  17BB  0CDC               	rrf	??___fladd+2,f
  9445  17BC  0CDB               	rrf	??___fladd+1,f
  9446  17BD  0CDA               	rrf	??___fladd,f
  9447  17BE                     u3540:
  9448  17BE  0BDE               	decfsz	??___fladd+4,f
  9449  17BF  2FB9               	goto	u3545
  9450  17C0  085D               	movf	??___fladd+3,w
  9451  17C1  00D5               	movwf	___fladd@b+3
  9452  17C2  085C               	movf	??___fladd+2,w
  9453  17C3  00D4               	movwf	___fladd@b+2
  9454  17C4  085B               	movf	??___fladd+1,w
  9455  17C5  00D3               	movwf	___fladd@b+1
  9456  17C6  085A               	movf	??___fladd,w
  9457  17C7  00D2               	movwf	___fladd@b
  9458  17C8  0A64               	incf	___fladd@bexp,w
  9459  17C9  1903               	btfsc	3,2
  9460  17CA  2FCC               	goto	u3551
  9461  17CB  2FCD               	goto	u3550
  9462  17CC                     u3551:
  9463  17CC  2FD1               	goto	l702
  9464  17CD                     u3550:
  9465  17CD                     l2576:
  9466  17CD  3001               	movlw	1
  9467  17CE  00DA               	movwf	??___fladd
  9468  17CF  085A               	movf	??___fladd,w
  9469  17D0  07E4               	addwf	___fladd@bexp,f
  9470  17D1                     l702:
  9471  17D1  0A64               	incf	___fladd@bexp,w
  9472  17D2  1903               	btfsc	3,2
  9473  17D3  2FD5               	goto	u3561
  9474  17D4  2FD6               	goto	u3560
  9475  17D5                     u3561:
  9476  17D5  2FDB               	goto	l2580
  9477  17D6                     u3560:
  9478  17D6                     l2578:
  9479  17D6  0864               	movf	___fladd@bexp,w
  9480  17D7  1D03               	btfss	3,2
  9481  17D8  2FDA               	goto	u3571
  9482  17D9  2FDB               	goto	u3570
  9483  17DA                     u3571:
  9484  17DA  2FE9               	goto	l2586
  9485  17DB                     u3570:
  9486  17DB                     l2580:
  9487  17DB  3000               	movlw	0
  9488  17DC  00D5               	movwf	___fladd@b+3
  9489  17DD  3000               	movlw	0
  9490  17DE  00D4               	movwf	___fladd@b+2
  9491  17DF  3000               	movlw	0
  9492  17E0  00D3               	movwf	___fladd@b+1
  9493  17E1  3000               	movlw	0
  9494  17E2  00D2               	movwf	___fladd@b
  9495  17E3                     l2582:
  9496  17E3  0864               	movf	___fladd@bexp,w
  9497  17E4  1D03               	btfss	3,2
  9498  17E5  2FE7               	goto	u3581
  9499  17E6  2FE8               	goto	u3580
  9500  17E7                     u3581:
  9501  17E7  2FE9               	goto	l2586
  9502  17E8                     u3580:
  9503  17E8                     l2584:
  9504  17E8  01E2               	clrf	___fladd@signs
  9505  17E9                     l2586:
  9506  17E9  1C64               	btfss	___fladd@bexp,0
  9507  17EA  2FEC               	goto	u3591
  9508  17EB  2FED               	goto	u3590
  9509  17EC                     u3591:
  9510  17EC  2FEF               	goto	l2590
  9511  17ED                     u3590:
  9512  17ED                     l2588:
  9513  17ED  17D4               	bsf	___fladd@b+2,7
  9514  17EE  2FF3               	goto	l710
  9515  17EF                     l2590:
  9516  17EF  307F               	movlw	127
  9517  17F0  00DA               	movwf	??___fladd
  9518  17F1  085A               	movf	??___fladd,w
  9519  17F2  05D4               	andwf	___fladd@b+2,f
  9520  17F3                     l710:
  9521  17F3  0864               	movf	___fladd@bexp,w
  9522  17F4  00DA               	movwf	??___fladd
  9523  17F5  1003               	clrc
  9524  17F6  0C5A               	rrf	??___fladd,w
  9525  17F7  00DB               	movwf	??___fladd+1
  9526  17F8  085B               	movf	??___fladd+1,w
  9527  17F9  00D5               	movwf	___fladd@b+3
  9528  17FA                     l2592:
  9529  17FA  1FE2               	btfss	___fladd@signs,7
  9530  17FB  2FFD               	goto	u3601
  9531  17FC  2FFE               	goto	u3600
  9532  17FD                     u3601:
  9533  17FD  2FFF               	goto	l711
  9534  17FE                     u3600:
  9535  17FE                     l2594:
  9536  17FE  17D5               	bsf	___fladd@b+3,7
  9537  17FF                     l711:
  9538  17FF                     l681:
  9539  17FF  0008               	return
  9540  1800                     __end_of___fladd:
  9541                           
  9542                           	psect	text21
  9543  0004                     __ptext21:	
  9544 ;; *************** function ___flneg *****************
  9545 ;; Defined at:
  9546 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  9547 ;; Parameters:    Size  Location     Type
  9548 ;;  f1              4    0[COMMON] unsigned char 
  9549 ;; Auto vars:     Size  Location     Type
  9550 ;;		None
  9551 ;; Return value:  Size  Location     Type
  9552 ;;                  4    0[COMMON] unsigned char 
  9553 ;; Registers used:
  9554 ;;		wreg
  9555 ;; Tracked objects:
  9556 ;;		On entry : 0/0
  9557 ;;		On exit  : 0/0
  9558 ;;		Unchanged: 0/0
  9559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9560 ;;      Params:         4       0       0       0       0
  9561 ;;      Locals:         0       0       0       0       0
  9562 ;;      Temps:          0       0       0       0       0
  9563 ;;      Totals:         4       0       0       0       0
  9564 ;;Total ram usage:        4 bytes
  9565 ;; Hardware stack levels used:    1
  9566 ;; This function calls:
  9567 ;;		Nothing
  9568 ;; This function is called by:
  9569 ;;		_sprintf
  9570 ;; This function uses a non-reentrant model
  9571 ;;
  9572                           
  9573                           
  9574                           ;psect for function ___flneg
  9575  0004                     ___flneg:
  9576  0004                     l2982:	
  9577                           ;incstack = 0
  9578                           ; Regs used in ___flneg: [wreg]
  9579                           
  9580  0004  0873               	movf	___flneg@f1+3,w
  9581  0005  0472               	iorwf	___flneg@f1+2,w
  9582  0006  0471               	iorwf	___flneg@f1+1,w
  9583  0007  0470               	iorwf	___flneg@f1,w
  9584  0008  1903               	skipnz
  9585  0009  280B               	goto	u4731
  9586  000A  280C               	goto	u4730
  9587  000B                     u4731:
  9588  000B  280E               	goto	l2986
  9589  000C                     u4730:
  9590  000C                     l2984:
  9591  000C  3080               	movlw	128
  9592  000D  06F3               	xorwf	___flneg@f1+3,f
  9593  000E                     l2986:
  9594  000E                     l540:
  9595  000E  0008               	return
  9596  000F                     __end_of___flneg:
  9597                           
  9598                           	psect	text22
  9599  100A                     __ptext22:	
  9600 ;; *************** function ___flge *****************
  9601 ;; Defined at:
  9602 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;  ff1             4    0[COMMON] unsigned char 
  9605 ;;  ff2             4    4[COMMON] unsigned char 
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;		None
  9608 ;; Return value:  Size  Location     Type
  9609 ;;		None               void
  9610 ;; Registers used:
  9611 ;;		wreg, status,2, status,0
  9612 ;; Tracked objects:
  9613 ;;		On entry : 0/0
  9614 ;;		On exit  : 0/0
  9615 ;;		Unchanged: 0/0
  9616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9617 ;;      Params:         8       0       0       0       0
  9618 ;;      Locals:         0       0       0       0       0
  9619 ;;      Temps:          4       0       0       0       0
  9620 ;;      Totals:        12       0       0       0       0
  9621 ;;Total ram usage:       12 bytes
  9622 ;; Hardware stack levels used:    1
  9623 ;; This function calls:
  9624 ;;		Nothing
  9625 ;; This function is called by:
  9626 ;;		_sprintf
  9627 ;; This function uses a non-reentrant model
  9628 ;;
  9629                           
  9630                           
  9631                           ;psect for function ___flge
  9632  100A                     ___flge:
  9633  100A                     l2962:	
  9634                           ;incstack = 0
  9635                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9636                           
  9637  100A  3000               	movlw	0
  9638  100B  0570               	andwf	___flge@ff1,w
  9639  100C  00F8               	movwf	??___flge
  9640  100D  3000               	movlw	0
  9641  100E  0571               	andwf	___flge@ff1+1,w
  9642  100F  00F9               	movwf	??___flge+1
  9643  1010  3080               	movlw	128
  9644  1011  0572               	andwf	___flge@ff1+2,w
  9645  1012  00FA               	movwf	??___flge+2
  9646  1013  307F               	movlw	127
  9647  1014  0573               	andwf	___flge@ff1+3,w
  9648  1015  00FB               	movwf	??___flge+3
  9649  1016  087B               	movf	??___flge+3,w
  9650  1017  047A               	iorwf	??___flge+2,w
  9651  1018  0479               	iorwf	??___flge+1,w
  9652  1019  0478               	iorwf	??___flge,w
  9653  101A  1D03               	skipz
  9654  101B  281D               	goto	u4661
  9655  101C  281E               	goto	u4660
  9656  101D                     u4661:
  9657  101D  2826               	goto	l532
  9658  101E                     u4660:
  9659  101E                     l2964:
  9660  101E  3000               	movlw	0
  9661  101F  00F3               	movwf	___flge@ff1+3
  9662  1020  3000               	movlw	0
  9663  1021  00F2               	movwf	___flge@ff1+2
  9664  1022  3000               	movlw	0
  9665  1023  00F1               	movwf	___flge@ff1+1
  9666  1024  3000               	movlw	0
  9667  1025  00F0               	movwf	___flge@ff1
  9668  1026                     l532:
  9669  1026  3000               	movlw	0
  9670  1027  0574               	andwf	___flge@ff2,w
  9671  1028  00F8               	movwf	??___flge
  9672  1029  3000               	movlw	0
  9673  102A  0575               	andwf	___flge@ff2+1,w
  9674  102B  00F9               	movwf	??___flge+1
  9675  102C  3080               	movlw	128
  9676  102D  0576               	andwf	___flge@ff2+2,w
  9677  102E  00FA               	movwf	??___flge+2
  9678  102F  307F               	movlw	127
  9679  1030  0577               	andwf	___flge@ff2+3,w
  9680  1031  00FB               	movwf	??___flge+3
  9681  1032  087B               	movf	??___flge+3,w
  9682  1033  047A               	iorwf	??___flge+2,w
  9683  1034  0479               	iorwf	??___flge+1,w
  9684  1035  0478               	iorwf	??___flge,w
  9685  1036  1D03               	skipz
  9686  1037  2839               	goto	u4671
  9687  1038  283A               	goto	u4670
  9688  1039                     u4671:
  9689  1039  2842               	goto	l2968
  9690  103A                     u4670:
  9691  103A                     l2966:
  9692  103A  3000               	movlw	0
  9693  103B  00F7               	movwf	___flge@ff2+3
  9694  103C  3000               	movlw	0
  9695  103D  00F6               	movwf	___flge@ff2+2
  9696  103E  3000               	movlw	0
  9697  103F  00F5               	movwf	___flge@ff2+1
  9698  1040  3000               	movlw	0
  9699  1041  00F4               	movwf	___flge@ff2
  9700  1042                     l2968:
  9701  1042  1FF3               	btfss	___flge@ff1+3,7
  9702  1043  2845               	goto	u4681
  9703  1044  2846               	goto	u4680
  9704  1045                     u4681:
  9705  1045  286A               	goto	l2972
  9706  1046                     u4680:
  9707  1046                     l2970:
  9708  1046  3000               	movlw	0
  9709  1047  00F8               	movwf	??___flge
  9710  1048  3000               	movlw	0
  9711  1049  00F9               	movwf	??___flge+1
  9712  104A  3000               	movlw	0
  9713  104B  00FA               	movwf	??___flge+2
  9714  104C  3080               	movlw	128
  9715  104D  00FB               	movwf	??___flge+3
  9716  104E  0870               	movf	___flge@ff1,w
  9717  104F  02F8               	subwf	??___flge,f
  9718  1050  0871               	movf	___flge@ff1+1,w
  9719  1051  1C03               	skipc
  9720  1052  0F71               	incfsz	___flge@ff1+1,w
  9721  1053  2855               	goto	u4691
  9722  1054  2856               	goto	u4692
  9723  1055                     u4691:
  9724  1055  02F9               	subwf	??___flge+1,f
  9725  1056                     u4692:
  9726  1056  0872               	movf	___flge@ff1+2,w
  9727  1057  1C03               	skipc
  9728  1058  0F72               	incfsz	___flge@ff1+2,w
  9729  1059  285B               	goto	u4693
  9730  105A  285C               	goto	u4694
  9731  105B                     u4693:
  9732  105B  02FA               	subwf	??___flge+2,f
  9733  105C                     u4694:
  9734  105C  0873               	movf	___flge@ff1+3,w
  9735  105D  1C03               	skipc
  9736  105E  0F73               	incfsz	___flge@ff1+3,w
  9737  105F  2861               	goto	u4695
  9738  1060  2862               	goto	u4696
  9739  1061                     u4695:
  9740  1061  02FB               	subwf	??___flge+3,f
  9741  1062                     u4696:
  9742  1062  087B               	movf	??___flge+3,w
  9743  1063  00F3               	movwf	___flge@ff1+3
  9744  1064  087A               	movf	??___flge+2,w
  9745  1065  00F2               	movwf	___flge@ff1+2
  9746  1066  0879               	movf	??___flge+1,w
  9747  1067  00F1               	movwf	___flge@ff1+1
  9748  1068  0878               	movf	??___flge,w
  9749  1069  00F0               	movwf	___flge@ff1
  9750  106A                     l2972:
  9751  106A  1FF7               	btfss	___flge@ff2+3,7
  9752  106B  286D               	goto	u4701
  9753  106C  286E               	goto	u4700
  9754  106D                     u4701:
  9755  106D  2892               	goto	l535
  9756  106E                     u4700:
  9757  106E                     l2974:
  9758  106E  3000               	movlw	0
  9759  106F  00F8               	movwf	??___flge
  9760  1070  3000               	movlw	0
  9761  1071  00F9               	movwf	??___flge+1
  9762  1072  3000               	movlw	0
  9763  1073  00FA               	movwf	??___flge+2
  9764  1074  3080               	movlw	128
  9765  1075  00FB               	movwf	??___flge+3
  9766  1076  0874               	movf	___flge@ff2,w
  9767  1077  02F8               	subwf	??___flge,f
  9768  1078  0875               	movf	___flge@ff2+1,w
  9769  1079  1C03               	skipc
  9770  107A  0F75               	incfsz	___flge@ff2+1,w
  9771  107B  287D               	goto	u4711
  9772  107C  287E               	goto	u4712
  9773  107D                     u4711:
  9774  107D  02F9               	subwf	??___flge+1,f
  9775  107E                     u4712:
  9776  107E  0876               	movf	___flge@ff2+2,w
  9777  107F  1C03               	skipc
  9778  1080  0F76               	incfsz	___flge@ff2+2,w
  9779  1081  2883               	goto	u4713
  9780  1082  2884               	goto	u4714
  9781  1083                     u4713:
  9782  1083  02FA               	subwf	??___flge+2,f
  9783  1084                     u4714:
  9784  1084  0877               	movf	___flge@ff2+3,w
  9785  1085  1C03               	skipc
  9786  1086  0F77               	incfsz	___flge@ff2+3,w
  9787  1087  2889               	goto	u4715
  9788  1088  288A               	goto	u4716
  9789  1089                     u4715:
  9790  1089  02FB               	subwf	??___flge+3,f
  9791  108A                     u4716:
  9792  108A  087B               	movf	??___flge+3,w
  9793  108B  00F7               	movwf	___flge@ff2+3
  9794  108C  087A               	movf	??___flge+2,w
  9795  108D  00F6               	movwf	___flge@ff2+2
  9796  108E  0879               	movf	??___flge+1,w
  9797  108F  00F5               	movwf	___flge@ff2+1
  9798  1090  0878               	movf	??___flge,w
  9799  1091  00F4               	movwf	___flge@ff2
  9800  1092                     l535:
  9801  1092  3080               	movlw	128
  9802  1093  06F3               	xorwf	___flge@ff1+3,f
  9803  1094  3080               	movlw	128
  9804  1095  06F7               	xorwf	___flge@ff2+3,f
  9805  1096  0877               	movf	___flge@ff2+3,w
  9806  1097  0273               	subwf	___flge@ff1+3,w
  9807  1098  1D03               	skipz
  9808  1099  28A4               	goto	u4725
  9809  109A  0876               	movf	___flge@ff2+2,w
  9810  109B  0272               	subwf	___flge@ff1+2,w
  9811  109C  1D03               	skipz
  9812  109D  28A4               	goto	u4725
  9813  109E  0875               	movf	___flge@ff2+1,w
  9814  109F  0271               	subwf	___flge@ff1+1,w
  9815  10A0  1D03               	skipz
  9816  10A1  28A4               	goto	u4725
  9817  10A2  0874               	movf	___flge@ff2,w
  9818  10A3  0270               	subwf	___flge@ff1,w
  9819  10A4                     u4725:
  9820  10A4  1803               	skipnc
  9821  10A5  28A7               	goto	u4721
  9822  10A6  28A8               	goto	u4720
  9823  10A7                     u4721:
  9824  10A7  28AA               	goto	l2978
  9825  10A8                     u4720:
  9826  10A8                     l2976:
  9827  10A8  1003               	clrc
  9828  10A9  28AB               	goto	l536
  9829  10AA                     l2978:
  9830  10AA  1403               	setc
  9831  10AB                     l536:
  9832  10AB  0008               	return
  9833  10AC                     __end_of___flge:
  9834                           
  9835                           	psect	text23
  9836  1D89                     __ptext23:	
  9837 ;; *************** function ___fleq *****************
  9838 ;; Defined at:
  9839 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  9840 ;; Parameters:    Size  Location     Type
  9841 ;;  ff1             4    0[COMMON] unsigned char 
  9842 ;;  ff2             4    4[COMMON] unsigned char 
  9843 ;; Auto vars:     Size  Location     Type
  9844 ;;		None
  9845 ;; Return value:  Size  Location     Type
  9846 ;;		None               void
  9847 ;; Registers used:
  9848 ;;		wreg, status,2, status,0
  9849 ;; Tracked objects:
  9850 ;;		On entry : 0/0
  9851 ;;		On exit  : 0/0
  9852 ;;		Unchanged: 0/0
  9853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9854 ;;      Params:         8       0       0       0       0
  9855 ;;      Locals:         0       0       0       0       0
  9856 ;;      Temps:          4       0       0       0       0
  9857 ;;      Totals:        12       0       0       0       0
  9858 ;;Total ram usage:       12 bytes
  9859 ;; Hardware stack levels used:    1
  9860 ;; This function calls:
  9861 ;;		Nothing
  9862 ;; This function is called by:
  9863 ;;		_sprintf
  9864 ;; This function uses a non-reentrant model
  9865 ;;
  9866                           
  9867                           
  9868                           ;psect for function ___fleq
  9869  1D89                     ___fleq:
  9870  1D89                     l2950:	
  9871                           ;incstack = 0
  9872                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9873                           
  9874  1D89  3000               	movlw	0
  9875  1D8A  0570               	andwf	___fleq@ff1,w
  9876  1D8B  00F8               	movwf	??___fleq
  9877  1D8C  3000               	movlw	0
  9878  1D8D  0571               	andwf	___fleq@ff1+1,w
  9879  1D8E  00F9               	movwf	??___fleq+1
  9880  1D8F  3080               	movlw	128
  9881  1D90  0572               	andwf	___fleq@ff1+2,w
  9882  1D91  00FA               	movwf	??___fleq+2
  9883  1D92  307F               	movlw	127
  9884  1D93  0573               	andwf	___fleq@ff1+3,w
  9885  1D94  00FB               	movwf	??___fleq+3
  9886  1D95  087B               	movf	??___fleq+3,w
  9887  1D96  047A               	iorwf	??___fleq+2,w
  9888  1D97  0479               	iorwf	??___fleq+1,w
  9889  1D98  0478               	iorwf	??___fleq,w
  9890  1D99  1D03               	skipz
  9891  1D9A  2D9C               	goto	u4631
  9892  1D9B  2D9D               	goto	u4630
  9893  1D9C                     u4631:
  9894  1D9C  2DA5               	goto	l527
  9895  1D9D                     u4630:
  9896  1D9D                     l2952:
  9897  1D9D  3000               	movlw	0
  9898  1D9E  00F3               	movwf	___fleq@ff1+3
  9899  1D9F  3000               	movlw	0
  9900  1DA0  00F2               	movwf	___fleq@ff1+2
  9901  1DA1  3000               	movlw	0
  9902  1DA2  00F1               	movwf	___fleq@ff1+1
  9903  1DA3  3000               	movlw	0
  9904  1DA4  00F0               	movwf	___fleq@ff1
  9905  1DA5                     l527:
  9906  1DA5  3000               	movlw	0
  9907  1DA6  0574               	andwf	___fleq@ff2,w
  9908  1DA7  00F8               	movwf	??___fleq
  9909  1DA8  3000               	movlw	0
  9910  1DA9  0575               	andwf	___fleq@ff2+1,w
  9911  1DAA  00F9               	movwf	??___fleq+1
  9912  1DAB  3080               	movlw	128
  9913  1DAC  0576               	andwf	___fleq@ff2+2,w
  9914  1DAD  00FA               	movwf	??___fleq+2
  9915  1DAE  307F               	movlw	127
  9916  1DAF  0577               	andwf	___fleq@ff2+3,w
  9917  1DB0  00FB               	movwf	??___fleq+3
  9918  1DB1  087B               	movf	??___fleq+3,w
  9919  1DB2  047A               	iorwf	??___fleq+2,w
  9920  1DB3  0479               	iorwf	??___fleq+1,w
  9921  1DB4  0478               	iorwf	??___fleq,w
  9922  1DB5  1D03               	skipz
  9923  1DB6  2DB8               	goto	u4641
  9924  1DB7  2DB9               	goto	u4640
  9925  1DB8                     u4641:
  9926  1DB8  2DC1               	goto	l528
  9927  1DB9                     u4640:
  9928  1DB9                     l2954:
  9929  1DB9  3000               	movlw	0
  9930  1DBA  00F7               	movwf	___fleq@ff2+3
  9931  1DBB  3000               	movlw	0
  9932  1DBC  00F6               	movwf	___fleq@ff2+2
  9933  1DBD  3000               	movlw	0
  9934  1DBE  00F5               	movwf	___fleq@ff2+1
  9935  1DBF  3000               	movlw	0
  9936  1DC0  00F4               	movwf	___fleq@ff2
  9937  1DC1                     l528:
  9938  1DC1  0877               	movf	___fleq@ff2+3,w
  9939  1DC2  0673               	xorwf	___fleq@ff1+3,w
  9940  1DC3  1D03               	skipz
  9941  1DC4  2DCF               	goto	u4655
  9942  1DC5  0876               	movf	___fleq@ff2+2,w
  9943  1DC6  0672               	xorwf	___fleq@ff1+2,w
  9944  1DC7  1D03               	skipz
  9945  1DC8  2DCF               	goto	u4655
  9946  1DC9  0875               	movf	___fleq@ff2+1,w
  9947  1DCA  0671               	xorwf	___fleq@ff1+1,w
  9948  1DCB  1D03               	skipz
  9949  1DCC  2DCF               	goto	u4655
  9950  1DCD  0874               	movf	___fleq@ff2,w
  9951  1DCE  0670               	xorwf	___fleq@ff1,w
  9952  1DCF                     u4655:
  9953  1DCF  1903               	skipnz
  9954  1DD0  2DD2               	goto	u4651
  9955  1DD1  2DD3               	goto	u4650
  9956  1DD2                     u4651:
  9957  1DD2  2DD5               	goto	l2958
  9958  1DD3                     u4650:
  9959  1DD3                     l2956:
  9960  1DD3  1003               	clrc
  9961  1DD4  2DD6               	goto	l529
  9962  1DD5                     l2958:
  9963  1DD5  1403               	setc
  9964  1DD6                     l529:
  9965  1DD6  0008               	return
  9966  1DD7                     __end_of___fleq:
  9967                           
  9968                           	psect	text24
  9969  0800                     __ptext24:	
  9970 ;; *************** function _spiWrite *****************
  9971 ;; Defined at:
  9972 ;;		line 34 in file "SPI.c"
  9973 ;; Parameters:    Size  Location     Type
  9974 ;;  dat             1    wreg     unsigned char 
  9975 ;; Auto vars:     Size  Location     Type
  9976 ;;  dat             1    0[COMMON] unsigned char 
  9977 ;; Return value:  Size  Location     Type
  9978 ;;                  1    wreg      void 
  9979 ;; Registers used:
  9980 ;;		wreg
  9981 ;; Tracked objects:
  9982 ;;		On entry : 0/0
  9983 ;;		On exit  : 0/0
  9984 ;;		Unchanged: 0/0
  9985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9986 ;;      Params:         0       0       0       0       0
  9987 ;;      Locals:         1       0       0       0       0
  9988 ;;      Temps:          0       0       0       0       0
  9989 ;;      Totals:         1       0       0       0       0
  9990 ;;Total ram usage:        1 bytes
  9991 ;; Hardware stack levels used:    1
  9992 ;; This function calls:
  9993 ;;		Nothing
  9994 ;; This function is called by:
  9995 ;;		_main
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999                           
 10000                           ;psect for function _spiWrite
 10001  0800                     _spiWrite:
 10002                           
 10003                           ;incstack = 0
 10004                           ; Regs used in _spiWrite: [wreg]
 10005                           ;spiWrite@dat stored from wreg
 10006  0800  00F0               	movwf	spiWrite@dat
 10007  0801                     l3106:
 10008                           
 10009                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
 10010  0801  0870               	movf	spiWrite@dat,w
 10011  0802  1283               	bcf	3,5	;RP0=0, select bank0
 10012  0803  1303               	bcf	3,6	;RP1=0, select bank0
 10013  0804  0093               	movwf	19	;volatile
 10014  0805                     l26:
 10015  0805  0008               	return
 10016  0806                     __end_of_spiWrite:
 10017                           
 10018                           	psect	text25
 10019  1001                     __ptext25:	
 10020 ;; *************** function _spiRead *****************
 10021 ;; Defined at:
 10022 ;;		line 47 in file "SPI.c"
 10023 ;; Parameters:    Size  Location     Type
 10024 ;;		None
 10025 ;; Auto vars:     Size  Location     Type
 10026 ;;		None
 10027 ;; Return value:  Size  Location     Type
 10028 ;;                  1    wreg      unsigned char 
 10029 ;; Registers used:
 10030 ;;		wreg, status,2, status,0, pclath, cstack
 10031 ;; Tracked objects:
 10032 ;;		On entry : 0/0
 10033 ;;		On exit  : 0/0
 10034 ;;		Unchanged: 0/0
 10035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10036 ;;      Params:         0       0       0       0       0
 10037 ;;      Locals:         0       0       0       0       0
 10038 ;;      Temps:          0       0       0       0       0
 10039 ;;      Totals:         0       0       0       0       0
 10040 ;;Total ram usage:        0 bytes
 10041 ;; Hardware stack levels used:    1
 10042 ;; Hardware stack levels required when called:    1
 10043 ;; This function calls:
 10044 ;;		_spiReceiveWait
 10045 ;; This function is called by:
 10046 ;;		_main
 10047 ;; This function uses a non-reentrant model
 10048 ;;
 10049                           
 10050                           
 10051                           ;psect for function _spiRead
 10052  1001                     _spiRead:
 10053  1001                     l3108:	
 10054                           ;incstack = 0
 10055                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
 10056                           
 10057                           
 10058                           ;SPI.c: 49:     spiReceiveWait();
 10059  1001  160A  158A  2437  160A  118A  	fcall	_spiReceiveWait
 10060  1006                     l3110:
 10061                           
 10062                           ;SPI.c: 50:     return(SSPBUF);
 10063  1006  1283               	bcf	3,5	;RP0=0, select bank0
 10064  1007  1303               	bcf	3,6	;RP1=0, select bank0
 10065  1008  0813               	movf	19,w	;volatile
 10066  1009                     l34:
 10067  1009  0008               	return
 10068  100A                     __end_of_spiRead:
 10069                           
 10070                           	psect	text26
 10071  1C37                     __ptext26:	
 10072 ;; *************** function _spiReceiveWait *****************
 10073 ;; Defined at:
 10074 ;;		line 29 in file "SPI.c"
 10075 ;; Parameters:    Size  Location     Type
 10076 ;;		None
 10077 ;; Auto vars:     Size  Location     Type
 10078 ;;		None
 10079 ;; Return value:  Size  Location     Type
 10080 ;;                  1    wreg      void 
 10081 ;; Registers used:
 10082 ;;		None
 10083 ;; Tracked objects:
 10084 ;;		On entry : 0/0
 10085 ;;		On exit  : 0/0
 10086 ;;		Unchanged: 0/0
 10087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10088 ;;      Params:         0       0       0       0       0
 10089 ;;      Locals:         0       0       0       0       0
 10090 ;;      Temps:          0       0       0       0       0
 10091 ;;      Totals:         0       0       0       0       0
 10092 ;;Total ram usage:        0 bytes
 10093 ;; Hardware stack levels used:    1
 10094 ;; This function calls:
 10095 ;;		Nothing
 10096 ;; This function is called by:
 10097 ;;		_spiRead
 10098 ;; This function uses a non-reentrant model
 10099 ;;
 10100                           
 10101                           
 10102                           ;psect for function _spiReceiveWait
 10103  1C37                     _spiReceiveWait:
 10104  1C37                     l2736:	
 10105                           ;incstack = 0
 10106                           ; Regs used in _spiReceiveWait: []
 10107                           
 10108  1C37                     l20:	
 10109                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
 10110                           
 10111  1C37  1683               	bsf	3,5	;RP0=1, select bank1
 10112  1C38  1303               	bcf	3,6	;RP1=0, select bank1
 10113  1C39  1C14               	btfss	20,0	;volatile
 10114  1C3A  2C3C               	goto	u3981
 10115  1C3B  2C3D               	goto	u3980
 10116  1C3C                     u3981:
 10117  1C3C  2C37               	goto	l20
 10118  1C3D                     u3980:
 10119  1C3D                     l23:
 10120  1C3D  0008               	return
 10121  1C3E                     __end_of_spiReceiveWait:
 10122                           
 10123                           	psect	text27
 10124  1C6C                     __ptext27:	
 10125 ;; *************** function _spiInit *****************
 10126 ;; Defined at:
 10127 ;;		line 12 in file "SPI.c"
 10128 ;; Parameters:    Size  Location     Type
 10129 ;;  sType           1    wreg     enum E1264
 10130 ;;  sDataSample     1    0[COMMON] enum E1272
 10131 ;;  sClockIdle      1    1[COMMON] enum E1276
 10132 ;;  sTransmitEdg    1    2[COMMON] enum E1280
 10133 ;; Auto vars:     Size  Location     Type
 10134 ;;  sType           1    3[COMMON] enum E1264
 10135 ;; Return value:  Size  Location     Type
 10136 ;;                  1    wreg      void 
 10137 ;; Registers used:
 10138 ;;		wreg, status,2, status,0
 10139 ;; Tracked objects:
 10140 ;;		On entry : 0/0
 10141 ;;		On exit  : 0/0
 10142 ;;		Unchanged: 0/0
 10143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10144 ;;      Params:         3       0       0       0       0
 10145 ;;      Locals:         1       0       0       0       0
 10146 ;;      Temps:          0       0       0       0       0
 10147 ;;      Totals:         4       0       0       0       0
 10148 ;;Total ram usage:        4 bytes
 10149 ;; Hardware stack levels used:    1
 10150 ;; This function calls:
 10151 ;;		Nothing
 10152 ;; This function is called by:
 10153 ;;		_main
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           
 10157                           
 10158                           ;psect for function _spiInit
 10159  1C6C                     _spiInit:
 10160                           
 10161                           ;incstack = 0
 10162                           ; Regs used in _spiInit: [wreg+status,2+status,0]
 10163                           ;spiInit@sType stored from wreg
 10164  1C6C  00F3               	movwf	spiInit@sType
 10165  1C6D                     l3096:
 10166                           
 10167                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
 10168  1C6D  1683               	bsf	3,5	;RP0=1, select bank1
 10169  1C6E  1303               	bcf	3,6	;RP1=0, select bank1
 10170  1C6F  1287               	bcf	7,5	;volatile
 10171                           
 10172                           ;SPI.c: 15:     if(sType & 0b00000100)
 10173  1C70  1D73               	btfss	spiInit@sType,2
 10174  1C71  2C73               	goto	u5041
 10175  1C72  2C74               	goto	u5040
 10176  1C73                     u5041:
 10177  1C73  2C78               	goto	l3102
 10178  1C74                     u5040:
 10179  1C74                     l3098:
 10180                           
 10181                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
 10182  1C74  0872               	movf	spiInit@sTransmitEdge,w
 10183  1C75  0094               	movwf	20	;volatile
 10184  1C76                     l3100:
 10185                           
 10186                           ;SPI.c: 18:         TRISC3 = 1;
 10187  1C76  1587               	bsf	7,3	;volatile
 10188                           
 10189                           ;SPI.c: 19:     }
 10190  1C77  2C7C               	goto	l16
 10191  1C78                     l3102:
 10192                           
 10193                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
 10194  1C78  0870               	movf	spiInit@sDataSample,w
 10195  1C79  0472               	iorwf	spiInit@sTransmitEdge,w
 10196  1C7A  0094               	movwf	20	;volatile
 10197  1C7B                     l3104:
 10198                           
 10199                           ;SPI.c: 23:         TRISC3 = 0;
 10200  1C7B  1187               	bcf	7,3	;volatile
 10201  1C7C                     l16:	
 10202                           ;SPI.c: 24:     }
 10203                           
 10204                           
 10205                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
 10206  1C7C  0873               	movf	spiInit@sType,w
 10207  1C7D  0471               	iorwf	spiInit@sClockIdle,w
 10208  1C7E  1283               	bcf	3,5	;RP0=0, select bank0
 10209  1C7F  1303               	bcf	3,6	;RP1=0, select bank0
 10210  1C80  0094               	movwf	20	;volatile
 10211  1C81                     l17:
 10212  1C81  0008               	return
 10213  1C82                     __end_of_spiInit:
 10214                           
 10215                           	psect	text28
 10216  1C58                     __ptext28:	
 10217 ;; *************** function _conf_USART *****************
 10218 ;; Defined at:
 10219 ;;		line 50 in file "libreria.c"
 10220 ;; Parameters:    Size  Location     Type
 10221 ;;		None
 10222 ;; Auto vars:     Size  Location     Type
 10223 ;;		None
 10224 ;; Return value:  Size  Location     Type
 10225 ;;                  1    wreg      void 
 10226 ;; Registers used:
 10227 ;;		wreg, status,2
 10228 ;; Tracked objects:
 10229 ;;		On entry : 0/0
 10230 ;;		On exit  : 0/0
 10231 ;;		Unchanged: 0/0
 10232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10233 ;;      Params:         0       0       0       0       0
 10234 ;;      Locals:         0       0       0       0       0
 10235 ;;      Temps:          0       0       0       0       0
 10236 ;;      Totals:         0       0       0       0       0
 10237 ;;Total ram usage:        0 bytes
 10238 ;; Hardware stack levels used:    1
 10239 ;; This function calls:
 10240 ;;		Nothing
 10241 ;; This function is called by:
 10242 ;;		_main
 10243 ;; This function uses a non-reentrant model
 10244 ;;
 10245                           
 10246                           
 10247                           ;psect for function _conf_USART
 10248  1C58                     _conf_USART:
 10249  1C58                     l3140:	
 10250                           ;incstack = 0
 10251                           ; Regs used in _conf_USART: [wreg+status,2]
 10252                           
 10253                           
 10254                           ;libreria.c: 52:     TXSTAbits.TX9 = 0;
 10255  1C58  1683               	bsf	3,5	;RP0=1, select bank1
 10256  1C59  1303               	bcf	3,6	;RP1=0, select bank1
 10257  1C5A  1318               	bcf	24,6	;volatile
 10258                           
 10259                           ;libreria.c: 53:     TXSTAbits.TXEN = 1;
 10260  1C5B  1698               	bsf	24,5	;volatile
 10261                           
 10262                           ;libreria.c: 54:     TXSTAbits.SYNC = 0;
 10263  1C5C  1218               	bcf	24,4	;volatile
 10264                           
 10265                           ;libreria.c: 55:     TXSTAbits.BRGH = 1;
 10266  1C5D  1518               	bsf	24,2	;volatile
 10267                           
 10268                           ;libreria.c: 57:     RCSTAbits.SPEN = 1;
 10269  1C5E  1283               	bcf	3,5	;RP0=0, select bank0
 10270  1C5F  1303               	bcf	3,6	;RP1=0, select bank0
 10271  1C60  1798               	bsf	24,7	;volatile
 10272                           
 10273                           ;libreria.c: 58:     RCSTAbits.RX9 = 0;
 10274  1C61  1318               	bcf	24,6	;volatile
 10275                           
 10276                           ;libreria.c: 59:     RCSTAbits.CREN = 1;
 10277  1C62  1618               	bsf	24,4	;volatile
 10278                           
 10279                           ;libreria.c: 61:     BAUDCTLbits.BRG16 = 1;
 10280  1C63  1683               	bsf	3,5	;RP0=1, select bank3
 10281  1C64  1703               	bsf	3,6	;RP1=1, select bank3
 10282  1C65  1587               	bsf	7,3	;volatile
 10283  1C66                     l3142:
 10284                           
 10285                           ;libreria.c: 63:     SPBRG = 207;
 10286  1C66  30CF               	movlw	207
 10287  1C67  1683               	bsf	3,5	;RP0=1, select bank1
 10288  1C68  1303               	bcf	3,6	;RP1=0, select bank1
 10289  1C69  0099               	movwf	25	;volatile
 10290  1C6A                     l3144:
 10291                           
 10292                           ;libreria.c: 64:     SPBRGH = 0;
 10293  1C6A  019A               	clrf	26	;volatile
 10294  1C6B                     l62:
 10295  1C6B  0008               	return
 10296  1C6C                     __end_of_conf_USART:
 10297                           
 10298                           	psect	text29
 10299  1E84                     __ptext29:	
 10300 ;; *************** function _conf_OSCCON *****************
 10301 ;; Defined at:
 10302 ;;		line 16 in file "libreria.c"
 10303 ;; Parameters:    Size  Location     Type
 10304 ;;  frecuencia      1    wreg     unsigned char 
 10305 ;; Auto vars:     Size  Location     Type
 10306 ;;  frecuencia      1    2[COMMON] unsigned char 
 10307 ;; Return value:  Size  Location     Type
 10308 ;;                  1    wreg      void 
 10309 ;; Registers used:
 10310 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10311 ;; Tracked objects:
 10312 ;;		On entry : 0/0
 10313 ;;		On exit  : 0/0
 10314 ;;		Unchanged: 0/0
 10315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10316 ;;      Params:         0       0       0       0       0
 10317 ;;      Locals:         1       0       0       0       0
 10318 ;;      Temps:          2       0       0       0       0
 10319 ;;      Totals:         3       0       0       0       0
 10320 ;;Total ram usage:        3 bytes
 10321 ;; Hardware stack levels used:    1
 10322 ;; This function calls:
 10323 ;;		Nothing
 10324 ;; This function is called by:
 10325 ;;		_main
 10326 ;; This function uses a non-reentrant model
 10327 ;;
 10328                           
 10329                           
 10330                           ;psect for function _conf_OSCCON
 10331  1E84                     _conf_OSCCON:
 10332                           
 10333                           ;incstack = 0
 10334                           ; Regs used in _conf_OSCCON: [wreg-fsr0h+status,2+status,0]
 10335                           ;conf_OSCCON@frecuencia stored from wreg
 10336  1E84  00F2               	movwf	conf_OSCCON@frecuencia
 10337  1E85                     l3114:
 10338                           
 10339                           ;libreria.c: 18:     switch (frecuencia) {
 10340  1E85  2EBA               	goto	l3134
 10341  1E86                     l3116:
 10342                           
 10343                           ;libreria.c: 20:             OSCCONbits.IRCF = 0b000;
 10344  1E86  308F               	movlw	-113
 10345  1E87  1683               	bsf	3,5	;RP0=1, select bank1
 10346  1E88  1303               	bcf	3,6	;RP1=0, select bank1
 10347  1E89  058F               	andwf	15,f	;volatile
 10348                           
 10349                           ;libreria.c: 21:             break;
 10350  1E8A  2EDC               	goto	l51
 10351  1E8B                     l3118:
 10352                           
 10353                           ;libreria.c: 23:             OSCCONbits.IRCF = 0b001;
 10354  1E8B  1683               	bsf	3,5	;RP0=1, select bank1
 10355  1E8C  1303               	bcf	3,6	;RP1=0, select bank1
 10356  1E8D  080F               	movf	15,w	;volatile
 10357  1E8E  398F               	andlw	-113
 10358  1E8F  3810               	iorlw	16
 10359  1E90  008F               	movwf	15	;volatile
 10360                           
 10361                           ;libreria.c: 24:             break;
 10362  1E91  2EDC               	goto	l51
 10363  1E92                     l3120:
 10364                           
 10365                           ;libreria.c: 26:             OSCCONbits.IRCF = 0b010;
 10366  1E92  1683               	bsf	3,5	;RP0=1, select bank1
 10367  1E93  1303               	bcf	3,6	;RP1=0, select bank1
 10368  1E94  080F               	movf	15,w	;volatile
 10369  1E95  398F               	andlw	-113
 10370  1E96  3820               	iorlw	32
 10371  1E97  008F               	movwf	15	;volatile
 10372                           
 10373                           ;libreria.c: 27:             break;
 10374  1E98  2EDC               	goto	l51
 10375  1E99                     l3122:
 10376                           
 10377                           ;libreria.c: 29:             OSCCONbits.IRCF = 0b011;
 10378  1E99  1683               	bsf	3,5	;RP0=1, select bank1
 10379  1E9A  1303               	bcf	3,6	;RP1=0, select bank1
 10380  1E9B  080F               	movf	15,w	;volatile
 10381  1E9C  398F               	andlw	-113
 10382  1E9D  3830               	iorlw	48
 10383  1E9E  008F               	movwf	15	;volatile
 10384                           
 10385                           ;libreria.c: 30:             break;
 10386  1E9F  2EDC               	goto	l51
 10387  1EA0                     l3124:
 10388                           
 10389                           ;libreria.c: 32:             OSCCONbits.IRCF = 0b100;
 10390  1EA0  1683               	bsf	3,5	;RP0=1, select bank1
 10391  1EA1  1303               	bcf	3,6	;RP1=0, select bank1
 10392  1EA2  080F               	movf	15,w	;volatile
 10393  1EA3  398F               	andlw	-113
 10394  1EA4  3840               	iorlw	64
 10395  1EA5  008F               	movwf	15	;volatile
 10396                           
 10397                           ;libreria.c: 33:             break;
 10398  1EA6  2EDC               	goto	l51
 10399  1EA7                     l3126:
 10400                           
 10401                           ;libreria.c: 35:             OSCCONbits.IRCF = 0b101;
 10402  1EA7  1683               	bsf	3,5	;RP0=1, select bank1
 10403  1EA8  1303               	bcf	3,6	;RP1=0, select bank1
 10404  1EA9  080F               	movf	15,w	;volatile
 10405  1EAA  398F               	andlw	-113
 10406  1EAB  3850               	iorlw	80
 10407  1EAC  008F               	movwf	15	;volatile
 10408                           
 10409                           ;libreria.c: 36:             break;
 10410  1EAD  2EDC               	goto	l51
 10411  1EAE                     l3128:
 10412                           
 10413                           ;libreria.c: 38:             OSCCONbits.IRCF = 0b110;
 10414  1EAE  1683               	bsf	3,5	;RP0=1, select bank1
 10415  1EAF  1303               	bcf	3,6	;RP1=0, select bank1
 10416  1EB0  080F               	movf	15,w	;volatile
 10417  1EB1  398F               	andlw	-113
 10418  1EB2  3860               	iorlw	96
 10419  1EB3  008F               	movwf	15	;volatile
 10420                           
 10421                           ;libreria.c: 39:             break;
 10422  1EB4  2EDC               	goto	l51
 10423  1EB5                     l3130:
 10424                           
 10425                           ;libreria.c: 41:             OSCCONbits.IRCF = 0b111;
 10426  1EB5  3070               	movlw	112
 10427  1EB6  1683               	bsf	3,5	;RP0=1, select bank1
 10428  1EB7  1303               	bcf	3,6	;RP1=0, select bank1
 10429  1EB8  048F               	iorwf	15,f	;volatile
 10430                           
 10431                           ;libreria.c: 42:             break;
 10432  1EB9  2EDC               	goto	l51
 10433  1EBA                     l3134:
 10434  1EBA  0872               	movf	conf_OSCCON@frecuencia,w
 10435  1EBB  00F0               	movwf	??_conf_OSCCON
 10436  1EBC  01F1               	clrf	??_conf_OSCCON+1
 10437                           
 10438                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10439                           ; Switch size 1, requested type "simple"
 10440                           ; Number of cases is 1, Range of values is 0 to 0
 10441                           ; switch strategies available:
 10442                           ; Name         Instructions Cycles
 10443                           ; simple_byte            4     3 (average)
 10444                           ; direct_byte           11     8 (fixed)
 10445                           ; jumptable            260     6 (fixed)
 10446                           ;	Chosen strategy is simple_byte
 10447  1EBD  0871               	movf	??_conf_OSCCON+1,w
 10448  1EBE  3A00               	xorlw	0	; case 0
 10449  1EBF  1903               	skipnz
 10450  1EC0  2EC2               	goto	l3598
 10451  1EC1  2EDC               	goto	l51
 10452  1EC2                     l3598:
 10453                           
 10454                           ; Switch size 1, requested type "simple"
 10455                           ; Number of cases is 8, Range of values is 1 to 8
 10456                           ; switch strategies available:
 10457                           ; Name         Instructions Cycles
 10458                           ; simple_byte           25    13 (average)
 10459                           ; direct_byte           35    11 (fixed)
 10460                           ; jumptable            263     9 (fixed)
 10461                           ;	Chosen strategy is simple_byte
 10462  1EC2  0870               	movf	??_conf_OSCCON,w
 10463  1EC3  3A01               	xorlw	1	; case 1
 10464  1EC4  1903               	skipnz
 10465  1EC5  2E86               	goto	l3116
 10466  1EC6  3A03               	xorlw	3	; case 2
 10467  1EC7  1903               	skipnz
 10468  1EC8  2E8B               	goto	l3118
 10469  1EC9  3A01               	xorlw	1	; case 3
 10470  1ECA  1903               	skipnz
 10471  1ECB  2E92               	goto	l3120
 10472  1ECC  3A07               	xorlw	7	; case 4
 10473  1ECD  1903               	skipnz
 10474  1ECE  2E99               	goto	l3122
 10475  1ECF  3A01               	xorlw	1	; case 5
 10476  1ED0  1903               	skipnz
 10477  1ED1  2EA0               	goto	l3124
 10478  1ED2  3A03               	xorlw	3	; case 6
 10479  1ED3  1903               	skipnz
 10480  1ED4  2EA7               	goto	l3126
 10481  1ED5  3A01               	xorlw	1	; case 7
 10482  1ED6  1903               	skipnz
 10483  1ED7  2EAE               	goto	l3128
 10484  1ED8  3A0F               	xorlw	15	; case 8
 10485  1ED9  1903               	skipnz
 10486  1EDA  2EB5               	goto	l3130
 10487  1EDB  2EDC               	goto	l51
 10488  1EDC                     l51:
 10489                           
 10490                           ;libreria.c: 44:     OSCCONbits.SCS = 1;
 10491  1EDC  1683               	bsf	3,5	;RP0=1, select bank1
 10492  1EDD  1303               	bcf	3,6	;RP1=0, select bank1
 10493  1EDE  140F               	bsf	15,0	;volatile
 10494  1EDF                     l59:	
 10495                           ;libreria.c: 45:     return;
 10496                           
 10497  1EDF  0008               	return
 10498  1EE0                     __end_of_conf_OSCCON:
 10499  007E                     btemp	set	126	;btemp
 10500  007E                     wtemp0	set	126
 10501                           
 10502                           	psect	config
 10503                           
 10504                           ;Config register CONFIG1 @ 0x2007
 10505                           ;	Oscillator Selection bits
 10506                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 10507                           ;	Watchdog Timer Enable bit
 10508                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10509                           ;	Power-up Timer Enable bit
 10510                           ;	PWRTE = OFF, PWRT disabled
 10511                           ;	RE3/MCLR pin function select bit
 10512                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10513                           ;	Code Protection bit
 10514                           ;	CP = OFF, Program memory code protection is disabled
 10515                           ;	Data Code Protection bit
 10516                           ;	CPD = OFF, Data memory code protection is disabled
 10517                           ;	Brown Out Reset Selection bits
 10518                           ;	BOREN = OFF, BOR disabled
 10519                           ;	Internal External Switchover bit
 10520                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10521                           ;	Fail-Safe Clock Monitor Enabled bit
 10522                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10523                           ;	Low Voltage Programming Enable bit
 10524                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10525                           ;	In-Circuit Debugger Mode bit
 10526                           ;	DEBUG = 0x1, unprogrammed default
 10527  2007                     	org	8199
 10528  2007  20D4               	dw	8404
 10529                           
 10530                           ;Config register CONFIG2 @ 0x2008
 10531                           ;	Brown-out Reset Selection bit
 10532                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10533                           ;	Flash Program Memory Self Write Enable bits
 10534                           ;	WRT = OFF, Write protection off
 10535  2008                     	org	8200
 10536  2008  3FFF               	dw	16383

Data Sizes:
    Strings     6
    Constant    144
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     41      59
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 4
		 -> voltaje2(BANK1[4]), voltaje1(BANK1[4]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 4
		 -> voltaje2(BANK1[4]), voltaje1(BANK1[4]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> voltaje2(BANK1[4]), voltaje1(BANK1[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   38076
                                             37 BANK1      4     4      0
                            ___flmul
                           ___xxtofl
                        _conf_OSCCON
                         _conf_USART
                            _spiInit
                            _spiRead
                           _spiWrite
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               5     3      2     156
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   32269
                                              0 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
                            _spiRead (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
                            _spiRead (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _conf_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conf_OSCCON                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
       _spiRead (ARG)
         _spiReceiveWait
     _spiRead (ARG)
       _spiReceiveWait
   ___xxtofl
     _spiRead (ARG)
       _spiReceiveWait
   _conf_OSCCON
   _conf_USART
   _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             _spiRead (ARG)
               _spiReceiveWait
           _spiRead (ARG)
             _spiReceiveWait
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         _spiRead (ARG)
           _spiReceiveWait
       _spiRead (ARG)
         _spiReceiveWait
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               _spiRead (ARG)
                 _spiReceiveWait
             _spiRead (ARG)
               _spiReceiveWait
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
         _spiRead (ARG)
           _spiReceiveWait
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           _spiRead (ARG)
             _spiReceiveWait
         _spiRead (ARG)
           _spiReceiveWait
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             _spiRead (ARG)
               _spiReceiveWait
           _spiRead (ARG)
             _spiReceiveWait
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
       _spiRead (ARG)
         _spiReceiveWait
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           _spiRead (ARG)
             _spiReceiveWait
         _spiRead (ARG)
           _spiReceiveWait
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           _spiRead (ARG)
             _spiReceiveWait
         _spiRead (ARG)
           _spiReceiveWait
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      97       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     29      3B       7       73.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      97      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Aug 04 12:42:23 2021

                      _i 00D1                        pc 0002              _SSPSTATbits 0094  
                     l20 1C37                       l23 1C3D                       l16 1C7C  
                     l17 1C81                       l34 1009                       l26 0805  
                     l51 1EDC                       l62 1C6B                       l59 1EDF  
           ___awdiv@sign 0021                       fsr 0004      ___wmul@multiplicand 0072  
    __Umul8_16@word_mpld 0076                      l130 119B                      l126 1193  
                    l136 127F                      l322 072D                      l314 05C6  
                    l307 0582                      l341 1CCB                      l254 0C9E  
                    l343 1CE3                      l511 093F                      l247 1577  
                    l512 08A4                      l337 07F2                      l522 0932  
                    l515 0902                      l507 1E83                      l532 1026  
                    l540 000E                      l276 013D                      l710 17F3  
                    l702 17D1                      l527 1DA5                      l535 1092  
                    l711 17FF                      l551 086C                      l528 1DC1  
                    l536 10AB                      l544 0881                      l529 1DD6  
                    l377 1F45                      l714 1CBE                      l554 0881  
                    l810 1FFF                      l562 112B                      l821 1FC9  
                    l822 1FD5                      l814 1FAD                      l558 1168  
                    l494 0077                      l559 10DA                      l647 1D88  
                    l672 1682                      l808 1F68                      l681 17FF  
                    l569 115B                      l657 1D44                      l674 1659  
                    l770 0F6B                      l668 15DB                      l764 0FFF  
                    l828 1C57                      l693 1771                      l597 1E2A  
                    l838 1C9A                      l783 1CF8                      l776 0FF3  
                    l689 174D                      l785 1D0A                      l699 1793  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
           ___flmul@aexp 0036             ___flmul@bexp 0037             ___flmul@sign 0031  
           ___flmul@temp 003C             ___flmul@prod 0038             ___fltol@exp1 005B  
                   l3000 0832                     l3002 083A                     l3100 1C76  
                   l3020 0861                     l3012 0848                     l3004 083C  
                   l2300 0055                     l3102 1C78                     l3110 1006  
                   l3022 0871                     l3006 0840                     l3014 085A  
                   l3030 1DE2                     l2310 006E                     l2302 005B  
                   l3120 1E92                     l3104 1C7B                     l3024 0876  
                   l3040 1E1C                     l3032 1DEF                     l2312 0073  
                   l2304 005C                     l2320 1E30                     l3200 016F  
                   l3130 1EB5                     l3122 1E99                     l3114 1E85  
                   l3106 0801                     l2410 158A                     l2402 1578  
                   l3034 1DF3                     l3042 1E22                     l3026 1DD7  
                   l2306 0063                     l2330 1E46                     l2322 1E35  
                   l3210 01B7                     l3202 017D                     l3124 1EA0  
                   l3116 1E86                     l3140 1C58                     l3108 1001  
                   l2500 1686                     l2412 158F                     l2420 159F  
                   l2404 157F                     l3036 1E05                     l3028 1DDF  
                   l3060 1F70                     l3052 1F47                     l2260 1CE7  
                   l2308 0069                     l2340 1E62                     l2332 1E49  
                   l2324 1E37                     l2316 1E2B                     l3300 0510  
                   l3220 01F8                     l3212 01BB                     l3204 0181  
                   l3126 1EA7                     l3118 1E8B                     l3134 1EBA  
                   l3142 1C66                     l2510 16AF                     l2502 168B  
                   l2430 15B9                     l2422 15A7                     l2414 1594  
                   l2406 1585                     l3046 1C9B                     l3038 1E13  
                   l3070 1F92                     l3054 1F4C                     l2262 1CEE  
                   l2350 1E7F                     l2342 1E68                     l2334 1E50  
                   l2326 1E3B                     l2318 1E2C                     l3310 058A  
                   l3302 0517                     l3230 027F                     l3222 020B  
                   l3214 01D4                     l3206 019A                     l3150 0080  
                   l3128 1EAE                     l3144 1C6A                     l2520 16C3  
                   l2512 16B3                     l2440 15D0                     l2432 15BD  
                   l2424 15AC                     l2416 159C                     l2408 1589  
                   l3048 1C9F                     l3080 1FC3                     l3072 1F96  
                   l3064 1F79                     l3056 1F50                     l2264 1CF2  
                   l2600 0CAC                     l2360 1D50                     l2280 001D  
                   l2272 000F                     l2344 1E6F                     l2336 1E54  
                   l2328 1E40                     l3320 05B9                     l3312 0593  
                   l3304 051C                     l3240 02D3                     l3232 0298  
                   l3224 020F                     l3216 01DF                     l3208 01B3  
                   l3400 07EE                     l3160 00A6                     l3152 0086  
                   l2530 172B                     l2522 16CC                     l2514 16BC  
                   l2506 1694                     l2450 15E9                     l2442 15D1  
                   l2434 15BE                     l2426 15B2                     l2418 159D  
                   l3090 1FF6                     l3082 1FCD                     l3074 1FA4  
                   l3066 1F7E                     l3058 1F60                     l2266 1D01  
                   l2258 1CE5                     l2610 0CC3                     l2602 0CB0  
                   l2370 1D76                     l2362 1D57                     l2354 1D45  
                   l2290 0032                     l2282 0021                     l2274 0012  
                   l2338 1E58                     l2346 1E75                     l3330 05DF  
                   l3322 05C0                     l3314 0597                     l3306 0557  
                   l3250 037A                     l3242 031A                     l3234 02A1  
                   l3226 0215                     l3218 01E5                     l3162 00AA  
                   l3170 00E6                     l3154 008D                     l3410 1C83  
                   l2532 1730                     l2516 16BE                     l2508 16AB  
                   l2524 16D1                     l2460 15FD                     l2452 15ED  
                   l2436 15C3                     l2444 15D3                     l2428 15B3  
                   l3092 1FF7                     l3084 1FD7                     l3076 1FB4  
                   l3068 1F8B                     l2268 1D06                     l2700 0F68  
                   l2620 0CDC                     l2612 0CC5                     l2604 0CB1  
                   l2372 1D77                     l2364 1D5B                     l2356 1D47  
                   l2380 1D0B                     l2292 0035                     l2284 0026  
                   l2276 0016                     l2348 1E7A                     l3340 06BE  
                   l3332 05FD                     l3324 05CF                     l3316 059D  
                   l3308 0576                     l3252 0395                     l3244 0329  
                   l3236 02BC                     l3228 0234                     l3180 0111  
                   l3172 00F4                     l3164 00BF                     l3156 0092  
                   l3148 007B                     l3412 1C88                     l3500 134C  
                   l3420 1169                     l2550 1778                     l2542 1763  
                   l2526 16E7                     l2534 173F                     l2518 16C2  
                   l2470 1611                     l2462 1601                     l2454 15F1  
                   l2446 15E1                     l2438 15C8                     l3086 1FED  
                   l3078 1FBF                     l2710 0F87                     l2630 0CF1  
                   l2622 0CDD                     l2614 0CCD                     l2606 0CB6  
                   l2374 1D7E                     l2366 1D5F                     l2358 1D4D  
                   l2390 1D23                     l2382 1D11                     l2294 003C  
                   l2286 002A                     l2278 001B                     l3350 0712  
                   l3334 0658                     l3342 06F9                     l3326 05D4  
                   l3318 05AA                     l3270 0470                     l3262 03E3  
                   l3254 039E                     l3246 0344                     l3238 02C4  
                   l3182 0124                     l3174 00F5                     l3166 00D2  
                   l3158 0096                     l3414 1C8C                     l3502 135E  
                   l3430 1186                     l3422 116D                     l3096 1C6D  
                   l2560 1786                     l2552 177A                     l2544 176C  
                   l2536 1755                     l2528 1725                     l2472 1615  
                   l2464 1605                     l2456 15F5                     l2448 15E5  
                   l2480 1625                     l3088 1FF2                     l2720 0FCD  
                   l2712 0FA0                     l2704 0F70                     l2640 0D0C  
                   l2632 0CF9                     l2624 0CE2                     l2616 0CD2  
                   l2608 0CBB                     l2368 1D70                     l2376 1D84  
                   l2392 1D2D                     l2384 1D14                     l2800 1C4E  
                   l2296 0040                     l2288 002C                     l3360 073F  
                   l3344 0701                     l3336 0693                     l3328 05DB  
                   l3280 04A9                     l3256 03A6                     l3248 036B  
                   l3264 03EC                     l3352 0719                     l3192 013F  
                   l3184 0128                     l3176 00F9                     l3168 00D6  
                   l3416 1C94                     l3504 1365                     l3440 1198  
                   l3432 118B                     l3424 1176                     l3098 1C74  
                   l2570 179D                     l2562 178A                     l2554 177F  
                   l2546 1770                     l2538 175A                     l2490 1668  
                   l2482 1626                     l2474 1619                     l2466 1609  
                   l2458 15F9                     l2810 10BF                     l2730 0FEC  
                   l2722 0FD7                     l2706 0F75                     l2714 0FA6  
                   l2650 0D8E                     l2642 0D1C                     l2634 0CFE  
                   l2626 0CE7                     l2618 0CD8                     l2394 1D33  
                   l2386 1D1B                     l2802 1C54                     l2298 0044  
                   l3370 0771                     l3362 074E                     l3354 071F  
                   l3346 0708                     l3338 06B2                     l3290 04E7  
                   l3282 04B3                     l3266 0421                     l3258 03C4  
                   l3194 015B                     l3178 00FC                     l3186 0139  
                   l3506 1368                     l3450 1204                     l3442 119E  
                   l3434 118C                     l3426 1177                     l2580 17DB  
                   l2572 17AB                     l2564 1790                     l2548 1775  
                   l2556 1781                     l2492 166C                     l2484 163D  
                   l2476 161D                     l2468 160D                     l2900 0920  
                   l2820 10DB                     l2732 0FF7                     l2724 0FD9  
                   l2716 0FB3                     l2708 0F83                     l2660 0DFC  
                   l2652 0DAA                     l2644 0D29                     l2636 0D03  
                   l2628 0CEF                     l2396 1D3A                     l2388 1D1F  
                   l2740 1376                     l2804 1C56                     l3380 079B  
                   l3372 0775                     l3364 0757                     l3356 0727  
                   l3348 070C                     l3292 04F0                     l3284 04CE  
                   l3276 0472                     l3268 046E                     l3196 0167  
                   l3188 013B                     l3460 123C                     l3452 1207  
                   l3444 11A8                     l3436 118D                     l3428 117D  
                   l2590 17EF                     l2582 17E3                     l2574 17AF  
                   l2558 1785                     l2494 166D                     l2486 165D  
                   l2478 1621                     l2830 1104                     l2822 10E1  
                   l2814 10C8                     l2726 0FE7                     l2718 0FBE  
                   l2670 0E8C                     l2662 0E0C                     l2654 0DC6  
                   l2646 0D46                     l2398 1D40                     l3390 07BC  
                   l3382 07A7                     l3374 0783                     l3366 075F  
                   l3358 0738                     l3286 04D4                     l3198 016B  
                   l3470 1282                     l3462 1242                     l3454 1215  
                   l3446 11B0                     l3438 1190                     l2736 1C37  
                   l2592 17FA                     l2584 17E8                     l2576 17CD  
                   l2568 1798                     l2496 1676                     l2488 1666  
                   l2920 1CD9                     l2912 1CBF                     l2840 112F  
                   l2832 1112                     l2824 10F0                     l2808 10AC  
                   l2728 0FEB                     l2680 0F20                     l2672 0E9C  
                   l2664 0E29                     l2656 0DCF                     l2648 0D62  
                   l2752 1534                     l2760 0949                     l3392 07C8  
                   l3384 07AB                     l3376 078C                     l3368 076B  
                   l3288 04E0                     l3296 04F5                     l3480 12EB  
                   l3472 128C                     l3464 124C                     l3456 1229  
                   l3448 11FA                     l2594 17FE                     l2586 17E9  
                   l2578 17D6                     l2498 167A                     l2930 1EF3  
                   l2922 1CDF                     l2914 1CC1                     l2906 0927  
                   l2834 111C                     l2826 10F2                     l2690 0F45  
                   l2682 0F2E                     l2674 0EC9                     l2666 0E42  
                   l2658 0DDF                     l2746 1483                     l2738 1370  
                   l2770 0A3F                     l2762 0950                     l3394 07D4  
                   l3386 07B1                     l3378 0790                     l3298 0502  
                   l3490 1326                     l3482 12F9                     l3474 1294  
                   l3458 122D                     l3466 1252                     l2588 17ED  
                   l2940 1F2D                     l2932 1F00                     l2916 1CC5  
                   l2908 0937                     l2860 0882                     l2836 111D  
                   l2828 10FB                     l2684 0F37                     l2692 0F4B  
                   l2676 0EEF                     l2668 0E5F                     l2596 0C9F  
                   l2748 1489                     l2780 0AFB                     l2756 0943  
                   l3388 07B8                     l3492 1330                     l3484 130D  
                   l3476 12DE                     l3468 1267                     l2950 1D89  
                   l2942 1F2E                     l2934 1F04                     l2926 1EE0  
                   l2918 1CD2                     l2862 088F                     l2854 1150  
                   l2846 1137                     l2838 1125                     l2694 0F4F  
                   l2686 0F3B                     l2678 0F17                     l2598 0CA6  
                   l2774 0AC7                     l2758 0947                     l3398 07DC  
                   l3486 1311                     l3494 1336                     l3478 12E8  
                   l2952 1D9D                     l2944 1F37                     l2936 1F0D  
                   l2928 1EF0                     l2880 08C9                     l2872 08A5  
                   l2856 1160                     l2848 1149                     l2696 0F50  
                   l2688 0F3C                     l2792 0C72                     l2768 0A38  
                   l3488 1320                     l2954 1DB9                     l2970 1046  
                   l2962 100A                     l2938 1F1F                     l2946 1F3D  
                   l2890 08FC                     l2882 08D2                     l2874 08AD  
                   l2866 0898                     l2698 0F54                     l2786 0BE3  
                   l2778 0AF4                     l3594 1356                     l2956 1DD3  
                   l2972 106A                     l2964 101E                     l2892 0906  
                   l2884 08E4                     l2876 08BE                     l2796 1C47  
                   l2788 0BEA                     l3596 0153                     l3598 1EC2  
                   l2958 1DD5                     l2974 106E                     l2966 103A  
                   l2982 0004                     l2990 0806                     l2886 08F2  
                   l2878 08C0                     l2798 1C48                     l2976 10A8  
                   l2968 1042                     l2984 000C                     l2992 0813  
                   l2888 08F3                     l2978 10AA                     l2986 000E  
                   l2898 090E                     l2996 081C                     l2998 0831  
                   STR_1 1896                     STR_2 1896                     u3000 1E75  
                   u3001 1E74                     u3010 1E7A                     u3011 1E79  
                   u3020 1D4D                     u3021 1D4C                     u3110 1D23  
                   u3111 1D22                     u3200 15C3                     u3040 1D5F  
                   u3120 1D2D                     u3201 15C2                     u3041 1D5E  
                   u3121 1D2C                     u3105 1D15                     u3210 15C8  
                   u3211 15C7                     u3035 1D51                     u3300 1682  
                   u3220 15E1                     u3060 1D70                     u3140 1D40  
                   u3301 1681                     u3221 15E0                     u3061 1D6F  
                   u3141 1D3F                     u3125 1D29                     u4005 1393  
                   u3310 1686                     u3230 15E5                     u3150 1589  
                   u4030 1489                     u3311 1685                     u3231 15E4  
                   u3151 1588                     u3055 1D60                     u3135 1D34  
                   u4031 1488                     u4015 13ED                     u3400 1712  
                   u3320 168B                     u3240 163D                     u3160 158F  
                   u5000 1FCD                     u3080 1D84                     u4200 0BEA  
                   u4120 0A3F                     u3401 1713                     u3321 168A  
                   u3241 163C                     u3161 158E                     u5001 1FCC  
                   u3081 1D83                     u3065 1D6C                     u4025 1442  
                   u4201 0BE9                     u4121 0A3E                     u4105 09AC  
                   u3410 1730                     u3402 1718                     u3250 1648  
                   u3170 1594                     u5010 1FE2                     u3090 1D11  
                   u3411 172F                     u3403 1719                     u3331 169D  
                   u3251 1646                     u3171 1593                     u3075 1D78  
                   u3091 1D10                     u4115 09F7                     u3500 1790  
                   u3420 1755                     u3340 16AF                     u3332 16A4  
                   u3260 1649                     u3180 15B2                     u5020 1FF2  
                   u5100 0167                     u3501 178F                     u3421 1754  
                   u3341 16AE                     u3333 16AB                     u3245 1639  
                   u3181 15B1                     u5021 1FF1                     u4045 14A6  
                   u5101 0166                     u3510 1797                     u3430 175A  
                   u3350 16B3                     u3270 165D                     u3190 15BD  
                   u5030 1FF6                     u4310 112B                     u4070 0947  
                   u5110 016B                     u3511 1796                     u3431 1759  
                   u3351 16B2                     u3271 165C                     u3191 15BC  
                   u5031 1FF5                     u5015 1FDD                     u4311 112A  
                   u4055 14F3                     u4215 0BFD                     u4135 0A52  
                   u4071 0946                     u5111 016A                     u5040 1C74  
                   u3600 17FE                     u3520 179D                     u3360 16C2  
                   u3280 166C                     u4400 08A3                     u4320 112F  
                   u2800 1CF2                     u4240 1C4E                     u4160 0AFB  
                   u4080 0950                     u5200 036B                     u5120 019A  
                   u5041 1C73                     u3601 17FD                     u3521 179C  
                   u3361 16C1                     u3281 166B                     u4401 08A2  
                   u4321 112E                     u4305 111E                     u2801 1CF1  
                   u4065 153F                     u4241 1C4D                     u4225 0C39  
                   u4161 0AFA                     u4145 0A8E                     u4081 094F  
                   u5201 036A                     u5121 0199                     u3530 17AF  
                   u3450 1770                     u4330 1136                     u3610 0CB0  
                   u4250 1C54                     u5210 037A                     u5130 01D4  
                   u5050 0086                     u3531 17AE                     u3451 176F  
                   u4331 1135                     u3611 0CAF                     u4251 1C53  
                   u4235 0C75                     u4155 0ACA                     u5211 0379  
                   u5131 01D3                     u5051 0085                     u3540 17BE  
                   u3460 1775                     u3380 16E7                     u4420 08E4  
                   u4260 10BF                     u2820 1D06                     u3620 0CB6  
                   u5220 0395                     u5140 020F                     u5060 00A6  
                   u3461 1774                     u3445 1765                     u3381 16E6  
                   u4421 08E3                     u4261 10BE                     u2821 1D05  
                   u3701 0D70                     u3621 0CB5                     u5221 0394  
                   u5141 020E                     u5061 00A5                     u3550 17CD  
                   u3470 177F                     u4510 0937                     u4350 1148  
                   u4270 10D9                     u3702 0D77                     u3630 0CBB  
                   u2910 0069                     u2830 0016                     u5310 0589  
                   u5150 0298                     u5070 00E6                     u3551 17CC  
                   u3471 177E                     u3391 16FE                     u3383 16E3  
                   u3375 16C5                     u3295 166F                     u4511 0936  
                   u4415 08CB                     u4351 1147                     u4271 10D8  
                   u2815 1CF9                     u3711 0D9C                     u3703 0D7E  
                   u3631 0CBA                     u2911 0068                     u2831 0015  
                   u4175 0B1B                     u4095 0970                     u5311 0588  
                   u5215 0376                     u5151 0297                     u5071 00E5  
                   u3560 17D6                     u3480 1785                     u3392 16FF  
                   u4600 1F1F                     u4520 1CC5                     u4440 0902  
                   u4360 114F                     u3800 0ED5                     u3712 0DA3  
                   u3640 0CDC                     u2920 006E                     u2840 0021  
                   u5400 0727                     u5320 05AA                     u5240 04A8  
                   u5160 02BC                     u5080 00F4                     u3561 17D5  
                   u3545 17B9                     u3481 1784                     u3393 1704  
                   u4601 1F1E                     u4521 1CC4                     u4505 0929  
                   u4441 0901                     u4425 08E0                     u4361 114E  
                   u4345 1138                     u3721 0DB8                     u3713 0DAA  
                   u3641 0CDB                     u2921 006D                     u2905 005D  
                   u2841 0020                     u4185 0B57                     u5401 0726  
                   u5321 05A9                     u5305 051F                     u5241 04A7  
                   u5161 02BB                     u5081 00F3                     u3570 17DB  
                   u3490 178A                     u3394 1705                     u4450 0906  
                   u4290 1112                     u3722 0DBF                     u3650 0CE2  
                   u2850 0032                     u2930 1E30                     u5410 0738  
                   u5330 05B9                     u5250 04B3                     u5170 02D3  
                   u5090 0138                     u3571 17DA                     u3491 1789  
                   u3395 170A                     u4451 0905                     u4435 08F5  
                   u4291 1111                     u3811 0EE1                     u3723 0DC6  
                   u3651 0CE1                     u2851 0031                     u2931 1E2F  
                   u4195 0BA2                     u5411 0737                     u5331 05B8  
                   u5251 04B2                     u5235 0475                     u5171 02D2  
                   u5091 0137                     u4700 106E                     u3580 17E8  
                   u3396 170B                     u4620 1F3D                     u4460 090D  
                   u4380 1160                     u3900 0F68                     u3820 0EFD  
                   u3812 0EE8                     u3660 0CE7                     u2940 1E3B  
                   u5500 07D4                     u5420 074E                     u5340 05D4  
                   u5260 04CE                     u5180 0329                     u4701 106D  
                   u3581 17E7                     u4621 1F3C                     u4605 1F1B  
                   u4461 090C                     u4381 115F                     u4285 10FD  
                   u3901 0F67                     u3813 0EEF                     u3805 0ED0  
                   u3741 0DEE                     u3661 0CE6                     u2941 1E3A  
                   u5501 07D3                     u5421 074D                     u5341 05D3  
                   u5325 05A6                     u5261 04CD                     u5245 04A4  
                   u5181 0328                     u4630 1D9D                     u3590 17ED  
                   u4550 1CDF                     u4390 088F                     u3910 0F6F  
                   u3742 0DF5                     u3670 0CFE                     u2870 0044  
                   u2950 1E46                     u5510 07EE                     u5430 075F  
                   u5270 04E0                     u5190 0344                     u4631 1D9C  
                   u4711 107D                     u3591 17EC                     u4615 1F2F  
                   u4551 1CDE                     u4535 1CCC                     u4391 088E  
                   u4375 1152                     u4295 110E                     u3911 0F6E  
                   u3831 0F09                     u3751 0E1B                     u3743 0DFC  
                   u3735 0DC8                     u3671 0CFD                     u2871 0043  
                   u2951 1E45                     u5511 07ED                     u5431 075E  
                   u5415 0734                     u5335 05B5                     u5271 04DF  
                   u5191 0343                     u5175 02CF                     u4640 1DB9  
                   u4720 10A8                     u4712 107E                     u4800 0860  
                   u4560 1EF0                     u4480 091F                     u3920 0F75  
                   u3832 0F10                     u3752 0E22                     u3680 0D03  
                   u5440 076B                     u5280 0502                     u5520 1C94  
                   u4641 1DB8                     u4721 10A7                     u4713 1083  
                   u4801 085F                     u4561 1EEF                     u4545 1CD3  
                   u4481 091E                     u3921 0F74                     u3833 0F17  
                   u3825 0EF8                     u3753 0E29                     u3681 0D02  
                   u2865 0036                     u5441 076A                     u5425 074A  
                   u5281 0501                     u5185 0325                     u5521 1C93  
                   u4650 1DD3                     u4714 1084                     u4730 000C  
                   u4490 0926                     u3930 0F87                     u2890 0055  
                   u2970 1E58                     u5450 0775                     u5370 0700  
                   u5290 0510                     u5530 1198                     u4651 1DD2  
                   u4715 1089                     u4731 000B                     u4491 0925  
                   u4475 090F                     u3931 0F86                     u3771 0E51  
                   u3691 0D54                     u2891 0054                     u2971 1E57  
                   u5451 0774                     u5371 06FF                     u5355 065B  
                   u5291 050F                     u5531 1197                     u4716 108A  
                   u4660 101E                     u4820 0871                     u4740 0813  
                   u4580 1F04                     u4900 1F4C                     u3940 0F96  
                   u3860 0F3B                     u3772 0E58                     u3692 0D5B  
                   u2980 1E62                     u5460 0783                     u5380 0718  
                   u5540 1242                     _RCIF 0065                     u4725 10A4  
                   u4661 101D                     u4821 0870                     u4741 0812  
                   u4581 1F03                     u4901 1F4B                     u3861 0F3A  
                   u3845 0F19                     u3781 0E7E                     u3773 0E5F  
                   u3765 0E2B                     u3693 0D62                     u2885 0045  
                   u2981 1E61                     u2965 1E4A                     u5461 0782  
                   u5381 0717                     u5365 06C1                     u5285 04FE  
                   u5541 1241                     u4670 103A                     u4830 0876  
                   u4750 082A                     u4910 1F50                     u3950 0FB3  
                   u3782 0E85                     u5470 079B                     u5390 071F  
                   u5550 1267                     u4655 1DCF                     u4671 1039  
                   u4831 0875                     u4815 0863                     u4575 1EF5  
                   u4911 1F4F                     u3951 0FB2                     u3855 0F30  
                   u3791 0EAB                     u3783 0E8C                     u2895 0051  
                   u5471 079A                     u5391 071E                     u5551 1266  
                   u5607 1200                     u4680 1046                     u4760 0840  
                   u4840 1DDF                     u4920 1F70                     u3960 0FCD  
                   u3880 0F4F                     u3792 0EB2                     u5480 07B1  
                   u5560 1326                     u4681 1045                     u4761 083F  
                   u4841 1DDE                     u4921 1F6F                     u3961 0FCC  
                   u3945 0F91                     u3881 0F4E                     u3793 0EB9  
                   u2985 1E5E                     u5481 07B0                     u5465 077F  
                   u5561 1325                     u5617 120F                     u4770 0847  
                   u3970 0FEB                     u3890 0F54                     u5490 07C8  
                   u5570 134B                     u4691 1055                     u4771 0846  
                   u4755 0825                     u4595 1F06                     u3971 0FEA  
                   u3955 0FAF                     u3891 0F53                     u3875 0F3E  
                   u2995 1E69                     u5491 07C7                     u5475 0797  
                   u5571 134A                     u5555 1263                     u5627 1235  
                   u3980 1C3D                     u4692 1056                     u4860 1DF3  
                   u4940 1F91                     u5580 1365                     u3981 1C3C  
                   u4693 105B                     u4861 1DF2                     u4941 1F90  
                   u3965 0FC9                     u5581 1364                     u5637 1273  
                   u4694 105C                     u4790 0859                     u4870 1E05  
                   u3990 1376                     u4695 1061                     u4791 0858  
                   u4871 1E04                     u4855 1DE4                     u4935 1F83  
                   u3991 1375                     u5575 1347                     u5647 1288  
                   u4696 1062                     u4960 1FB3                     u4785 0849  
                   u4961 1FB2                     u5657 12E4                     u4890 1E22  
                   u4891 1E21                     u4875 1E01                     u4955 1FA5  
                   u5667 12F3                     u4980 1FC3                     u4885 1E14  
                   u4981 1FC2                     u5677 1319                     u5597 11A4  
                   u4990 1FC9                     u4991 1FC8                     u4975 1FB8  
                   _TXIF 0064                     _main 1169                     btemp 007E  
                   start 0000             _sprintf$1164 00AA            ___fltol@sign1 005A  
        __end_of___fladd 1800                    ?_main 0070          __end_of___awdiv 0078  
        __end_of___flneg 000F          __end_of___awmod 1E84          __end_of___flmul 1000  
        __end_of___flsub 1CBF          __end_of___fltol 0882                    _ANSEL 0188  
        __end_of___lldiv 1F46          ___awdiv@divisor 0077          __end_of___llmod 1E2B  
        __end_of___lwdiv 1D89          __end_of___lwmod 1D45          ___awdiv@counter 0020  
                  _RCREG 001A                    _SPBRG 0099                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  _TXREG 0019                    _canal 00D2                    _conv1 00CD  
                  _conv2 00C9          __end_of_dpowers 1896                    _scale 0940  
        __end_of_isdigit 1C58                    pclath 000A          __end_of_spiInit 1C82  
        __end_of_spiRead 100A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 07F3          __initialization 07F3             __end_of_main 136D  
                 ??_main 00C5     __size_of__tdiv_to_l_ 00BD     __size_of_conf_OSCCON 005C  
       ___llmod@dividend 0074                   ?_scale 003E         ___awdiv@dividend 0079  
                 _ANSELH 0189                   _SPBRGH 009A                   _TRISC3 043B  
                 _TRISE0 0448                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of___xxtofl 2000         __end_of__powers_ 183A  
                 ___flge 100A                   ___fleq 1D89                ??___fladd 005A  
                 ___wmul 1CBF                ??___awdiv 007B                ??___flneg 0074  
              ??___awmod 0074                ??___flmul 002C                ??___flsub 007E  
              ??___fltol 0055                ??___lldiv 0078                ??___llmod 0078  
              ??___lwdiv 007A                ??___lwmod 0074                   _fround 136D  
       ___awdiv@quotient 0022          ___awmod@divisor 0070          ___awmod@counter 0075  
                 _strlen 1C82                ??_isdigit 0070       __size_of__Umul8_16 0027  
       __end_of_spiWrite 0806                ??_spiInit 0073                ??_spiRead 0070  
              ??_sprintf 00A5               ___flge@ff1 0070               ___flge@ff2 0074  
           ___xxtofl@arg 007A             ___xxtofl@exp 0079             ___xxtofl@val 0070  
             ___fleq@ff1 0070               ___fleq@ff2 0074  __end_of__initialization 07FC  
             ___flneg@f1 0070               ___fltol@f1 0051           __pcstackCOMMON 0070  
          __end_of_scale 0C9F               __div_to_l_ 0882          __div_to_l_@exp1 0025  
        __div_to_l_@cntr 0024                  ??_scale 0042          __div_to_l_@quot 0020  
           sprintf@width 00B5               __pbssBANK1 00C9            __div_to_l_@f1 0070  
          __div_to_l_@f2 0074        __end_of__Umul8_16 1D0B               __pmaintext 1169  
                ?___flge 0070                  ?___fleq 0070                  ?___wmul 0070  
__size_of_spiReceiveWait 0007                  ?_fround 003E               _conf_USART 1C58  
                ?_strlen 0070                ?___xxtofl 0070                  _SSPSTAT 0094  
             __stringtab 1800        __end_of__npowers_ 186E               _scale$1163 004C  
              ?_spiWrite 0070          __size_of___flge 00A2          __size_of___fleq 004E  
                ___fladd 1578                  ___awdiv 000F                  ___flneg 0004  
                ___awmod 1E2B                  ___flmul 0C9F                  ___flsub 1C9B  
                ___fltol 0806                  ___lldiv 1EE0          __size_of___wmul 0025  
                ___llmod 1DD7                  ___lwdiv 1D45                  ___lwmod 1D0B  
        __size_of_fround 020B                  __ptext1 1C82                  __ptext2 0078  
                __ptext3 0940                  __ptext4 1E2B                  __ptext5 000F  
                __ptext6 1C46                  __ptext7 136D                  __ptext8 1D0B  
                __ptext9 1D45          __size_of_strlen 0019              ?__div_to_l_ 0070  
                _dpowers 186E                  _isdigit 1C46               ??___xxtofl 0074  
       ___awmod@dividend 0072                  _spiInit 1C6C                  _spiRead 1001  
                _sprintf 0078                  clrloop0 1C3F     end_of_initialization 07FC  
        ___lldiv@divisor 0070          ___lldiv@counter 007D                _RCSTAbits 0018  
             ??_spiWrite 0070           __tdiv_to_l_@f1 0070           __tdiv_to_l_@f2 0074  
                strlen@s 0074            ??__tdiv_to_l_ 0078              ?_conf_USART 0070  
              _PORTEbits 0009              ___fladd@grs 0065            ??_conf_OSCCON 0070  
          ___xxtofl@sign 0078              spiWrite@dat 0070              ___flmul@grs 0032  
              _TXSTAbits 0098      __size_of__div_to_l_ 00BE           _spiReceiveWait 1C37  
         __end_of___flge 10AC           __end_of___fleq 1DD7           __end_of___wmul 1CE4  
            _BAUDCTLbits 0187           __end_of_fround 1578           __end_of_strlen 1C9B  
    start_initialization 07F3      __end_of__tdiv_to_l_ 1169      __end_of_conf_OSCCON 1EE0  
    __size_of_conf_USART 0014          ___llmod@divisor 0070          ___llmod@counter 0079  
 __end_of_spiReceiveWait 1C3E                 ??___flge 0078                 ??___fleq 0078  
               ??___wmul 0074                __Umul8_16 1CE4                 ??_fround 0042  
          sprintf@tmpval 00B7                 ??_strlen 0072                ___fladd@a 0056  
              ___fladd@b 0052               fround@prec 0051                ___flmul@a 0028  
              ___flmul@b 0024                ___flsub@a 0066                ___flsub@b 006A  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00A0  
      __size_of___xxtofl 00BA              sprintf@flag 00B3              sprintf@eexp 00BB  
            sprintf@fval 00BD              sprintf@prec 00C2         ___lwdiv@dividend 0078  
        ?_spiReceiveWait 0070                 ?___fladd 0052                 ?___awdiv 0077  
               ?___flneg 0070                 ?___awmod 0070                 ?___flmul 0024  
               ?___flsub 0066                 ?___fltol 0051                 ?___lldiv 0070  
               ?___llmod 0070                __npowers_ 183A               ?__Umul8_16 0070  
               ?___lwdiv 0076                 ?___lwmod 0070        __size_of_spiWrite 0006  
              __pstrings 1800              __tdiv_to_l_ 10AC             ??__div_to_l_ 0078  
               ?_isdigit 0070              _conf_OSCCON 1E84                 ?_spiInit 0070  
               ?_spiRead 0070         ___lwdiv@quotient 007B                 ?_sprintf 00A0  
         __size_of_scale 035F     spiInit@sTransmitEdge 0072           ___wmul@product 0074  
              clear_ram0 1C3E                 _PIE1bits 008C       spiInit@sDataSample 0070  
               _PIR1bits 000C       __end_of__div_to_l_ 0940             ??_conf_USART 0070  
            __stringbase 1805        ___wmul@multiplier 0070       __end_of_conf_USART 1C6C  
            ??__Umul8_16 0072         __size_of___fladd 0288         __size_of___awdiv 0069  
       __size_of___flneg 000B         __size_of___awmod 0059         __size_of___flmul 0361  
       __size_of___flsub 0024         __size_of___fltol 007C         __size_of___lldiv 0066  
       __size_of___llmod 0054         __size_of___lwdiv 0044         __size_of___lwmod 003A  
            _fround$1161 004D              _fround$1162 0049       __end_of__stringtab 1806  
            _isdigit$977 0070               sprintf@val 00AF                 ___xxtofl 1F46  
       __size_of_isdigit 0012          ___lwdiv@divisor 0076          ___lwdiv@counter 007D  
               __ptext10 0C9F                 __ptext11 1CE4                 __ptext20 1578  
               __ptext12 10AC                 __ptext21 0004                 __ptext13 0882  
               __ptext22 100A                 __ptext14 1F46                 __ptext23 1D89  
               __ptext15 1CBF                 __ptext24 0800                 __ptext16 1DD7  
               __ptext25 1001                 __ptext17 1EE0                 __ptext26 1C37  
               __ptext18 0806                 __ptext27 1C6C                 __ptext19 1C9B  
               __ptext28 1C58                 __ptext29 1E84         __size_of_spiInit 0016  
       __size_of_spiRead 0009                 __powers_ 1806         __size_of_sprintf 077B  
          __size_of_main 0204                 _spiWrite 0800             spiInit@sType 0073  
      spiInit@sClockIdle 0071                 _voltaje1 00D7                 _voltaje2 00D3  
             _INTCONbits 000B                 isdigit@c 0071                 scale@scl 0050  
              sprintf@ap 00AE         __tdiv_to_l_@exp1 0025         __tdiv_to_l_@cntr 0024  
              sprintf@sp 00C1         __tdiv_to_l_@quot 0020         ___lwmod@dividend 0072  
       ___lldiv@dividend 0074         ??_spiReceiveWait 0070                stringcode 1800  
             _OSCCONbits 008F             ?__tdiv_to_l_ 0070   __Umul8_16@multiplicand 0070  
               sprintf@c 00C4                 sprintf@f 00A0         ___lldiv@quotient 0079  
        ___lwmod@divisor 0070             ?_conf_OSCCON 0070                 strlen@cp 0073  
        ___lwmod@counter 0075                 stringdir 1800                 stringtab 1800  
          ___fladd@signs 0062             ___fladd@aexp 0063             ___fladd@bexp 0064  
   __Umul8_16@multiplier 0078    conf_OSCCON@frecuencia 0072        __Umul8_16@product 0074  
